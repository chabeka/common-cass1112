<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd         
         http://www.springframework.org/schema/context 
         http://www.springframework.org/schema/context/spring-context-3.0.xsd">

   <!-- READER XML -->

   <bean id="xmlReader" scope="step"
      class="org.springframework.batch.item.xml.StaxEventItemReader">
      <property name="fragmentRootElementName" value="livre" />
      <property name="resource"
         value="file:#{jobParameters['xml.input.location']}" />
      <property name="unmarshaller" ref="jaxb2Marshaller" />
   </bean>

   <!-- WRITER XML -->

   <bean id="xmlWriter" scope="step"
      class="org.springframework.batch.item.xml.StaxEventItemWriter">
      <property name="rootTagName" value="bibliotheque" />
      <property name="resource"
         value="file:#{jobParameters['xml.output.location']}" />
      <property name="marshaller" ref="jaxb2Marshaller" />
      <property name="overwriteOutput" value="true" />
      <property name="headerCallback" ref="XMLHeaderCallback" />
      <property name="footerCallback" ref="XMLFooterCallback" />
   </bean>

   <!-- READER FILE -->

   <bean id="fileReader" scope="step"
      class="org.springframework.batch.item.file.FlatFileItemReader">
      <property name="resource"
         value="file:#{jobParameters['file.input.location']}" />
      <property name="lineMapper">
         <bean
            class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
            <property name="lineTokenizer">
               <bean
                  class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                  <property name="names" value="identifiant,titre,auteur" />
                  <property name="delimiter" value="," />
               </bean>
            </property>
            <property name="fieldSetMapper">
               <bean
                  class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                  <property name="prototypeBeanName" value="livre" />
               </bean>
            </property>
         </bean>
      </property>
   </bean>

   <bean id="livre" class="fr.urssaf.image.commons.spring.batch.model.flat.Livre"
      scope="prototype" />

   <!-- WRITER FILE -->

   <bean id="fileWriter" scope="step"
      class="org.springframework.batch.item.file.FlatFileItemWriter">
      <property name="resource"
         value="file:#{jobParameters['file.output.location']}" />
      <property name="lineAggregator">
         <!--
            <bean
            class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"
            />
         -->
         <bean
            class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
            <property name="delimiter" value="," />
            <property name="fieldExtractor">
               <bean
                  class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                  <property name="names" value="identifiant,titre,auteur" />
               </bean>
            </property>
         </bean>
      </property>
      <property name="headerCallback" ref="fileCallback" />
      <property name="footerCallback" ref="fileCallback" />
   </bean>

   <!-- JAXB2 MARSHALLER -->

   <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">

      <property name="contextPath"
         value="fr.urssaf.image.commons.spring.batch.model.xml" />

      <property name="schemas">
         <array>
            <value>classpath:schemas/livre.xsd</value>
         </array>
      </property>


   </bean>

</beans>
