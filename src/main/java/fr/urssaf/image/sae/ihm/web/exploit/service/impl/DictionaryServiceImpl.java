package fr.urssaf.image.sae.ihm.web.exploit.service.impl;

import java.util.List;

import me.prettyprint.hector.api.Keyspace;

import org.apache.commons.collections.ListUtils;

import fr.urssaf.image.commons.cassandra.support.clock.JobClockConfiguration;
import fr.urssaf.image.commons.cassandra.support.clock.JobClockSupport;
import fr.urssaf.image.commons.cassandra.support.clock.impl.JobClockSupportImpl;
import fr.urssaf.image.sae.ihm.web.exploit.service.DictionaryService;
import fr.urssaf.image.sae.metadata.exceptions.DictionaryNotFoundException;
import fr.urssaf.image.sae.metadata.referential.dao.DictionaryDao;
import fr.urssaf.image.sae.metadata.referential.model.Dictionary;
import fr.urssaf.image.sae.metadata.referential.support.DictionarySupport;

/**
 * Classe implémentant le service DictionaryService
 * 
 * 
 */
public class DictionaryServiceImpl implements DictionaryService {

   private DictionarySupport dictSupport;

   private JobClockSupport jobClock;


   /**
    * Methode permettant de récupérer tous les dictionnaires présents dans la
    * base Cassandra
    * 
    * @param keyspace
    *           keyspace à intérroger
    * @return List<Dictionary> liste de dictionnaires
    */
   @Override
   public final List<Dictionary> findAllDictionaries(Keyspace keyspace) {
      dictSupport = new DictionarySupport(new DictionaryDao(keyspace));
      return dictSupport.findAll();
   }

   /**
    * Methode permettant de récupérer un dictionnaire présent dans la base
    * Cassandra
    * 
    * @param keyspace
    *           keyspace à intérroger
    * @param dict identifiant du dictionnaire à trouver          
    * @return Dictionary un dictionnaire
    */
   @Override
   public final Dictionary findDictionary(String dict,
         Keyspace keyspace) {
      dictSupport = new DictionarySupport(new DictionaryDao(keyspace));
      return dictSupport.find(dict);
   }

   /**
    * Methode permettant de créer ou modifier un dictionnaire dans la base cassandra
    * 
    * @param dict
    *           un dictionnaire
    * @param clock
    *           JobClockConfiguration
    * @param keyspace
    *           keyspace à intérroger
    * 
    */
   @Override
   public final void createOrModifyDictionary(Dictionary dict,
         JobClockConfiguration clock, Keyspace keyspace) {
      dictSupport = new DictionarySupport(new DictionaryDao(keyspace));
      jobClock = new JobClockSupportImpl(keyspace, clock);
      
      try{
      
         Dictionary dictExist = dictSupport.find(dict.getId());
      // modification d'un dictionnaire on peut ajouter ou supprimer des valeurs
         List<String> elementAjout = ListUtils.subtract(dict.getEntries(), dictExist.getEntries());
         List<String> elementSup = ListUtils.subtract(dictExist.getEntries(), dict.getEntries());
         //suppression des éléments
         for(String sup : elementSup){
            if(!dict.getEntries().contains(sup)){
               dictSupport.deleteElement(dict.getId(), sup, jobClock.currentCLock());
            }
         }
         // Ajout des élements
         for(String ajout : elementAjout){
            if(!dictExist.getEntries().contains(ajout)){
               dictSupport.addElement(dict.getId(), ajout, jobClock.currentCLock());
            }
         }
      
      }catch(DictionaryNotFoundException ex){
         // ajout d'un nouveau dictionnaire
         for(String value : dict.getEntries()){         
            dictSupport.addElement(dict.getId(), value, jobClock.currentCLock());
         }
      }
      
      
   }

}
