package fr.urssaf.image.sae.ihm.web.exploit.saeservice;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.CertificateException;

import org.springframework.core.io.ClassPathResource;
import org.springframework.stereotype.Component;

import fr.urssaf.image.sae.client.vi.signature.KeyStoreInterface;

/**
 * Classe qui va fournir le KeyStore à la mécanique de production du VI pour la
 * consommation du service web SAE
 */
@Component
public class KeyStoreIhmExploit implements KeyStoreInterface {

   private static final String P12_CHEMIN = "certificats/IHM_EXPLOIT.p12";
   private static final String P12_PASSWORD = "cZkF41SnlCP1";

   private final KeyStore keystore;
   private final String alias;

   /**
    * Constructeur
    */
   public KeyStoreIhmExploit() {

      // Chargement du PKCS#12 livré avec l'IHM d'exploit

      // Le KeyStore et l'alias de la clé privée
      try {

         // Chargement du PKCS#12
         keystore = KeyStore.getInstance("PKCS12");
         InputStream inputStream = new ClassPathResource(P12_CHEMIN)
               .getInputStream();
         try {
            keystore.load(inputStream, P12_PASSWORD.toCharArray());
         } finally {
            inputStream.close();
         }

         // Détermine l'alias
         alias = keystore.aliases().nextElement();

      } catch (KeyStoreException e) {
         throw new IllegalStateException(e);
      } catch (FileNotFoundException e) {
         throw new IllegalStateException(e);
      } catch (NoSuchAlgorithmException e) {
         throw new IllegalStateException(e);
      } catch (CertificateException e) {
         throw new IllegalStateException(e);
      } catch (IOException e) {
         throw new IllegalStateException(e);
      }

   }

   /**
    * {@inheritDoc}
    */
   @Override
   public final String getAlias() {
      return this.alias;
   }

   /**
    * {@inheritDoc}
    */
   @Override
   public final KeyStore getKeystore() {
      return this.keystore;
   }

   /**
    * {@inheritDoc}
    */
   @Override
   public final String getPassword() {
      return P12_PASSWORD;
   }

}
