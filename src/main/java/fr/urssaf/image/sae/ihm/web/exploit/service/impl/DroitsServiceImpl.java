package fr.urssaf.image.sae.ihm.web.exploit.service.impl;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Collection;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter;
import com.thoughtworks.xstream.io.xml.StaxDriver;

import fr.urssaf.image.sae.ihm.web.exploit.modele.Action;
import fr.urssaf.image.sae.ihm.web.exploit.modele.ActionsUnitaires;
import fr.urssaf.image.sae.ihm.web.exploit.modele.Droit;
import fr.urssaf.image.sae.ihm.web.exploit.modele.Droits;
import fr.urssaf.image.sae.ihm.web.exploit.service.DroitsService;

/**
 * Classe implémentant le service DroitsService
 * 
 * 
 */
public class DroitsServiceImpl implements DroitsService {

   /**
    * Renvoie la liste de tous les droits : un pagm associé à une liste
    * d'actions
    * 
    * @param fichier
    *           Fichier contenant la liste des droits
    * 
    * @return Liste de tous les droits
    * @throws FileNotFoundException
    *            Exception générée si le fichier n'existe pas
    */
   @Override
   public final Droits charger(File fichier) throws FileNotFoundException {

      // Désérialisation des objets EcdeSource via Xstream
      StaxDriver staxDriver = new StaxDriver();
      XStream xstream = new XStream(staxDriver);

      xstream.registerConverter(new AbstractSingleValueConverter() {
         /**
          * Conversion
          */
         @Override
         public boolean canConvert(Class type) {
            return type == Action.class;
         }
         /**
          * Conversion
          */
         @Override
         public Object fromString(String str) {
            return new Action(str);
         }
         /**
          * Conversion
          */
         public String toString(Object obj) {
            return ((Action) obj).getValeur();
         }
      });

      xstream.alias("action", Action.class);
      xstream.alias("actionsUnitaires", Collection.class);
      xstream.alias("droit", Droit.class);
      xstream.alias("droits", new Droit[] {}.getClass());

      xstream.addImplicitCollection(ActionsUnitaires.class, "action",
            Action.class);

      Droits droits = new Droits();
      droits.setDroits((Droit[]) xstream.fromXML(new FileInputStream(fichier)));

      return droits;

   }

}
