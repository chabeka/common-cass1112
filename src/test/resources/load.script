/*This file contains the Docuabse Keyspace that can be created using the
cassandra-cli command line interface as follows.

bin/cassandra-cli -host localhost --file conf/schema-sample.txt

The cassandra-cli includes online help that explains the statements below. You can
accessed the help without connecting to a running cassandra instance by starting the
client and typing "help;"

Convert String to hex:
NB: http://www.string-functions.com/string-hex.aspx
*/

create keyspace Docubase
    with strategy_options=[{replication_factor:1}]
    and placement_strategy = 'org.apache.cassandra.locator.SimpleStrategy';

use Docubase;

create column family TermInfo
    with comparator = 'CompositeType(UUIDType, UUIDType, UTF8Type)';

create column family TermInfoRangeDate
    with comparator = 'CompositeType(UTF8Type, UUIDType, UTF8Type)';
    
create column family TermInfoRangeDatetime
    with comparator = 'CompositeType(UTF8Type, UUIDType, UTF8Type)';
    
create column family TermInfoRangeDouble
    with comparator = 'CompositeType(LongType, UUIDType, UTF8Type)';
    
create column family TermInfoRangeFloat
    with comparator = 'CompositeType(IntegerType, UUIDType, UTF8Type)';
    
create column family TermInfoRangeInteger
    with comparator = 'CompositeType(IntegerType, UUIDType, UTF8Type)';
    
create column family TermInfoRangeLong
    with comparator = 'CompositeType(LongType, UUIDType, UTF8Type)';
    
create column family TermInfoRangeString
    with comparator = 'CompositeType(UTF8Type, UUIDType, UTF8Type)';
    
create column family TermInfoRangeUUID
    with comparator = 'CompositeType(UTF8Type, UUIDType, UTF8Type)';


create column family DocInfo 
    with default_validation_class = BytesType;
    
create column family DocInfoFreezer
    with comparator = 'CompositeType(UTF8Type,UUIDType,UTF8Type)';

/* refUUID in hex = 72656655554944 */
create column family Documents
    with comparator = BytesType
    and column_metadata = [
    {column_name: 72656655554944, validation_class: BytesType, index_name: refUUID_idx, index_type: KEYS}
    ];


/* 
baseId in hex = 626173654964
categoryReference in hex = 63617465676f72795265666572656e6365 
*/
create column family BaseCategoriesReference
    with comparator = BytesType
    and rows_cached = 1000
    and column_metadata = [
    {column_name : 626173654964,validation_class : BytesType, index_name: baseId_idx,  index_type : KEYS},
    {column_name : 63617465676f72795265666572656e6365,validation_class : BytesType,index_name: categoryReference_idx, index_type : KEYS}
    ];

/* 
name in hex = 6e616d65
*/
create column family CategoriesReference
    with comparator = BytesType
    and rows_cached = 1000
    and column_metadata = [
    {column_name : 6e616d65,validation_class : BytesType,index_name: name_idx,index_type : KEYS}
    ];

create column family BasesReference
    with comparator = BytesType
    and rows_cached = 100
    and keys_cached = 0;

create column family CompositeIndexesReference
    with comparator = BytesType
    and rows_cached = 100
    and keys_cached = 0;

create column family IndexReference
    with comparator = BytesType
    and rows_cached = 100
    and keys_cached = 0;

create column family StaticDictionaries
    with comparator = UTF8Type
    and keys_cached = 20000;

create column family IndexCounter
    with comparator = 'CompositeType(UTF8Type,UTF8Type)'
    and rows_cached = 0
    and keys_cached = 0;

create column family SystemEventLog
    with comparator = BytesType
    and rows_cached = 0
    and keys_cached = 0;
    
create column family SystemEventLogByTime
    with comparator = 'CompositeType(DateType,UUIDType)'
    and rows_cached = 0
    and keys_cached = 0;

/*
docUUID in hex = 
*/
create column family DocEventLog
    with comparator = BytesType
    and rows_cached = 0
    and keys_cached = 20000
    and column_metadata = [
    {column_name : 646f6355554944,validation_class : UUIDType, index_name: DocEventLog_docUUID_index,index_type : KEYS}
    ];

create column family DocEventLogByTime
    with comparator = 'CompositeType(DateType,UUIDType)'
     and rows_cached = 0
     and keys_cached = 0;

create column family User
    with comparator = BytesType
     and rows_cached = 5000
     and keys_cached = 0;
    
/* Creation UserGroup column family */
create column family UserGroup
    with comparator = BytesType;
    
/* ADMIN group creation */
set UserGroup[ascii('ADMIN')][ascii('groupName')] = 'ADMIN';
set UserGroup[ascii('ADMIN')][ascii('TYPE_ATTRIBUTE_NAME')] = 'com.docubase.dfce.core.impl.UserGroupModel';

set User[ascii('_ADMIN')][ascii('login')] = '_ADMIN';
set User[ascii('_ADMIN')][ascii('hashedPassword')] = '7b0c998547fb9ec2fd0544b49b5ef994cf3ed2b16522a1c99ef30f7cae4a82a5';
set User[ascii('_ADMIN')][ascii('TYPE_ATTRIBUTE_NAME')] = 'com.docubase.dfce.core.impl.UserModel';
set User[ascii('_ADMIN')][ascii('enabled')] = bytes(1);
set User[ascii('_ADMIN')][ascii('accountNonExpired')] = bytes(1);
set User[ascii('_ADMIN')][ascii('credentialsNonExpired')] = bytes(1);
set User[ascii('_ADMIN')][ascii('accountNonLocked')] = bytes(1);
set User[ascii('_ADMIN')][ascii('groups.size')] = integer(1);
set User[ascii('_ADMIN')][ascii('groups.type')] = 'SET';
set User[ascii('_ADMIN')][ascii('groups.0')] = 'ADMIN';

create column family Versions 
	with comparator = BytesType;
	
create column family UserSearchFilters 
	with comparator = BytesType;
	
create column family LifeCycleRules 
	with comparator = BytesType;

/* à virer lors de la refactorisation de Notes/Annotations */
create column family Notes
    with comparator = BytesType;

create column family Annotations
    with comparator = BytesType;
    
create column family Jobs
    with comparator = BytesType;

