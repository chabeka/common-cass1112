<?xml version="1.0" encoding="UTF-8"?>
<Tests xmlns="http://www.cirtil.fr/saeIntegration/tests"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.cirtil.fr/saeIntegration/tests ListeCasTests.xsd">

   <!-- ======================================================== -->
   <!-- Tests techniques -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Tests techniques</Nom>
      <Id>995</Id>
      <CasTests>

         <CasTest>
            <id>995</id>
            <code>995-Tests techniques</code>
            <description>
               Tests techniques (opérations ping, pingSecure, et SoapFault d'authentification) 
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>

   </Categorie>


   <!-- ======================================================== -->
   <!-- Capture unitaire -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Capture unitaire</Nom>
      <Id>100</Id>
      <CasTests>
         <CasTest>
            <id>100</id>
            <code>100-CaptureUnitaire-TestLibre</code>
            <description>
               Test libre de la capture unitaire => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
         </CasTest>
      </CasTests>

   </Categorie>



   <!-- ======================================================== -->
   <!-- Stockage Unitaire -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Stockage Unitaire</Nom>
      <Id>2799</Id>
      <CasTests>
         <CasTest>
            <id>2799</id>
            <code>2799-StockageUnitaire-TestLibre</code>
            <description>
               Test libre du stockage unitaire => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 2700-CaptureStockage-TestLibre"</luceneExempleList>
         </CasTest>

      </CasTests>

   </Categorie>

   <!-- ======================================================== -->
   <!-- Récupération du document d'origine -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Récupération du document origine</Nom>
      <Id>2800</Id>
      <CasTests>
         <CasTest>
            <id>2800</id>
            <code>2800-getDocFormatOrigine-TestLibre</code>
            <description>
               Test libre de récupération du format d'origine à partir de l'UUID du parent                
            </description>
            <implemente>true</implemente>
         </CasTest>
      </CasTests>

   </Categorie>
   <!-- ======================================================== -->
   <!-- Capture de masse -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Capture de masse</Nom>
      <Id>200</Id>
      <CasTests>

         <CasTest>
            <id>200</id>
            <code>200-CaptureMasse-TestLibre</code>
            <description>
               Test libre de la capture de masse => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>

   </Categorie>

   <!-- ======================================================== -->
   <!-- Notes -->
   <!-- ======================================================== -->

   <Categorie>
      <Nom>Notes</Nom>
      <Id>2500</Id>
      <CasTests>

         <CasTest>
            <id>2500</id>
            <code>2500-Note-TestLibre</code>
            <description>
               Test libre de la gestion des notes => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 2500-Note-TestLibre"</luceneExemple>
         </CasTest>  

      </CasTests>
   </Categorie>


   <!-- ======================================================== -->
   <!-- Recherche -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Recherche</Nom>
      <Id>300</Id>
      <CasTests>

         <CasTest>
            <id>300</id>
            <code>300-Recherche-TestLibre</code>
            <description>
               Test libre de la recherche => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:2.3.1.1.12 AND DateArchivage:2011-09-01</luceneExemple>
         </CasTest>

      </CasTests>

   </Categorie>

   <!-- ======================================================== -->
   <!-- Recherche avec nombre de résultats -->
   <!-- ======================================================== -->
   <Categorie>
      <Nom>Recherche avec nombre de résultats</Nom>
      <Id>2100</Id>
      <CasTests>
         <CasTest>
            <id>2100</id>
            <code>2100-Recherche-Avec-Nb-Resultats-TestLibre</code>
            <description>
               Test libre de la recherche avec nombre de résultats 
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:2.3.1.1.12 AND DateArchivage:2011-09-01</luceneExemple>
         </CasTest>
      </CasTests>
   </Categorie>


   <!-- ======================================================== -->
   <!-- Recherche par itérateur -->
   <!-- ======================================================== -->
   <Categorie>
      <Nom>Recherche par itérateur</Nom>
      <Id>2300</Id>
      <CasTests>
         <CasTest>
            <id>2300</id>
            <code>2300-Recherche-Par-Iterateur-TestLibre</code>
            <description>
               Test libre de la recherche par itérateur 
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>
   </Categorie>

   <!-- ======================================================== -->
   <!-- Isolation des données -->
   <!-- ======================================================== -->
   <Categorie>
      <Nom>Isolation des données</Nom>
      <Id>2200</Id>
      <CasTests>
         <CasTest>
            <id>2200</id>
            <code>2200-IsolationDonnees-TestLibre</code>
            <description>
               Test libre de l'isolation de données
            </description>
            <implemente>true</implemente>
            <luceneExemple>DateCreation:[201501010 201502010] AND DomaineCotisant:true</luceneExemple>
         </CasTest>
      </CasTests>
   </Categorie>

   <!-- ======================================================== -->
   <!-- Consultation -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Consultation</Nom>
      <Id>400</Id>
      <CasTests>

         <CasTest>
            <id>400</id>
            <code>400-Consultation-TestLibre</code>
            <description>
               Test libre de la consultation => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>

   </Categorie>

   <!-- ======================================================== -->
   <!-- Consultation affichable -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Consultation affichable</Nom>
      <Id>2099</Id>
      <CasTests>

         <CasTest>
            <id>2099</id>
            <code>2000-Consultation affichable-TestLibre</code>
            <description>
               Test libre de la consultation affichable => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>
   </Categorie>

   <!-- ======================================================== -->
   <!-- Droits -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Droits - 1100</Nom>
      <Id>5</Id>
      <CasTests>

         <CasTest>
            <id>1100</id>
            <code>1100-Droits-TestLibre</code>
            <description>
               Test libre des droits => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1100-Droits-TestLibre"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>1101</id>
            <code>1101-Droits-Conformite-Archivage-Unitaire-ATT-VIGI</code>
            <description>
               Test qui doit permettre de valider que la fonctionnalité d’archivage unitaire est autorisée sur un PRMD précis 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1101-Droits-Conformite-Archivage-Unitaire-ATT-VIGI"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1102</id>
            <code>1102-Droits-Conformite-Archivage-Masse -ATT-VIGI</code>
            <description>
               Permet de valider qu’une fonctionnalité d’archivage de masse est autorisée sur un PRMD précis. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1102-Droits-Conformite-Archivage-Masse-ATT-VIGI"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1103</id>
            <code>1103-Droits-Conformite-Archivage-ATT-VIGI</code>
            <description>
               Permet de valider que les fonctionnalités d’archivage unitaire et archivage de masse sont autorisées sur un PRMD précis.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1103-Droits-Conformite-Archivage-ATT-VIGI"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1104</id>
            <code>1104-Droits-Conformite-Recherche-ATT-VIGI</code>
            <description>
               ce test permet de valider que les fonctionnalités de recherche autorisées sur un PRMD précis 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1104-Droits-Conformite-Recherche-ATT-VIGI"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1105a</id>
            <code>1105-Droits-Conformite-Consultation-ATT-VIGI</code>
            <description>
               ce test permet de valider que que les opérations « consultation » et « consultationMTOM » fonctionnent correctement avec les droits de consultation autorisées sur un PRMD précis.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>1105b</id>
            <code>1105-Droits-Conformite-Consultation-MTOM-ATT-VIGI</code>
            <description>
               ce test permet de valider que que les opérations « consultation » et « consultationMTOM » fonctionnent correctement avec les droits de consultation autorisées sur un PRMD précis.
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1106</id>
            <code>1106-Droits-Conformite-All-ATT-VIGI</code>
            <description>
               ce test permet de valider toutes les fonctionnalités autorisées sur un PRMD précis. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1106-Droits-Conformite-All-ATT-VIGI"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1107</id>
            <code>1107-Droits-Conformite-Archivage-Unitaire-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage unitaire est autorisée sur un PRMD précis 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1107-Droits-Conformite-Archivage-Unitaire-ATT-AEPL"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1108</id>
            <code>1108-Droits-Conformite-Archivage-Masse-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage de masse est autorisée sur un PRMD précis
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1108-Droits-Conformite-Archivage-Masse-ATT-AEPL"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1109</id>
            <code>1109-Droits-Conformite-Archivage-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage, aussi bien l’archivage unitaire que l’archivage de masse, est autorisé sur un PRMD précis
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1109-Droits-Conformite-Archivage-ATT-AEPL"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1110</id>
            <code>1110-Droits-Conformite-Recherche-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité de recherche est autorisée sur un PRMD précis
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1110-Droits-Conformite-Recherche-ATT-AEPL"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1111a</id>
            <code>1111-Droits-Conformite-Consultation-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisée sur un PRMD précis
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1111b</id>
            <code>1111-Droits-Conformite-Consultation-MTOM-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisée sur un PRMD précis
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1112</id>
            <code>1112-Droits-Conformite-All-ATT-AEPL</code>
            <description>
               ce test permet de valider toutes les fonctionnalités autorisées sur un PRMD précis
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1112-Droits-Conformite-All-ATT-AEPL"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1113</id>
            <code>1113-Droits-Conformite-Archivage-Unitaire-UNE-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage unitaire est autorisée sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1113-Droits-Conformite-Archivage-Unitaire-UNE-META" AND Siren:"3090000001"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1114</id>
            <code>1114-Droits-Conformite-Archivage-Masse-UNE-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage de masse est autorisée sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1114-Droits-Conformite-Archivage-Masse-UNE-META" AND Siren:"3090000001"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1115</id>
            <code>1115-Droits-Conformite-Archivage-UNE-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage unitaire est autorisée sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1115-Droits-Conformite-Archivage-UNE-META" AND Siren:"3090000001"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1116</id>
            <code>1116-Droits-Conformite-Recherche-UNE-META</code>
            <description>
               ce test permet de valider la fonctionnalité de recherche est autorisé sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1116-Droits-Conformite-Recherche-UNE-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1117a</id>
            <code>1117-Droits-Conformite-Consultation-UNE-META</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisé sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1116-Droits-Conformite-Recherche-UNE-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1117b</id>
            <code>1117-Droits-Conformite-Consultation-MTOM-UNE-META</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisé sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1116-Droits-Conformite-Recherche-UNE-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1118</id>
            <code>1118-Droits-Conformite-All-UNE-META</code>
            <description>
               ce test permet de valider toutes les fonctionnalités autorisées sur un PRMD précis
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1118-Droits-Conformite-All-UNE-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1119</id>
            <code>1119-Droits-Conformite-Archivage-Unitaire-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage unitaire est autorisée sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1119-Droits-Conformite-Archivage-Unitaire-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1120</id>
            <code>1120-Droits-Conformite-Archivage-Masse-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage de masse est autorisée sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1120-Droits-Conformite-Archivage-Masse-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1121</id>
            <code>1121-Droits-Conformite-Archivage-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage, aussi bien l’archivage unitaire que l’archivage de masse, est autorisé sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1121-Droits-Conformite-Archivage-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1122</id>
            <code>1122-Droits-Conformite-Recherche-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité de recherche est autorisé sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1122-Droits-Conformite-Recherche-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1123a</id>
            <code>1123-Droits-Conformite-Consultation-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisé sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1123-Droits-Conformite-Consultation-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1123b</id>
            <code>1123-Droits-Conformite-Consultation-MTOM-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisé sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1123-Droits-Conformite-Consultation-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1124</id>
            <code>1124-Droits-Conformite-All-PLUSIEURS-META</code>
            <description>
               ce test permet de valider toutes les fonctionnalités autorisées sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1124-Droits-Conformite-All-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1125</id>
            <code>1125-Droits-Conformite-Recherche-PRMD</code>
            <description>
               Ce test permet de valider que la fonctionnalité de recherche renvoie bien les documents autorisés sur un PRMD.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1125-Droits-Conformite-Recherche-PRMD"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1126</id>
            <code>1126-Droits-Conformite-Consultation-PRMD</code>
            <description>
               Ce test permet de valider que la fonctionnalité de consultation est autorisé sur un PRMD alors que la requête renvoie plus de documents.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1126-Droits-Conformite-Consultation-PRMD"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1127</id>
            <code>1127-Droits-Conformite-Archivage-Unitaire-PRMD-DYNA</code>
            <description>
               ce test permet de valider la fonctionnalité d’archivage unitaire est autorisée sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1127-Droits-Conformite-Archivage-Unitaire-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1128</id>
            <code>1128-Droits-Conformite-Archivage-Masse-PRMD-DYNA </code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage de masse est autorisée sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1128-Droits-Conformite-Archivage-Masse-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1129</id>
            <code>1129-Droits-Conformite-Archivage-PRMD-DYNA</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage, aussi bien l’archivage unitaire que l’archivage de masse, est autorisé sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1129-Droits-Conformite-Archivage-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1130</id>
            <code>1130-Droits-Conformite-Recherche-PRMD-DYNA</code>
            <description>
               ce test permet de valider que la fonctionnalité de recherche est autorisée sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1130-Droits-Conformite-Recherche-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1131a</id>
            <code>1131-Droits-Conformite-Consultation-PRMD-DYNA</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisée sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1130-Droits-Conformite-Recherche-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1131b</id>
            <code>1131-Droits-Conformite-Consultation-MTOM-PRMD-DYNA</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisée sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1130-Droits-Conformite-Recherche-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1132</id>
            <code>1132-Droits-Conformite-All-PRMD-DYNA</code>
            <description>
               ce test permet de valider toutes les fonctionnalités autorisées sur un PRMD dynamique. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1132-Droits-Conformite-All-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1133</id>
            <code>1133-Droits-Conformite-Plusieurs-PAGM</code>
            <description>
               ce test permet de valider que l’utilisation de 2 PAGM fonctionne dans notre test on testera la concaténation d’un PAGM qui autorise l’archivage unitaire et un archivage de masse
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1133-Droits-Conformite-Plusieurs-PAGM"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1134</id>
            <code>1134-Droits-Conformite-Archivage-Masse-PRMD-DYNA-MULTI</code>
            <description>
               ce test permet de valider l’archivage de masse avec un PRMD dynamique sur plusieurs métadonnées dynamiques fonctionne bien
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1134-Droits-Conformite-Archivage-Masse-PRMD-DYNA-MULTI"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1150</id>
            <code>1150-Droits-Toutes-Actions-KO-CS-Inconnu</code>
            <description>
               Ce test a pour objectif de vérifier le contrôle de l’existence du CS demandé en utilisant une action unitaire est correctement réalisé pour l’archivage unitaire, l’archivage de masse, la recherche et la consultation.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1150-Droits-Toutes-Actions-KO-CS-INCONNU"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1151</id>
            <code>1151-Droits-Archivage-Unitaire-KO-PAGM-Inconnu</code>
            <description>
               Ce test a pour objectif de vérifier le contrôle de l’existence du PAGM demandé en utilisant une action unitaire ici l’archivage unitaire 
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1152</id>
            <code>1152-Droits-Archivage-Unitaire-KO-PRMD-Innacessible</code>
            <description>
               ce test permet de valider que les fonctionnalités de recherche autorisées sur un PRMD précis 
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1153</id>
            <code>1153-Droits-Archivage-Masse-KO-PRMD-Innacessible</code>
            <description>
               ce test permet de vérifier l’application du contrôle du PRMD à partir d’un CS donné et d’un PAGM sur l’action unitaire archivage de masse fonctionne correctement
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1153-Droits-Archivage-Masse-KO-PRMD-Innacessible"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1154</id>
            <code>1154-Droits-Archivage-Masse-KO</code>
            <description>
               ce test permet de vérifier toutes les actions unitaires sachant que dans le PAGM que l’on utilise on n’a pas donné la possibilité d’utiliser l’archivage de masse.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1154-Droits-Archivage-Masse-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1155</id>
            <code>1155-Droits-Archivage-Masse-KO-PRMD-DYNA-INNACCESSIBLE</code>
            <description>
               ce test permet de valider l’archivage de masse avec un PRMD dynamique sur plusieurs métadonnées dynamiques refuse l’intégration de masse si une valeur dynamique ne respecte pas la contrainte.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1155-Droits-Archivage-Masse-KO-PRMD-DYNA-INNACCESSIBLE"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1156a</id>
            <code>1156-Droits-Consultation-KO-PRMD-DYNA-INNACCESSIBLE</code>
            <description>
               ce test permet de valider la consultation avec un PRMD dynamique sur plusieurs métadonnées dynamiques. Aucune consultation réalisée si une valeur dynamique ne respecte pas la contrainte.
            </description>
            <implemente>true</implemente>
         </CasTest>
      </CasTests>

   </Categorie>


   <!-- ======================================================== -->
   <!-- SAE - Modification -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>SAI - Modification - 1700</Nom>
      <Id>6</Id>
      <CasTests>

         <CasTest>
            <id>1799</id>
            <code>1799-SAI-Modification-TestLibre</code>
            <description>
               SAI - Test libre de la modification 
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1700</id>
            <code>1700-Ged-Technique-OK-Modification-Valeur-Meta</code>
            <description>
               Le but de ce test est de vérifier qu’il est possible de modifier la valeur d’une métadonnée standard. Si la métadonnée a déjà une valeur celle-ci sera écrasée. On effectuera donc l’opération de capture unitaire puis une modification et enfin une recherche afin de vérifier que la modification a bien été prise en compte.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 1700-Ged-Technique-OK-Modification-Meta"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 1700-Ged-Technique-Modifiee"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>1701</id>
            <code>1701-Ged-Technique-OK-Suppression-Valeur-Meta</code>
            <description>
               Le but de ce test est de vérifier qu’il est possible d’enlever sans remettre une valeur à une métadonnée standard. En d’autres termes vider la métadonnée. On effectuera donc l’opération de capture unitaire puis une suppression et enfin une recherche afin de vérifier que la suppression a bien été prise en compte.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1701-Ged-Technique-OK-Meta-Retrait-Valeur"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1702</id>
            <code>1702-Ged-Technique-OK-Modification-Valeur-Meta-Avec-Regle</code>
            <description>
               Le but de ce test est de vérifier qu’il est possible de modifier la valeur d’une métadonnée qui a une règle de gestion. On effectuera donc l’opération de capture unitaire puis une modification du CodeRND. Enfin on lancera une recherche afin de vérifier que la modification des métadonnées impactées par la règle de gestion a bien été faite.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1702-Ged-Technique-OK-Modification-Valeur-Meta-Avec-Regle"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1703</id>
            <code>1703-Ged-Technique-OK-Ajout-Valeur-Meta-Vide</code>
            <description>
               Le but de ce test est de vérifier qu’il est possible d’ajouter une valeur à une métadonnée vide pour un document donné. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1703-Ged-Technique-OK-Ajout-Valeur-Meta-Vide"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1704</id>
            <code>1704-Ged-Technique-OK-Ajout-Valeur-Meta-Vide-Dico</code>
            <description>
               Le but de ce test est de vérifier qu’il est possible d’ajouter une valeur à une métadonnée vide pour un document donné. La particularité de ce test par rapport au précédent c’est que la métadonnée à laquelle on donne une valeur a un dictionnaire. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1704-Ged-Technique-OK-Ajout-Valeur-Meta-Vide-Dico"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1705</id>
            <code>1705-Ged-Technique-OK-Suppression-Valeur-Meta-Vide</code>
            <description>
               Le but de ce test est de vérifier que le cas de suppression d’une valeur non renseigné est géré. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1705-Ged-Technique-OK-Suppression-Valeur-Meta-Vide"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1750</id>
            <code>1750-Ged-Technique-KO-Modification-Meta-Interdite</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de modifier certaines métadonnées telles que le Hash, le Type de Hash. Dans notre test nous prendrons le Type de Hash.
               On effectuera donc l’opération de capture unitaire puis une tentative de modification de la métadonnée TypeHash. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1750-Ged-Technique-KO-Modification-Valeur-Meta-Interdite"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1751</id>
            <code>1751-Ged-Technique-KO-Suppression-Valeur-Meta-Interdite</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de supprimer une métadonnée obligatoire à l’archivage. Dans notre exemple nous prendrons le Titre. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1751-Ged-Technique-KO-Suppression-Valeur-Meta-Interdite"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1753</id>
            <code>1753-Ged-Technique-KO-Ajout-Valeur-Format-Non-Autorise</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible d’ajouter une valeur à une métadonnée d’un document archivé en ne respectant pas le format. Dans notre exemple nous prendrons la DateCourrierV2 que nous tenterons de renseigner dans un format autre que le format yyyy-mm-dd 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1753-Ged-Technique-KO-Ajout-Valeur-Format-Non-Autorise"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1755</id>
            <code>1755-Ged-Technique-KO-Modification-Valeur-Format-Non-Autorise</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de modifier une valeur à une métadonnée d’un document archivé en ne respectant pas le format. Dans notre exemple nous prendrons la DateCourrierV2 que nous tenterons de modifier dans un format autre que le format yyyy-mm-dd 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1755-Ged-Technique-KO-Modification-Valeur-Format-Non-Autorise"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1756</id>
            <code>1756-Ged-Technique-KO-Ajout-Valeur-Meta-Vide-DFCE-KO</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible d’ajouter une valeur à une métadonnée vide pour un document donné quand DFCE est arrêté.                 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1756-Ged-Technique-KO-Ajout-Valeur-Meta-Vide-DFCE-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1757</id>
            <code>1757-Ged-Technique-KO-Modification-Valeur-Meta-DFCE-KO</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de modifier une valeur à une métadonnée pour un document donné quand DFCE est arrêté.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1757-Ged-Technique-KO-Modification-Valeur-Meta-DFCE-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1758</id>
            <code>1758-Ged-Technique-KO-Suppression-Valeur-Meta-DFCE-KO</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de supprimer une valeur à une métadonnée pour un document donné quand DFCE est arrêté.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1758-Ged-Technique-KO-Suppression-Valeur-Meta-DFCE-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1759</id>
            <code>1759-Ged-Technique-KO-AMS-Meme-Meta</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de faire : un ajout, une modification et une suppression d’une valeur sur la même métadonnée pour un document donné.  
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1759-Ged-Technique-KO-AMS-Meme-Meta"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1760</id>
            <code>1760-Ged-Technique-KO-AM-Meme-Meta</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de faire : un ajout et une modification d’une valeur sur la même métadonnée pour un document donné.  
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1760-Ged-Technique-KO-AM-Meme-Meta"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1761</id>
            <code>1761-Ged-Technique-KO-AS-Meme-Meta</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de faire : un ajout et une suppression d’une valeur sur la même métadonnée pour un document donné.  
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1761-Ged-Technique-KO-AS-Meme-Meta"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1762</id>
            <code>1762-Ged-Technique-KO-MS-Meme-Meta</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de faire : une modification et une suppression d’une valeur sur la même métadonnée pour un document donné.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1762-Ged-Technique-KO-MS-Meme-Meta"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1763</id>
            <code>1763-Ged-Technique-KO-Modification-Meta-Inexistante</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de faire une modification sur une métadonnée inexistante.  
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1763-Ged-Technique-KO-Modification-Meta-Inexistante"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1764</id>
            <code>1764-Ged-Technique-KO-Modification-Meta-Doc-Inexistant</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de faire une modification sur une métadonnée inexistante.  
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1764-Ged-Technique-KO-Modification-Meta-Doc-Inexistant"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1765</id>
            <code>1765-Ged-Technique-KO-Suppression-Meta-Inexistante</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de supprimer une métadonnée qui n’existe pas. Dans notre exemple nous prendrons le Titi.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1765-Ged-Technique-KO-Suppression-Meta-Inexistante"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1766</id>
            <code>1766-Ged-Technique-KO-Ajout-Meta-Doc-Inexistant</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible d’ajouter une métadonnée sur un document inexistant.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1766-Ged-Technique-KO-Ajout-Meta-Doc-Inexistant"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1767</id>
            <code>1767-Ged-Technique-KO-Suppression-Meta-Doc-Inexistant</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de supprimer une métadonnée sur un document inexistant.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1767-Ged-Technique-KO-Suppression-Meta-Doc-Inexistant"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1768</id>
            <code>1768-Ged-Technique-KO-Modification-Valeur-CodeRND-Inconnu</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de modifier la valeur de la métadonnée CodeRND d’un document archivé par une valeur inconnue de l’ADRN.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1768-Ged-Technique-KO-Modification-Valeur-CodeRND-Inconnu"</luceneExemple>
         </CasTest>


      </CasTests>

   </Categorie>

   <!-- ======================================================== -->
   <!-- SAE - Suppression -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>SAI - Suppression - 1600</Nom>
      <Id>7</Id>
      <CasTests>

         <CasTest>
            <id>1699</id>
            <code>1699-SAI-Suppression-TestLibre</code>
            <description>
               SAI - Test libre de la suppression 
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1600</id>
            <code>1600-Ged-Technique-OK-Suppression-Doc-Existant</code>
            <description>
               Ce test permet de vérifier que le document a bien été supprimé. On commencera par stocker un document, vérifier que ce document est bien présent. Puis on le supprimera et on vérifiera qu’il a bien disparu.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1600-Ged-Technique-OK-Suppression-Doc-Existant"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1601</id>
            <code>1601-Ged-Technique-OK-Suppression-Doc-Existant-Arret-DFCE</code>
            <description>
               Ce test permet de vérifier que le document n’a pas été supprimé car DFCE est arrêté. On commencera par stocker un document, vérifier que ce document est bien présent. Puis on tentera de le supprimer et on vérifiera qu’il est toujours bien présent. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1601-Ged-Technique-OK-Suppression-Doc-Existant-Arret-DFCE"</luceneExemple>
         </CasTest>

      </CasTests>

   </Categorie>

   <!-- ======================================================== -->
   <!-- SAE - Transfert -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>SAI - Transfert - 1900</Nom>
      <Id>10</Id>
      <CasTests>

         <CasTest>
            <id>1901</id>
            <code>1901-TRANSFERT-OK</code>
            <description>
               Le but de ce test est de voir que toutes les informations attendues sont justes, particulièrement la mise à jour des registres et la création des nouvelles métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1901-TRANSFERT-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1950</id>
            <code>1950-T-KO-RECHERCHE-KO</code>
            <description>
               L’UUID passé en paramètre pour le transfert de la GNT vers la GNS est inexistant ainsi la recherche va échouer et le transfert ne va pas pouvoir se faire.
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1951</id>
            <code>1951-T-KO-STOCKAGE-GNS-KO</code>
            <description>
               Ce test consiste à lancer un transfert vers la base GNS hors-service.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1951-Transfert-KO-STOCKAGE-GNS-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1952</id>
            <code>1952-T-KO-SUPPRESSION-GNT-KO</code>
            <description>
               Ce test consiste à lancer un transfert qui ira jusqu’à la copie du document dans la GNS mais qui n’arrivera pas à supprimer le document dans la GNT.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1952-Transfert-KO-Suppression-GNT-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1999</id>
            <code>1999-SAI-TRANSFERT-TestLibre</code>
            <description>
               SAI - Test libre du transfert 
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>

   </Categorie>

   <!-- ======================================================== -->
   <!-- SAE - ActivationDocumentArchivable -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Activation Document Archivable - 2400</Nom>
      <Id>17</Id>
      <CasTests>

         <CasTest>
            <id>2401</id>
            <code>2401-ActivationDocumentArchivable-NumeroIdArchivage-Present</code>
            <description>
               SAE - Activation DocumentArchivable NumeroIdArchivage Present 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 2401-ActivationDocumentArchivable-NumeroIdArchivage-Present"</luceneExemple>
         </CasTest>

      </CasTests>

   </Categorie>


   <!-- ======================================================== -->
   <!-- SuppressionMasse -->
   <!-- ======================================================== -->
   <Categorie>
      <Nom>Suppression Masse - 3000</Nom>
      <Id>21</Id>
      <CasTests>
         <CasTest>
            <id>3000</id>
            <code>3000-SuppressionMasse-TestLibre</code>
            <description>
               Test libre de la suppression de masse 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 3000-SuppressionMasse-Test-Libre"</luceneExemple>
         </CasTest>
      </CasTests>
   </Categorie>


   <!-- ======================================================== -->
   <!-- RestoreSuppressionMasse -->
   <!-- ======================================================== -->
   <Categorie>
      <Nom>Restore Suppression Masse - 3100</Nom>
      <Id>22</Id>
      <CasTests>
         <CasTest>
            <id>3100</id>
            <code>3100-RestoreSuppressionMasse-TestLibre</code>
            <description>
               Test libre de la restore de la suppression de masse 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 3150-RestoreSuppressionMasse-Test-Libre"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>3150</id>
            <code>3150-RestoreSuppressionMasse-KO-Droit Insuffisant</code>
            <description>
               Test pour vérifier le resultat dnas le cas où les droits sont insuffisants 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 3150-RestoreSuppressionMasse-KO-Droit Insuffisant"</luceneExemple>
         </CasTest>
      </CasTests>
   </Categorie>

   <!-- ======================================================== -->
   <!-- Formats -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Formats - 1800</Nom>
      <Id>8</Id>
      <CasTests>
         <!-- Controle de format en capture unitaire -->
         <CasTest>
            <id>1802</id>
            <code>1802-FCP-CU-OK-NonIdentification-NonValidation-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats sans identification et sans validation
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1802-FCP-CU-OK-NonIdentification-NonValidation-FMT354"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1803a</id>
            <code>1803-1-FCP-CU-OK-Identification-NonValidation-Monitor-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode monitor. Avec un fichier validé par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1803-1-FCP-CU-OK-Identification-NonValidation-Monitor-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1803b</id>
            <code>1803-2-FCP-CU-OK-Identification-NonValidation-Monitor-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode monitor. Avec un fichier non validé par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1803-2-FCP-CU-OK-Identification-NonValidation-Monitor-FMT354-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1804a</id>
            <code>1804-1-FCP-CU-OK-Identification-NonValidation-Strict-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strict avec un fichier dont le format est compatible en identification.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1804-1-FCP-CU-OK-Identification-NonValidation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1804b</id>
            <code>1804-2-FCP-CU-OK-Identification-NonValidation-Strict-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strict.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1804-2-FCP-CU-OK-Identification-NonValidation-Strict-FMT354-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1805a</id>
            <code>1805-1-FCP-CU-OK-Identification-Validation-Monitor-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et avec validation en mode Monitor. Avec un fichier valide droid et pdfbox.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1805-1-FCP-CU-OK-Identification-Validation-Monitor-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1805b</id>
            <code>1805-2-FCP-CU-OK-Identification-Validation-Monitor-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et avec validation en mode Monitor. Avec un fichier valide droid et non valide Pdfbox.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1805-2-FCP-CU-OK-Identification-Validation-Monitor-FMT354-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1806a</id>
            <code>1806-1-FCP-CU-OK-Identification-Validation-Strict -FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et avec validation en modeStrict. Avec un fichier valide droid et pdfbox.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1806-1-FCP-CU-OK-Identification-Validation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1806b</id>
            <code>1806-2-FCP-CU-OK-Identification-Validation-Strict-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et avec validation en mode Monitor. Avec un fichier valide droid et non valide Pdfbox.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1806-2-FCP-CU-OK-Identification-Validation-Strict-FMT354-KO"</luceneExemple>
         </CasTest>
         <!-- Controle de format en capture de masse -->
         <CasTest>
            <id>1821</id>
            <code>1821-FCP-CM-OK-NonIdentification-NonValidation-FMT354</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats sans identification et sans validation pour la capture de masse.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1821-FCP-CM-OK-NonIdentification-NonValidation-FMT354"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1822a</id>
            <code>1822-1-FCP-CM-OK-Identification-NonValidation-Monitor-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode monitor sur une capture de masse. Avec des fichiers validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1822-1-FCP-CM-OK-Identification-NonValidation-Monitor-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1822b</id>
            <code>1822-2-FCP-CM-OK-Identification-NonValidation-Monitor-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode monitor sur une capture de masse. Avec des fichiers non validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1822-2-FCP-CM-OK-Identification-NonValidation-Monitor-FMT354-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1823a</id>
            <code>1823-1-FCP-CM-OK-Identification-NonValidation-Strict-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strict sur une capture de masse. Avec des fichiers validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1823-1-FCP-CM-OK-Identification-NonValidation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1823b</id>
            <code>1823-2-FCP-CM-OK-Identification-NonValidation-Strict-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strictsur une capture de masse. Avec des fichiers non validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1823-2-FCP-CM-OK-Identification-NonValidation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1824a</id>
            <code>1824-1-FCP-CM-OK-Identification-Validation-Monitor-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Monitor sur une capture de masse. Avec des fichiers validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1824-1-FCP-CM-OK-Identification-Validation-Monitor-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1824b</id>
            <code>1824-2-FCP-CM-OK-Identification-Validation-Monitor-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Monitor sur une capture de masse. Avec des fichiers non validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1824-2-FCP-CM-OK-Identification-Validation-Monitor-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1825a</id>
            <code>1825-1-FCP-CM-OK-Identification-Validation-Strict-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strict sur une capture de masse. Avec des fichiers validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1825-1-FCP-CM-OK-Identification-Validation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1825b</id>
            <code>1825-2-FCP-CM-OK-Identification-Validation-Strict-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strict sur une capture de masse. Avec des fichiers non validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1825-2-FCP-CM-OK-Identification-Validation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1812</id>
            <code>1812-FCP-CM-OK-Identification-NonValidation-FMT354</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats sans identification et avec validation en mode Strict pour la capture de masse.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1812-FCP-CM-OK-Identification-NonValidation-FMT354"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1813</id>
            <code>1813-FCP-CM-OK-NonIdentification-Validation-Monitor-FMT354</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats sans identification et avec validation en mode Monitor pour la capture de masse.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1813-FCP-CM-OK-NonIdentification-Validation-Monitor-FMT354"</luceneExemple>
         </CasTest>

      </CasTests>

   </Categorie>

   <!-- ======================================================== -->
   <!-- PKI -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>PKI 1200</Nom>
      <Id>9</Id>
      <CasTests>

         <CasTest>
            <id>1201</id>
            <code>1201-PKI-Verification-OK-Nom-Certificat-OK-Flag-OK</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise la PKI : PKI_TEST_AC_RACINE et le certificat applicatif APPLICATION_TEST_1  et qu’on effectue le contrôle du certificat applicatif
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1201-PKI-Verification-OK-Nom-Certificat-OK-Flag-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1202</id>
            <code>1202-PKI-Verification-OK-Nom-Certificat-KO-Flag-OK</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise la PKI : PKI_TEST_AC_RACINE et le certificat applicatif APPLICATION_TEST_2 qui n’existe pas et qu’on effectue le contrôle du certificat applicatif
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1202-PKI-Verification-OK-Nom-Certificat-KO-Flag-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1203</id>
            <code>1203-PKI-Verification-OK-Nom-Certificat-KO-Flag-KO</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise la PKI : PKI_TEST_AC_RACINE et le certificat applicatif APPLICATION_TEST_3 qui n’existe pas et qu’on effectue le contrôle du certificat applicatif
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1203-PKI-Verification-OK-Nom-Certificat-KO-Flag-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1204</id>
            <code>1204-PKI-CS-ANCIEN-SYSTEME-VI-OK</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise le contrat de service CS_ANCIEN_SYSTEME et qu’on signe le VI avec l’IGC de validation AED CN=PNR_Application_Test
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1204-PKI-CS-ANCIEN-SYSTEME-VI-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1205</id>
            <code>1205-PKI-CS-PLUSIEURS-CERTIFICATS-APPLICATIFS</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise un contrat de service avec plusieurs certificats applicatifs. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1205-PKI-CS-PLUSIEURS-CERTIFICATS-APPLICATIFS"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1206</id>
            <code>1206-PKI-NAT-Verification-OK-Nom-Certificat-OK-Flag-OK</code>
            <description>
               Ce test permet de valider le bon fonctionnement avec un contrat de service IGC NAT. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1206-PKI-NAT-Verification-OK-Nom-Certificat-OK-Flag-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1251</id>
            <code>1251-PKI-Verification-KO-Nom-Certificat-CS-OK-Flag-OK</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand le VI utilise une autre PKI que celle du contrat de service. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1251-PKI-Verification-KO-Nom-Certificat-CS-OK-Flag-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1252</id>
            <code>1252-PKI-Verification-KO-Nom-Certificat-CS-OK-Flag-KO</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand le VI utilise une autre PKI que celle du contrat de service. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1252-PKI-Verification-KO-Nom-Certificat-CS-OK-Flag-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1253</id>
            <code>1253-PKI-Verification-KO-Nom-Certificat-VI-OK-Flag-OK</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand le VI utilise une autre PKI que celle du contrat de service. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1253-PKI-Verification-KO-Nom-Certificat-VI-OK-Flag-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1254</id>
            <code>1254-PKI-Verification-KO-Nom-Certificat-VI-OK-Flag-KO</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand le VI utilise une autre PKI que celle du contrat de service. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1254-PKI-Verification-KO-Nom-Certificat-VI-OK-Flag-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1255</id>
            <code>1255-PKI-CS-ANCIEN-SYSTEME-VI-KO</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise le contrat de service CS_ANCIEN_SYSTEME et qu’on signe le VI avec une IGC autre que celle de validation AED CN=PNR_Application_Test 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1255-PKI-CS-ANCIEN-SYSTEME-VI-KO"</luceneExemple>
         </CasTest>
      </CasTests>

   </Categorie>
   <Categorie>

      <Nom>Etat Traitement Masse - 3200</Nom>
      <Id>23</Id>
      <CasTests>

         <CasTest>
            <id>3200</id>
            <code>3200-EtatTraitementMasse-OK-TestLibre</code>
            <description>
               Tests qui permet de récupérer les informations dans la pile 
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>

   </Categorie>

   <!-- ======================================================== -->
   <!-- Copie -->
   <!-- ======================================================== -->
   <Categorie>
      <Nom>Copie - 3300</Nom>
      <Id>24</Id>
      <CasTests>
         <CasTest>
            <id>3300</id>
            <code>3300-Copie-TestLibre</code>
            <description>
               Test libre de la copie d'un document 
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3300-Copie-OK-Test-Libre"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3300-Copie-OK-Test-Libre-Copie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3301</id>
            <code>3301-Copie-OK-CasSimple</code>
            <description>
              Le but de ce service est de copier un document au sein même de la GNT à partir d’un UUID et d’une liste de métadonnées.
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et pas de liste de métadonnées il faut copier le document. 
               Ensuite on vérifiera que l’on a bien les 2 documents avec les mêmes métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3301-Copie-OK-CasSimple"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3301-Copie-OK-CasSimpleCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3302</id>
            <code>3302-Copie-OK-FonctionActivite</code>
            <description>
              Pour ce test, il convient de valider le bon fonctionnement de récupération de la fonction et de l’activité à partir d’un nouveau CodeRND.
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et une nouvelle liste de métadonnées il faut copier le document. 
               Ensuite on vérifiera que l’on a bien les 2 documents avec les bonnes métadonnées et particulièrement avec le nouveau CodeRnd, la nouvelle Fonction et Activité.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3302-Copie-OK-FonctionActivite"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3302-Copie-OK-FonctionActiviteCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3303</id>
            <code>3303-Copie-OK-SansCodeActivite</code>
            <description>
               Pour ce test, il convient de valider le bon fonctionnement de récupération de la fonction et de l’activité à partir d’un nouveau CodeRND sachant que l’activité sera vide.
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et une nouvelle liste de métadonnées il faut copier le document. 
               Ensuite on vérifiera que l’on a bien les 2 documents avec les bonnes métadonnées et particulièrement avec le nouveau CodeRnd, la nouvelle Fonction et Activite.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3303-Copie-OK-SansCodeActivite"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3303-Copie-OK-SansCodeActiviteCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3305</id>
            <code>3305-Copie-OK-MetaAvecDico</code>
            <description>
               Pour ce test, il convient de valider le bon fonctionnement des métadonnées auxquelles on a associé un dictionnaire.
               Il faut d’abord stocker un document avec l’archivage unitaire en affectant une première valeur à la métadonnée liée à un dictionnaire. 
               Puis on lance la copie à partir de l’UUID du document de l’étape précédente et d’une nouvelle valeur du dictionnaire pour la métadonnée liée à un dictionnaire. 
               Cette opération ne doit pas provoquer d’erreur.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3305-Copie-OK-MetaAvecDico"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3305-Copie-OK-MetaAvecDicoCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3306</id>
            <code>3306-Copie-OK-MetaNonRenseignee</code>
            <description>
               Pour ce test, il convient de valider que le fait de renseigner une nouvelle métadonnée lors de la copie est bien pris en comtpe.
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et une nouvelle liste de métadonnées il faut copier le document. 
               Ensuite on vérifiera que la métadonnée qui n’était pas renseignée dans le premier document existe bien dans le document copié.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3306-Copie-OK-MetaNonRenseignee"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3306-Copie-OK-MetaNonRenseigneeCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3351</id>
            <code>3351-Copie-KO-CodeRNDInexistant</code>
            <description>
               Pour ce test, il convient de valider que le fait de renseigner une métadonnée inexistante dans le referentiel lors de la copie ne permet pas d'utiliser ce service.
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et une nouvelle liste de métadonnées comportant une métadonnée inexistante, il faut copier le document. 
               Ensuite on vérifiera que le document n'a pas été copié et qu'une SOAP Fault apparait bien.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3351-Copie-KO-CodeRNDInexistant"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3351-Copie-KO-CodeRNDInexistantCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3352</id>
            <code>3352-Copie-KO-CodeRNDNonAutorise</code>
            <description>
               Pour ce test, il convient de valider que le fait de renseigner un code RND non autorisé lors de la copie ne permet pas d'utiliser ce service.
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et une liste de métadonnées comportant un code RND non autorisé, il faut copier le document. 
               Ensuite on vérifiera que le document n'a pas été copié et qu'une SOAP Fault apparait bien.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3352-Copie-KO-CodeRNDNonAutorise"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3352-Copie-KO-CodeRNDNonAutoriseCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3353</id>
            <code>3353-Copie-KO-MetaNonModifiable</code>
            <description>
               Pour ce test, il convient de valider que le fait de renseigner une métadonnée non modifiable dans le referentiel lors de la copie ne permet pas d'utiliser ce service.
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et une nouvelle liste de métadonnées comportant une métadonnée modifié alors qu'elle est non modifiable, il faut copier le document. 
               Ensuite on vérifiera que le document n'a pas été copié et qu'une SOAP Fault apparait bien.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3353-Copie-KO-MetaNonModifiable"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3353-Copie-KO-MetaNonModifiableCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3354</id>
            <code>3354-Copie-KO-MetaEnDouble</code>
            <description>
               Pour ce test, il convient de valider que le fait de renseigner une métadonnée en double dans le referentiel lors de la copie ne permet pas d'utiliser ce service.
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et une nouvelle liste de métadonnées comportant une métadonnée modifié et la même métadonné en double, il faut copier le document. 
               Ensuite on vérifiera que le document n'a pas été copié et qu'une SOAP Fault apparait bien.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3354-Copie-KO-MetaEnDouble"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3354-Copie-KO-MetaEnDoubleCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3355</id>
            <code>3355-Copie-KO-MetaObligatoireOmise</code>
            <description>
               Pour ce test, il convient de valider que le fait de renseigner une métadonnée obligatoire omise dans le referentiel lors de la copie ne permet pas d'utiliser ce service.
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et une nouvelle liste de métadonnées ne comportant pas une métadonnée alors qu'elle est obligatoire, il faut copier le document. 
               Ensuite on vérifiera que le document n'a pas été copié et qu'une SOAP Fault apparait bien.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3355-Copie-KO-MetaObligatoireOmise"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3355-Copie-KO-MetaObligatoireOmiseCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3356</id>
            <code>3356-Copie-KO-MetaFormatIncorrect</code>
            <description>
               Pour ce test, il convient de valider que le fait de renseigner une métadonnée au format incorrect dans le referentiel lors de la copie ne permet pas d'utiliser ce service.
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et une nouvelle liste de métadonnées ayant un format incorrect, il faut copier le document. 
               Ensuite on vérifiera que le document n'a pas été copié et qu'une SOAP Fault apparait bien.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3356-Copie-KO-MetaFormatIncorrect"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3356-Copie-KO-MetaFormatIncorrectCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3357</id>
            <code>3357-Copie-KO-DroitInsuffisant</code>
            <description>
               Pour ce test, il convient de valider que le fait d'avoir des droits insuffisant pour la copie ne permet pas d'utiliser ce service. Les droits utilisateurs ne permettent pas de faire la copie (Pas de PAGM avec action 'copie')
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et il faut copier le document. 
               Ensuite on vérifiera que le document n'a pas été copié et qu'une SOAP Fault apparait bien.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3357-Copie-KO-DroitInsuffisant"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3357-Copie-KO-DroitInsuffisantCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3358</id>
            <code>3358-Copie-KO-PrmdSansCodeRndAttendu</code>
            <description>
               Pour ce test, il convient de valider que le filtre PRMD sur les droits utilisateur ne permet pas d'utiliser ce service s'il est mal renseigné. On affecte donc un PRMD avec un code RND particulier.
               Il faut d’abord stocker un document avec l’archivage unitaire puis à partir de l’UUID du document et il faut copier le document avec un Code RND non attendu. 
               Ensuite on vérifiera que le document n'a pas été copié et qu'une SOAP Fault apparait bien.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3358-Copie-KO-PrmdSansCodeRndAttendu"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3358-Copie-KO-PrmdSansCodeRndAttenduCopie"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>3359</id>
            <code>3359-Copie-KO-ValeurDicoInexistant</code>
            <description>
               Pour ce test, il convient de valider le fait de faire appel au service de copie avec un code dictionnaire non référencé ne permet pas d'utiliser ce service.
               Il faut d’abord stocker un document avec l’archivage unitaire en affectant une première valeur à la métadonnée liée à un dictionnaire. 
               Puis on lance la copie à partir de l’UUID du document de l’étape précédente et d’une nouvelle valeur du dictionnaire non referencé pour la métadonnée liée à un dictionnaire. 
               Ensuite on vérifiera que le document n'a pas été copié et qu'une SOAP Fault apparait bien.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 3359-Copie-KO-ValeurDicoInexistant"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 3359-Copie-KO-ValeurDicoInexistantCopie"</luceneExempleList>
         </CasTest>
      </CasTests>
   </Categorie>

   <!-- ======================================================== -->
   <!-- Consultation GNTGNS -->
   <!-- ======================================================== -->
   <Categorie>
      <Nom>Consultation GNTGNS - 3400</Nom>
      <Id>25</Id>
      <CasTests>
         <CasTest>
            <id>3400</id>
            <code>3400-Consultation GNTGNS-TestLibre</code>
            <description>
               Test libre de la consultation GNTGNS 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 3400-ConsultationGNTGNS-Test-Libre"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>3401</id>
            <code>3401-ConsultationGNTGNS-OK-Consultation-document-GNT</code>
            <description>
               Le but de ce test est de valider qu’on peut bien consulter un document provenant de la GNT. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"3401-ConsultationGNTGNS-OK-Consultation-document-GNT"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>3402</id>
            <code>3402-ConsultationGNTGNS-OK-Consultation-document-GNS</code>
            <description>
               Le but de ce test est de valider qu’on peut bien consulter un document provenant de la GNS. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"3402-ConsultationGNTGNS-OK-Consultation-document-GNS"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>3450</id>
            <code>3450-ConsultationGNTGNS-KO-MetadonneeConsultInexistante-MTOM</code>
            <description>
               Le but de ce test est de valider qu’on obtient bien une soapfault lorsqu’on essaie de consulter avec l’opération consultationGNTGNS un document en précisant des métadonnées qui ne sont pas consultables comme StartPage et VersionNumber. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 3450-ConsultationGNTGNS-KO-MetadonneeConsultInexistante-MTOM"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>3451</id>
            <code>3451-ConsultationGNTGNS-KO-DocumentInexistant</code>
            <description>
               Le but de ce test est de valider qu’on obtient bien une soapfault lorsqu’on essaie de consulter avec l’opération consultationGNTGNS un document n'existant ni en GNS ni en GNT. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 3451-ConsultationGNTGNS-KO-MetadonneeConsultInexistante-MTOM"</luceneExemple>
         </CasTest>
      </CasTests>
   </Categorie>

   <Categorie>
      <Nom>Recuperation Metadonnee - 3500</Nom>
      <Id>26</Id>
      <CasTests>
         <CasTest>
            <id>3500</id>
            <code>3500-Recuperation Metadonnee-TestLibre</code>
            <description>
                  Test libre de la Recuperation des Metadonnees
               </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 3500-Recuperation
                  Metadonnee-Test-Libre"</luceneExemple>
         </CasTest>
      </CasTests>
   </Categorie>

</Tests>