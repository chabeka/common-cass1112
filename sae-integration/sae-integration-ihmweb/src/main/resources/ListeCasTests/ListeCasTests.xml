<?xml version="1.0" encoding="UTF-8"?>
<Tests xmlns="http://www.cirtil.fr/saeIntegration/tests"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.cirtil.fr/saeIntegration/tests ListeCasTests.xsd">

   <!-- ======================================================== -->
   <!-- Tests techniques -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Tests techniques</Nom>
      <Id>42</Id>
      <CasTests>

         <CasTest>
            <id>995</id>
            <code>995-Tests techniques</code>
            <description>
               Tests techniques (opérations ping, pingSecure, et SoapFault d'authentification) 
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>

   </Categorie>


   <!-- ======================================================== -->
   <!-- Capture unitaire -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Capture unitaire</Nom>
      <Id>1</Id>
      <CasTests>

         <CasTest>
            <id>100</id>
            <code>100-CaptureUnitaire-TestLibre</code>
            <description>
               Test libre de la capture unitaire => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>101</id>
            <code>101-CaptureUnitaire-OK-Standard</code>
            <description>
               On vérifie que la capture unitaire fonctionne dans des conditions "standards" d'utilisation.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 101-CaptureUnitaire-OK-Standard"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>102</id>
            <code>102-CaptureUnitaire-OK-EnrichissementEcrasement</code>
            <description>
               On vérifie que le SAE n'écrase pas, lors de l'enrichissement, les valeurs des métadonnées qui ont été spécifiées par l'application cliente
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 102-CaptureUnitaire-OK-EnrichissementEcrasement"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>103</id>
            <code>103-CaptureUnitaire-OK-ToutesMetasSpecifiables</code>
            <description>
               On vérifie que le SAE stocke correctement l'ensemble des métadonnées qu'une application puisse fournir lors de la capture
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 103-CaptureUnitaire-OK-ToutesMetasSpecifiables"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>150</id>
            <code>150-CaptureUnitaire-KO-SansAuthentification</code>
            <description>
               On vérifie que l'authentification applicative est activée sur l'opération "archivageUnitaire" du service web SaeService. 
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>151</id>
            <code>151-CaptureUnitaire-KO-EcdeFichierInexistant</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque l'URL ECDE pointe sur un fichier inexistant.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>152</id>
            <code>152-CaptureUnitaire-KO-MetadonneeVide</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque la liste des métadonnées fournie est vide.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>153</id>
            <code>153-CaptureUnitaire-KO-MetadonneeObligatoireOmise</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsqu'une métadonnée obligatoire est omise de la liste des métadonnées.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>154</id>
            <code>154-CaptureUnitaire-KO-MetadonneeObligatoireVide</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsqu'une métadonnée obligatoire a une valeur vide.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>155</id>
            <code>155-CaptureUnitaire-KO-MetadonneeInconnue</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque la liste des métadonnées contient une métadonnée inconnue du SAE
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>156</id>
            <code>156-CaptureUnitaire-KO-MetadonneeDoublon</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsqu'il y a plusieurs occurrences de la même métadonnée dans la liste des métadonnées.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>157</id>
            <code>157-CaptureUnitaire-KO-MetadonneeFormatIncorrect</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque la liste des métadonnées contient une métadonnée dont la valeur n'est pas conforme au format attendu
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>158</id>
            <code>158-CaptureUnitaire-KO-MetadonneeNonArchivable</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque la liste des métadonnées contient une métadonnée qui n'est pas spécifiable lors de l'archivage
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>159</id>
            <code>159-CaptureUnitaire-KO-HashIncorrect</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque le hash spécifié en entrée ne correspond au hash du contenu du document
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>161</id>
            <code>161-CaptureUnitaire-KO-TailleZero</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque le fichier à archiver possède une taille de 0 octet
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>162</id>
            <code>162-CaptureUnitaire-KO-CodeRNDincorrect</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque le code RND spécifié dans la métadonnée adéquat ne fait pas partie de la liste des codes définis pour le palier 1.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>163</id>
            <code>163-CaptureUnitaire-KO-TypeHash</code>
            <description>
               On vérifie que l'algorithme de hash fourni dans la métadonnée obligatoire 'TypeHash' est 'SHA-1'
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>164</id>
            <code>164-CaptureUnitaire-KO-MetadonneeValeurVide</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsqu'une métadonnée spécifiable à l'archivage, mais pas obligatoire, est transmise au SAE avec une valeur vide
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>165</id>
            <code>Cas 165-captureunitaire-KO-url-ecde-incorrecte</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque l'URL ECDE est erronée
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>

   </Categorie>



   <!-- ======================================================== -->
   <!-- Capture de masse -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Capture de masse</Nom>
      <Id>2</Id>
      <CasTests>

         <CasTest>
            <id>200</id>
            <code>200-CaptureMasse-TestLibre</code>
            <description>
               Test libre de la capture de masse => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>201</id>
            <code>201-CaptureMasse-OK-Tor-10</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" fonctionne correctement pour 10 documents à archiver
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 201-CaptureMasse-OK-Tor-10"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>202</id>
            <code>202-CaptureMasse-OK-Tor-1000</code>
            <description>
               Capture de masse de 1000 documents
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 202-CaptureMasse-OK-Tor-1000"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>203</id>
            <code>203-capturemasse-OK-TOR-10-repertoire-slash</code>
            <description>
               Capture de masse de 10 documents à archiver dans une arborescence de 10 niveaux précisés par des slash
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 203-capturemasse-OK-TOR-10-repertoire-slash"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>204</id>
            <code>204-CAPTUREMASSE-OK-TOR-10-REPERTOIRE-ANTI-SLASH</code>
            <description>
               Capture de masse de 10 documents à archiver dans une arborescence de 10 niveaux précisés par des anti-slash
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"204-CAPTUREMASSE-OK-TOR-10-repertoire-anti-slash"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>205</id>
            <code>205-CAPTUREMASSE-OK-TOR-3-REPERTOIRE-ANTI-SLASH-MEME-DOC</code>
            <description>
               Capture de masse du même document 3 fois dans une arborescence d’un seul niveau spécifiée par des anti-slash
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 205-CaptureMasse-OK-Tor-3-repertoire-anti-slash-meme-doc"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>206</id>
            <code>206-capturemasse-OK-toutes-metadonnees-specifiables</code>
            <description>
              Capture de masse d’un document dont on précise toutes les métadonnées en archivage
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 206-CaptureMasse-OK-Toutes-metadonnees-specifiables"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>207</id>
            <code>207-capturemasse-OK-idtraitementmasse</code>
            <description>
               Capture de masse d’un document dont on précise  la métadonnée IdTraitementMasse en archivage
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 207-CaptureMasse-OK-IdTraitementMasse"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>208</id>
            <code>208-capturemasse-OK-jarlancearret</code>
            <description>
               Capture de masse de 5000 documents, démarrage et arrêt du processus "application console d’exécution de la capture de masse"
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"208-CaptureMasse-OK-JarLanceArret"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>250</id>
            <code>250-CaptureMasse-KO-SansAuthentification</code>
            <description>
               On vérifie que l'authentification applicative est activée sur l'opération "archivageMasse" du service web SaeService. Pour cela, on invoque l'opération "archivageMasse" en omettant le VI dans le message SOAP.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>252</id>
            <code>252-CaptureMasse-KO-Tor-MetadonneeVide</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, sa liste de métadonnées est vide
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>253</id>
            <code>253-CaptureMasse-KO-Tor-MetadonneeObligatoireOmise</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, une métadonnée obligatoire est omise
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>254</id>
            <code>254-CaptureMasse-KO-Tor-MetadonneeObligatoireVide</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, une métadonnée obligatoire a une valeur vide
            </description>
            <implemente>false</implemente>
         </CasTest>

         <CasTest>
            <id>255</id>
            <code>255-CaptureMasse-KO-Tor-MetadonneeInconnue</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, sa liste des métadonnées contient une métadonnée inconnue du SAE
            </description>
            <implemente>false</implemente>
         </CasTest>

         <CasTest>
            <id>256</id>
            <code>256-CaptureMasse-KO-Tor-MetadonneeDoublon</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, il y a plusieurs occurrences de la même métadonnée dans sa liste des métadonnées
            </description>
            <implemente>false</implemente>
         </CasTest>

         <CasTest>
            <id>257</id>
            <code>257-CaptureMasse-KO-Tor-MetadonneeFormatIncorrect</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, sa liste des métadonnées contient une métadonnée dont la valeur n'est pas conforme au format attendu.
            </description>
            <implemente>false</implemente>
         </CasTest>

         <CasTest>
            <id>258</id>
            <code>258-CaptureMasse-KO-Tor-MetadonneeNonArchivable</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, la liste des métadonnées contient une métadonnée qui n’est pas spécifiable lors de l’archivage
            </description>
            <implemente>false</implemente>
         </CasTest>

         <CasTest>
            <id>259</id>
            <code>259-CaptureMasse-KO-Tor-HashIncorrect</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, le hash du fichier est différent du hash spécifié dans le sommaire.xml
            </description>
            <implemente>false</implemente>
         </CasTest>

         <CasTest>
            <id>262</id>
            <code>262-CaptureMasse-KO-Tor-FichierInexistant</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, le chemin de fichier pointe sur un fichier inexistant
            </description>
            <implemente>false</implemente>
         </CasTest>

         <CasTest>
            <id>264</id>
            <code>264-CaptureMasse-KO-Tor-TailleZero</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsqu'un des fichiers à archiver possède une taille à 0 octet.
            </description>
            <implemente>false</implemente>
         </CasTest>

         <CasTest>
            <id>265</id>
            <code>265-CaptureMasse-KO-FichierSommaireIncorrect</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque le fichier sommaire.xml est syntaxiquement incorrect.
            </description>
            <implemente>false</implemente>
         </CasTest>

      </CasTests>

   </Categorie>


   <!-- ======================================================== -->
   <!-- Recherche -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Recherche</Nom>
      <Id>3</Id>
      <CasTests>

         <CasTest>
            <id>300</id>
            <code>300-Recherche-TestLibre</code>
            <description>
               Test libre de la recherche => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:2.3.1.1.12 AND DateArchivage:2011-09-01</luceneExemple>
         </CasTest>

         <CasTest>
            <id>301</id>
            <code>301-Recherche-OK-Standard</code>
            <description>
               On vérifie que la recherche fonctionne dans des conditions "standard" d'utilisation.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 301-Recherche-OK-Standard" AND CodeRND:("2.3.1.1.12" OR "2.3.1.1.8") AND NumeroCompteExterne:"30148032541101600" AND (DateCreation: [20101001 TO 20101007])</luceneExemple>
         </CasTest>

         <CasTest>
            <id>302</id>
            <code>302-Recherche-OK-Tronquee</code>
            <description>
               On vérifie que la recherche fonctionne avec une requête de recherche simple et peu restrictive, de sorte à provoquer la troncature du résultat de recherche
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 302-Recherche-OK-Tronquee"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>303</id>
            <code>303-Recherche-OK-EnSpecifiantMetadonnees</code>
            <description>
               On vérifie que la recherche fonctionne lorsqu'on spécifie les métadonnées que l'on souhaite dans les résultats de recherche
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 303-Recherche-OK-EnSpecifiantMetadonnees"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>304</id>
            <code>304-Recherche-OK-Complexe-Dates</code>
            <description>
               On vérifie que la recherche fonctionne avec une requête de recherche complexe manipulant des dates
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 304-Recherche-OK-Complexe-Dates" AND (DateCreation:20050618 OR DateCreation:[20050718 TO 20050722] OR DateCreation:{20050818 TO 20050822})</luceneExemple>
         </CasTest>

         <CasTest>
            <id>305</id>
            <code>305-Recherche-OK-RequeteLuceneAvecDeuxPointsDansValeurRecherchee</code>
            <description>
               On vérifie que la recherche fonctionne correctement si la valeur recherchée contient un caractère deux-points (:)
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 305-Recherche-OK-RequeteLuceneAvecDeuxPointsDansValeurRecherchee" AND ApplicationProductrice:"Gauche\:Droite"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>306</id>
            <code>306-Recherche-OK-RequeteLuceneAvecJokerDansValeurRecherchee</code>
            <description>
               On vérifie que la recherche fonctionne lorsque l'une des valeurs recherchées dans la requête LUCENE contient le caractère joker (*).
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 306-Recherche-OK-RequeteLuceneAvecJokerDansValeurRecherchee" AND CodeRND:2.3.1.1.*</luceneExemple>
         </CasTest>

         <CasTest>
            <id>350</id>
            <code>350-Recherche-KO-SansAuthentification</code>
            <description>
               Ce test vérifie que l'authentification applicative est activée sur l'opération "recherche" du service web SaeService. Pour cela, on invoque l'opération "recherche" en omettant le VI dans le message SOAP.
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:"1.2.3.4.5"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>351</id>
            <code>351-Recherche-KO-RequeteVide</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsque la requête de recherche est vide
            </description>
            <implemente>true</implemente>
            <luceneExemple> </luceneExemple>
         </CasTest>

         <CasTest>
            <id>352</id>
            <code>352-Recherche-KO-MauvaiseRequeteLucene</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsque la requête LUCENE est incorrecte
            </description>
            <implemente>true</implemente>
            <luceneExemple>gloubi@"boulga"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>353</id>
            <code>353-Recherche-KO-MetadonneeConsultInexistante</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsque la liste des métadonnées souhaitées en retour de la recherche contient un code de métadonnées non reconnu par le SAE
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:"2.3.1.1.12"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>354</id>
            <code>354-Recherche-KO-MetadonneeConsultNonAutorisee</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsque la liste des métadonnées souhaitées en retour de la recherche contient un code de métadonnées qui n’est pas consultable
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:"2.3.1.1.12"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>355</id>
            <code>355-Recherche-KO-MetadonneeRechercheInexistante</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsque la requête de recherche contient un code de métadonnées non reconnu par le SAE
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:"2.3.1.1.12" AND Gloubi:"1234" AND Boulga:"5678"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>356</id>
            <code>356-Recherche-KO-MetadonneeRechercheNonAutorisee</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsqu'une des métadonnées utilisées dans la requête de recherche n’est pas utilisable comme critère de recherche.
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:"2.3.1.1.12" AND TailleFichier:34 AND FormatFichier:"fmt/354" AND VersionRND:"11.1"</luceneExemple>
         </CasTest>

      </CasTests>

   </Categorie>


   <!-- ======================================================== -->
   <!-- Consultation -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Consultation</Nom>
      <Id>4</Id>
      <CasTests>

         <CasTest>
            <id>400</id>
            <code>400-Consultation-TestLibre</code>
            <description>
               Test libre de la consultation => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>401</id>
            <code>401-Consultation-OK-RetourContenu</code>
            <description>
               On vérifie que la consultation fonctionne correctement lorsque le retour demandé est le contenu du document (réception du contenu et des métadonnées)
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>450</id>
            <code>450-Consultation-KO-SansAuthentification</code>
            <description>
               Ce test vérifie que l'authentification applicative est activée sur l'opération "consultation" du service web SaeService. Pour cela, on invoque l'opération "consultation" en omettant le VI dans le message SOAP.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>451</id>
            <code>451-Consultation-KO-IdArchivageInconnu</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque l'identifiant d'archivage ne correspond à aucune archive du SAE
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>

   </Categorie>

</Tests>