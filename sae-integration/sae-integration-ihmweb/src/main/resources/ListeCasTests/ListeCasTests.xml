<?xml version="1.0" encoding="UTF-8"?>
<Tests xmlns="http://www.cirtil.fr/saeIntegration/tests"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.cirtil.fr/saeIntegration/tests ListeCasTests.xsd">

   <!-- ======================================================== -->
   <!-- Tests techniques -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Tests techniques</Nom>
      <Id>42</Id>
      <CasTests>

         <CasTest>
            <id>995</id>
            <code>995-Tests techniques</code>
            <description>
               Tests techniques (opérations ping, pingSecure, et SoapFault d'authentification) 
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>

   </Categorie>


   <!-- ======================================================== -->
   <!-- Capture unitaire -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Capture unitaire</Nom>
      <Id>1</Id>
      <CasTests>

         <CasTest>
            <id>100</id>
            <code>100-CaptureUnitaire-TestLibre</code>
            <description>
               Test libre de la capture unitaire => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>101a</id>
            <code>101-CaptureUnitaire-OK-Standard</code>
            <description>
               On vérifie que la capture unitaire fonctionne dans des conditions "standards" d'utilisation.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 101-CaptureUnitaire-OK-Standard"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>101b</id>
            <code>101-CaptureUnitaire-OK-Standard-PJ-URL</code>
            <description>
               On vérifie que la capture unitaire fonctionne dans des conditions "standards" d'utilisation.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 101-CaptureUnitaire-OK-Standard-PJ-URL"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>101c</id>
            <code>101-CaptureUnitaire-OK-Standard-PJ-sans-MTOM</code>
            <description>
               On vérifie que la capture unitaire fonctionne dans des conditions "standards" d'utilisation.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 101-CaptureUnitaire-OK-Standard-PJ-sans-MTOM"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>101d</id>
            <code>101-CaptureUnitaire-OK-Standard-PJ-avec-MTOM</code>
            <description>
               On vérifie que la capture unitaire fonctionne dans des conditions "standards" d'utilisation.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 101-CaptureUnitaire-OK-Standard-PJ-avec-MTOM"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>102a</id>
            <code>102-CaptureUnitaire-OK-EnrichissementEcrasement</code>
            <description>
               On vérifie que le SAE n'écrase pas, lors de l'enrichissement, les valeurs des métadonnées qui ont été spécifiées par l'application cliente
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 102-CaptureUnitaire-OK-EnrichissementEcrasement"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>102b</id>
            <code>102-CaptureUnitaire-OK-EnrichissementEcrasement-PJ-URL</code>
            <description>
               On vérifie que le SAE n'écrase pas, lors de l'enrichissement, les valeurs des métadonnées qui ont été spécifiées par l'application cliente
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 102-CaptureUnitaire-OK-EnrichissementEcrasement-PJ-URL"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>102c</id>
            <code>102-CaptureUnitaire-OK-EnrichissementEcrasement-PJ-sans-MTOM</code>
            <description>
               On vérifie que le SAE n'écrase pas, lors de l'enrichissement, les valeurs des métadonnées qui ont été spécifiées par l'application cliente
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 102-CaptureUnitaire-OK-EnrichissementEcrasement-PJ-sans-MTOM"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>102d</id>
            <code>102-CaptureUnitaire-OK-EnrichissementEcrasement-PJ-avec-MTOM</code>
            <description>
               On vérifie que le SAE n'écrase pas, lors de l'enrichissement, les valeurs des métadonnées qui ont été spécifiées par l'application cliente
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 102-CaptureUnitaire-OK-EnrichissementEcrasement-PJ-avec-MTOM"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>103a</id>
            <code>103-CaptureUnitaire-OK-ToutesMetasSpecifiables</code>
            <description>
               On vérifie que le SAE stocke correctement l'ensemble des métadonnées qu'une application puisse fournir lors de la capture
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 103-CaptureUnitaire-OK-ToutesMetasSpecifiables"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>103b</id>
            <code>103-CaptureUnitaire-OK-ToutesMetasSpecifiables-PJ-URL</code>
            <description>
               On vérifie que le SAE stocke correctement l'ensemble des métadonnées qu'une application puisse fournir lors de la capture
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 103-CaptureUnitaire-OK-ToutesMetasSpecifiables-PJ-URL"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>103c</id>
            <code>103-CaptureUnitaire-OK-ToutesMetasSpecifiables-PJ-sans-MTOM</code>
            <description>
               On vérifie que le SAE stocke correctement l'ensemble des métadonnées qu'une application puisse fournir lors de la capture
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 103-CaptureUnitaire-OK-ToutesMetasSpecifiables-PJ-sans-MTOM"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>103d</id>
            <code>103-CaptureUnitaire-OK-ToutesMetasSpecifiables-PJ-avec-MTOM</code>
            <description>
               On vérifie que le SAE stocke correctement l'ensemble des métadonnées qu'une application puisse fournir lors de la capture
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 103-CaptureUnitaire-OK-ToutesMetasSpecifiables-PJ-avec-MTOM"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>104a</id>
            <code>104-CaptureUnitaire-OK-Sans-Code-Activite</code>
            <description>
               On vérifie que le SAE stocke correctement un document dont le type n'est rattaché à aucune activité
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 104-CaptureUnitaire-OK-Sans-Code-Activite"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>104b</id>
            <code>104-CaptureUnitaire-OK-Sans-Code-Activite-PJ-URL</code>
            <description>
               On vérifie que le SAE stocke correctement un document dont le type n'est rattaché à aucune activité
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 104-CaptureUnitaire-OK-Sans-Code-Activite-PJ-URL"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>104c</id>
            <code>104-CaptureUnitaire-OK-Sans-Code-Activite-PJ-sans-MTOM</code>
            <description>
               On vérifie que le SAE stocke correctement un document dont le type n'est rattaché à aucune activité
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 104-CaptureUnitaire-OK-Sans-Code-Activite-PJ-sans-MTOM"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>104d</id>
            <code>104-CaptureUnitaire-OK-Sans-Code-Activite-PJ-avec-MTOM</code>
            <description>
               On vérifie que le SAE stocke correctement un document dont le type n'est rattaché à aucune activité
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 104-CaptureUnitaire-OK-Sans-Code-Activite-PJ-avec-MTOM"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>105a</id>
            <code>105-CaptureUnitaire-OK-HashMajMin</code>
            <description>
               On vérifie que la capture unitaire fonctionne correctement lorsque le hash SHA-1 associé au document comporte des minuscules et des majuscules
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>105b</id>
            <code>105-CaptureUnitaire-OK-HashMajMin-PJ-URL</code>
            <description>
               On vérifie que la capture unitaire fonctionne correctement lorsque le hash SHA-1 associé au document comporte des minuscules et des majuscules
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>105c</id>
            <code>105-CaptureUnitaire-OK-HashMajMin-PJ-sans-MTOM</code>
            <description>
               On vérifie que la capture unitaire fonctionne correctement lorsque le hash SHA-1 associé au document comporte des minuscules et des majuscules
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>105d</id>
            <code>105-CaptureUnitaire-OK-HashMajMin-PJ-avec-MTOM</code>
            <description>
               On vérifie que la capture unitaire fonctionne correctement lorsque le hash SHA-1 associé au document comporte des minuscules et des majuscules
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>150</id>
            <code>150-CaptureUnitaire-KO-SansAuthentification</code>
            <description>
               On vérifie que l'authentification applicative est activée sur l'opération "archivageUnitaire" du service web SaeService. 
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>151</id>
            <code>151-CaptureUnitaire-KO-EcdeFichierInexistant</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque l'URL ECDE pointe sur un fichier inexistant.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>152</id>
            <code>152-CaptureUnitaire-KO-MetadonneeVide</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque la liste des métadonnées fournie est vide.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>153</id>
            <code>153-CaptureUnitaire-KO-MetadonneeObligatoireOmise</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsqu'une métadonnée obligatoire est omise de la liste des métadonnées.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>154</id>
            <code>154-CaptureUnitaire-KO-MetadonneeObligatoireVide</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsqu'une métadonnée obligatoire a une valeur vide.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>155</id>
            <code>155-CaptureUnitaire-KO-MetadonneeInconnue</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque la liste des métadonnées contient une métadonnée inconnue du SAE
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>156</id>
            <code>156-CaptureUnitaire-KO-MetadonneeDoublon</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsqu'il y a plusieurs occurrences de la même métadonnée dans la liste des métadonnées.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>157</id>
            <code>157-CaptureUnitaire-KO-MetadonneeFormatIncorrect</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque la liste des métadonnées contient une métadonnée dont la valeur n'est pas conforme au format attendu
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>158</id>
            <code>158-CaptureUnitaire-KO-MetadonneeNonArchivable</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque la liste des métadonnées contient une métadonnée qui n'est pas spécifiable lors de l'archivage
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>159</id>
            <code>159-CaptureUnitaire-KO-HashIncorrect</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque le hash spécifié en entrée ne correspond au hash du contenu du document
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>161</id>
            <code>161-CaptureUnitaire-KO-TailleZero</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque le fichier à archiver possède une taille de 0 octet
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>162</id>
            <code>162-CaptureUnitaire-KO-CodeRNDincorrect</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque le code RND spécifié dans la métadonnée adéquat ne fait pas partie de la liste des codes définis pour le palier 1.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>163</id>
            <code>163-CaptureUnitaire-KO-TypeHash</code>
            <description>
               On vérifie que l'algorithme de hash fourni dans la métadonnée obligatoire 'TypeHash' est 'SHA-1'
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>164</id>
            <code>164-CaptureUnitaire-KO-MetadonneeValeurVide</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsqu'une métadonnée spécifiable à l'archivage, mais pas obligatoire, est transmise au SAE avec une valeur vide
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>165</id>
            <code>165-CaptureUnitaire-KO-URL-ECDE-incorrecte</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque l'URL ECDE est erronée
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>167</id>
            <code>167-CaptureUnitaire-KO-NomFichierVide</code>
            <description>
               On vérifie qu'une SoapFault spécifique est renvoyée lorsque l'application cliente envoie directement un contenu de fichier associé à un nom de fichier vide.
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>

   </Categorie>



   <!-- ======================================================== -->
   <!-- Capture de masse -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Capture de masse</Nom>
      <Id>2</Id>
      <CasTests>

         <CasTest>
            <id>200</id>
            <code>200-CaptureMasse-TestLibre</code>
            <description>
               Test libre de la capture de masse => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>201</id>
            <code>201-CaptureMasse-OK-Tor-10</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" fonctionne correctement pour 10 documents à archiver
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 201-CaptureMasse-OK-Tor-10"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>202</id>
            <code>202-CaptureMasse-OK-Tor-1000</code>
            <description>
               Capture de masse de 1000 documents
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 202-CaptureMasse-OK-Tor-1000"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>203</id>
            <code>203-CaptureMasse-OK-Tor-10-repertoire-slash</code>
            <description>
               Capture de masse de 10 documents à archiver dans une arborescence de 10 niveaux précisés par des slash
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 203-capturemasse-OK-TOR-10-repertoire-slash"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>204</id>
            <code>204-CaptureMasse-OK-Tor-10-repertoire-anti-slash</code>
            <description>
               Capture de masse de 10 documents à archiver dans une arborescence de 10 niveaux précisés par des anti-slash
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 204-CaptureMasse-OK-Tor-10-repertoire-anti-slash"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>205</id>
            <code>205-CaptureMasse-OK-Tor-3-repertoire-anti-slash-meme-doc</code>
            <description>
               Capture de masse du même document 3 fois dans une arborescence d’un seul niveau spécifié par des anti-slash
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 205-CaptureMasse-OK-Tor-3-repertoire-anti-slash-meme-doc"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>206</id>
            <code>206-CaptureMasse-OK-Toutes-metadonnees-specifiables</code>
            <description>
              Capture de masse d’un document dont on précise toutes les métadonnées en archivage
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 206-CaptureMasse-OK-Toutes-metadonnees-specifiables"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>207</id>
            <code>207-CaptureMasse-OK-IdTraitementMasse</code>
            <description>
               Capture de masse d’un document dont on précise  la métadonnée IdTraitementMasse en archivage
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 207-CaptureMasse-OK-IdTraitementMasse"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>208</id>
            <code>208-CaptureMasse-OK-JarLanceArret</code>
            <description>
               Capture de masse de 5000 documents, démarrage et arrêt du processus "application console d’exécution de la capture de masse"
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 208-CaptureMasse-OK-JarLanceArret"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>209</id>
            <code>209-CaptureMasse-OK-JarArretTomCat</code>
            <description>
               Capture de masse de 5000 documents, vérification de la mise en pause de la capture de masse
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 209-CaptureMasse-OK-JarArretTomCat"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>210</id>
            <code>210-CaptureMasse-OK-Sans-Code-Activite</code>
            <description>
               La capture de masse doit fonctionner si un type de document est rattaché directement à une fonction (pas de code activité)
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 210-CaptureMasse-OK-Sans-Code-Activite"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>212</id>
            <code>212-CaptureMasse-Pile-OK-ECDE-local</code>
            <description>
               Ce test permet de vérifier que la capture de masse en mode « tout ou rien » avec gestion des traitements dans une pile fonctionne correctement en ne prenant que les demandes de l'ecde local. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 212-CaptureMasse-Pile-OK-ECDE-local-1"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>214</id>
            <code>214-CaptureMasse-OK-HashMajMin</code>
            <description>
               La capture de masse fonctionne si un hash SHA-1 associé à un document comporte une combinaison de minuscules et de majuscules
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 214-CaptureMasse-OK-HashMajMin"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>215</id>
            <code>215-CaptureMasse-OK-Tor-100000</code>
            <description>
               On vérifie que la capture de masse fonctionne correctement lorsque l’on souhaite intégrer 100000 documents – test de volume
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 215-CaptureMasse-OK-Tor-100000" AND Siren:0878871891</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>216</id>
            <code>216-CaptureMasse-OK-Tor-300000</code>
            <description>
               On vérifie que la capture de masse fonctionne correctement lorsque l’on souhaite intégrer 300000 documents – test de volume
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 216-CaptureMasse-OK-Tor-300000"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>217</id>
            <code>217-CaptureMasse-OK-Tor-500000</code>
            <description>
               On vérifie que la capture de masse fonctionne correctement lorsque l’on souhaite intégrer 500000 documents – test de volume
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 217-CaptureMasse-OK-Tor-500000"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>218</id>
            <code>218-CaptureMasse-OK-RND-Mandat-SEPA</code>
            <description>
               On vérifie que la capture de masse fonctionne correctement lorsque l’on souhaite intégrer des documents de type Mandat-SEPA
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 218-CaptureMasse-OK-MANDAT-SEPA"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>219</id>
            <code>219-CaptureMasseID-OK-Tor-1000</code>
            <description>
               On vérifie que la capture de masse fonctionne correctement lorsque l’on intégre un fichier sommaire.xml contenant la balise suivante : som:restitutionUuids
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 219-CaptureMasseID-OK-Tor-1000" AND Siren: 0878871891</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>220</id>
            <code>220-CaptureMasse-Avec-Hash-OK-Tor-10</code>
            <description>
               On vérifie la nouvelle capture de masse avec hash fonctionne correctement
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 220-CaptureMasse-Avec-Hash-OK-Tor-10"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>221</id>
            <code>221-CaptureMasseID-OK-Tor-50000</code>
            <description>
               <![CDATA[Ce test permet de vérifier que la capture de masse fonctionne correctement lorsque l’on intégre un fichier sommaire.xml de 50000 documents contenant la balise suivante : <som:restitutionUuids>true</som:restitutionUuids>]]>
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 221-CaptureMasseID-OK-Tor-50000" AND NumeroRecours: 2</luceneExemple>
         </CasTest>      
         
         
         <CasTest>
            <id>224</id>
            <code>224-CaptureMasse-OK-RUM</code>
            <description>
               On vérifie que la nouvelle capture de masse fonctionne correctement sur la valeur spécifique RUM qui peut avoir des espaces à gauche du terme.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 224-CaptureMasse-OK-RUM" AND RUM:"12345678901234567890123456789012345"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 224-CaptureMasse-OK-RUM" AND RUM:"     678901234567890123456789012345"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 224-CaptureMasse-OK-RUM" AND RUM:" 2345678901234567890     6789012345"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 224-CaptureMasse-OK-RUM" AND RUM:"??abc : d 12 ef"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 224-CaptureMasse-OK-RUM" AND RUM:"     ??abc : d 12 ef     "</luceneExempleList>
            <luceneExempleList>Denomination:"Test 224-CaptureMasse-OK-RUM" AND RUM:"98765432109876543210987654321098765"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 224-CaptureMasse-OK-RUM" AND RUM:"12345     12345     12345     00000"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 224-CaptureMasse-OK-RUM" AND RUM:"00000000001234567890123456789000000"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 224-CaptureMasse-OK-RUM" AND RUM: "                              12345"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 224-CaptureMasse-OK-RUM" AND RUM:"00000000000000000000000000000000000"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 224-CaptureMasse-OK-RUM" AND RUM:"++345678901234567890123456789012345"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>225</id>
            <code>225-CaptureMasse-OK-Virtuel-Sans-Hash</code>
            <description>
               On vérifie que la capture de masse fonctionne correctement avec des documents virtuels en mode de capture sans Hash.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 225-CaptureMasse-OK-Virtuel-Sans-Hash"</luceneExemple>
         </CasTest>         

         <CasTest>
            <id>226</id>
            <code>226-CaptureMasse-OK-Virtuel-Avec-Hash</code>
            <description>
               On vérifie que la capture de masse fonctionne correctement avec des documents virtuels en mode de capture avec Hash.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 226-CaptureMasse-OK-Virtuel-Avec-Hash"</luceneExemple>
         </CasTest>         

         <CasTest>
            <id>227</id>
            <code>227-CaptureMasse-OK-Virtuel-Gros-Volume</code>
            <description>
               On vérifie que la capture de masse fonctionne correctement lorsque l’on intègre un fichier sommaire.xml de 1000 pages sur un document de 33645 pages contenant la balise suivante : restitutionUuids=true
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 227-CaptureMasse-OK-Virtuel-Gros-Volume"</luceneExemple>
         </CasTest>         
         <CasTest>
            <id>228</id>
            <code>228-CaptureMasse-OK-Virtuel-Un-Document</code>
            <description>
               On vérifie la capture de masse fonctionne correctement lorsque l’on intègre un fichier sommaire.xml de 1 document virtuel.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 228-CaptureMasse-OK-Virtuel-Un-Document"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>229</id>
            <code>229-CaptureMasse-OK-Virtuel-Un-Document-Complet</code>
            <description>
               Ce test permet de vérifier que la capture de masse fonctionne correctement lorsque l’on intègre un fichier sommaire.xml de 5000 pages. Ces documents virtuels sont intégrés 2 pages par 2 pages et le dernier document contient la totalité des pages du document pdf d’origine.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 229-CaptureMasse-OK-Virtuel-Un-Document-Complet" AND NumeroRecours:"1"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 229-CaptureMasse-OK-Virtuel-Un-Document-Complet" AND NumeroRecours:"2501"</luceneExempleList>
         </CasTest>  
         
         <CasTest>
            <id>250</id>
            <code>250-CaptureMasse-KO-SansAuthentification</code>
            <description>
               On vérifie que l'authentification applicative est activée sur l'opération "archivageMasse" du service web SaeService. Pour cela, on invoque l'opération "archivageMasse" en omettant le VI dans le message SOAP.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>252</id>
            <code>252-CaptureMasse-KO-Tor-MetadonneeVide</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, sa liste de métadonnées est vide
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 252-CaptureMasse-KO-Tor-MetadonneeVide"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>253</id>
            <code>253-CaptureMasse-KO-Tor-MetadonneeObligatoireOmise</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, une métadonnée obligatoire est omise
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 253-CaptureMasse-KO-Tor-MetadonneeObligatoireOmise"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>254</id>
            <code>254-CaptureMasse-KO-Tor-MetadonneeObligatoireVide</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, une métadonnée obligatoire a une valeur vide
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 254-CaptureMasse-KO-Tor-MetadonneeObligatoireVide"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>255</id>
            <code>255-CaptureMasse-KO-Tor-MetadonneeInconnue</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, sa liste des métadonnées contient une métadonnée inconnue du SAE
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 255-CaptureMasse-KO-Tor-MetadonneeInconnue"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>256</id>
            <code>256-CaptureMasse-KO-Tor-MetadonneeDoublon</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, il y a plusieurs occurrences de la même métadonnée dans sa liste des métadonnées
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 256-CaptureMasse-KO-Tor-MetadonneeDoublon"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>257</id>
            <code>257-CaptureMasse-KO-Tor-MetadonneeFormatIncorrect</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, sa liste des métadonnées contient une métadonnée dont la valeur n'est pas conforme au format attendu.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 257-CaptureMasse-KO-Tor-MetadonneeFormatIncorrect"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>258</id>
            <code>258-CaptureMasse-KO-Tor-MetadonneeNonArchivable</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, la liste des métadonnées contient une métadonnée qui n’est pas spécifiable lors de l’archivage
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 258-CaptureMasse-KO-Tor-MetadonneeNonArchivable"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>259</id>
            <code>259-CaptureMasse-KO-Tor-HashIncorrect</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, le hash du fichier est différent du hash spécifié dans le sommaire.xml
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 259-CaptureMasse-KO-Tor-HashIncorrect"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>262</id>
            <code>262-CaptureMasse-KO-Tor-FichierInexistant</code>
            <description>
               On vérifie que la capture de masse en mode "tout ou rien" a échoué (aucun document mis en archive, erreur présente dans resultats.xml) si, pour un document, le chemin de fichier pointe sur un fichier inexistant
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 262-CaptureMasse-KO-Tor-FichierInexistant"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>264</id>
            <code>264-CaptureMasse-KO-Tor-TailleZero</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsqu'un des fichiers à archiver possède une taille à 0 octet.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 264-CaptureMasse-KO-Tor-TailleZero"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>265</id>
            <code>265-CaptureMasse-KO-FichierSommaireIncorrect</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque le fichier sommaire.xml est syntaxiquement incorrect.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 265-CaptureMasse-KO-FichierSommaireIncorrect"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>266</id>
            <code>266-CaptureMasse-KO-AutreModeToutOuRien</code>
            <description>
               La Capture de masse échoue car le fichier sommaire.xml précise un mode d’intégration "partiel"
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 266-CaptureMasse-KO-AutreModeToutOuRien"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>267</id>
            <code>267-CaptureMasse-KO-Tor-PlusieursFichiersIntrouvables</code>
            <description>
               La Capture de masse échoue car le fichier sommaire.xml précise un mode d’intégration "partiel"
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 267-CaptureMasse-KO-Tor-PlusieursFichiersIntrouvables"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>268</id>
            <code>268-CaptureMasse-KO-Tor-3-meme-doc-avec-premier-en-erreur-arbo</code>
            <description>
               La Capture de masse échoue et on a une seule erreur sur une arborescence
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 268-CaptureMasse-KO-Tor-3-meme-doc-avec-premier-en-erreur-arbo"</luceneExemple>
         </CasTest>

         <!--
         OBSOLETE depuis le lot 120511
         <CasTest>
            <id>269</id>
            <code>269-CaptureMasse-KO-Deux-Lancements</code>
            <description>
               La Capture de masse échoue sur le deuxième lancement si on a un seul serveur d’application
            </description>
            <implemente>true</implemente>
         </CasTest>
         -->

         <CasTest>
            <id>270</id>
            <code>270-CaptureMasse-KO-Tor-5000-Rollback</code>
            <description>
               La capture de masse échoue suite à la suppression d'un fichier image après l'analyse
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 270-CaptureMasse-KO-Tor-5000-Rollback"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>271</id>
            <code>271-CaptureMasse-KO-URL-ECDE-incorrecte</code>
            <description>
               La Capture de masse échoue car URL ECDE incorrecte
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>272</id>
            <code>272-CaptureMasse-KO-URL-ECDE-Repertoire-Sans-Droits-Ecriture</code>
            <description>
               La Capture de masse échoue car l’URL ECDE en lecture seul
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 272-CaptureMasse-KO-URL-ECDE-Repertoire-Sans-Droits-Ecriture"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>273</id>
            <code>273-CaptureMasse-KO-JarArretTomCatSansRepriseAvecStockage</code>
            <description>
               Capture de masse est interrompue et pas de redémarrage de dfce après la pause
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 273-CaptureMasse-KO-JarArretTomCatSansRepriseAvecStockage"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>275</id>
            <code>275-CaptureMasse-KO-AutreModeToutOuRien-Inconnu</code>
            <description>
               La capture de masse échoue car le batchMode possède une valeur non reconnue par le SAE et non autorisée par le XSD
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 275-CaptureMasse-KO-AutreModeToutOuRien-Inconnu"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>277</id>
            <code>277-CaptureMasse-Pile-KO-ExeIntrouvable</code>
            <description>
               Vérifie que la capture de masse en mode « tout ou rien » avec gestion des traitements dans une pile logue bien un dysfonctionnement dans le log de l’ordonnanceur quand l’exécutable sae-services-executable est introuvable.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 277-CaptureMasse-Pile-KO-ExeIntrouvable"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>278</id>
            <code>278-CaptureMasse-Pile-KO-CassandraKO</code>
            <description>
               Vérifie que la capture de masse en mode « tout ou rien » avec gestion des traitements dans une pile renvoie bien une erreur lorsqu’on essaie de stocker dans la pile alors que cassandra est arrêtée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 278-CaptureMasse-Pile-KO-CassandraKO"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>282</id>
            <code>282-CaptureMasse-Pile-KO-ArretDFCE-Lecture</code>
            <description>
               Ce test permet de vérifier que la capture de masse en mode « tout ou rien » avec gestion des traitements dans une pile réagisse correctement lors de l’arrêt brutal de DFCE, avant que la capture de masse ait démarré le stockage des documents.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 282-CaptureMasse-Pile-KO-ArretDFCE-Lecture"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>283</id>
            <code>283-CaptureMasse-Pile-KO-ArretDFCE-Stockage</code>
            <description>
               Ce test permet de vérifier que la capture de masse en mode « tout ou rien » avec gestion des traitements dans une pile réagisse correctement lors de l’arrêt brutal de DFCE, après que la capture de masse ait démarrée le stockage des documents.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 283-CaptureMasse-Pile-KO-ArretDFCE-Stockage"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>285</id>
            <code>285-CaptureMasse-KO-Lancement-Manuel-Job-NonReserve</code>
            <description>
               Ce test permet de vérifier que le lancement manuel de sae-services-executable.jar sur un job non réservé  provoque une erreur qui apparaît dans les logs du SAE.
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>286</id>
            <code>286-CaptureMasse-Pile-KO-Reste-Reserve</code>
            <description>
               Ce test permet de vérifier que, lorsqu’un job reste à l’état « Réservé » trop longtemps, un log de niveau ERROR est écrit dans le fichier de log de l’ordonnanceur.
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>287</id>
            <code>287-CaptureMasse-Pile-KO-Reste-EnCours</code>
            <description>
               Ce test permet de vérifier que, lorsqu’un job reste à l’état « En cours » trop longtemps, un log de niveau ERROR est écrit dans le fichier de log de l’ordonnanceur.
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>288</id>
            <code>288-CaptureMasse-KO-Format-XML-KO</code>
            <description>
               la capture de masse en mode "tout ou rien" renvoie une erreur spécifique dans le fichier resultats.xml lorsque l'on essaie d'intégrer un ficher XML qui ne respecte pas la desscription XSD
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 288-CaptureMasse-KO-Format-XML-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>289</id>
            <code>289-CaptureMasse-Avec-Hash-Fourni-KO-Tor-10</code>
            <description>
               Ce test permet de vérifier que la nouvelle capture de masse avec hash fonctionne correctement en refusant d’exécuter une capture lorsque le hash fourni n’est pas celui attendu.
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>290</id>
            <code>290-CaptureMasse-Avec-Hash-Recalcule-KO-Tor-10</code>
            <description>
               Ce test permet de vérifier que la nouvelle capture de masse avec hash fonctionne correctement en refusant d’exécuter une capture lorsque le hash fourni n’est pas celui attendu.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 290-CaptureMasse-Avec-Hash-Recalcule-KO-Tor-10"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>291</id>
            <code>291-CaptureMasse-Avec-Hash-Type-Hash-KO-Tor-10</code>
            <description>
               Ce test permet de vérifier que la nouvelle capture de masse avec hash fonctionne correctement en refusant d’exécuter une capture lorsque le hash fourni n’est pas autorisé.
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>294</id>
            <code>294-CaptureMasse-KO-Virtuel-Zero-Page</code>
            <description>
               Ce test permet de vérifier que la capture de masse en mode « tout ou rien » renvoie une erreur spécifique dans le fichier resultats.xml lorsque le fichier sommaire.xml référence un document virtuel de zéro page
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 294-CaptureMasse-KO-Virtuel-Zero-Page"</luceneExemple>
         </CasTest>
      </CasTests>

   </Categorie>


   <!-- ======================================================== -->
   <!-- Recherche -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Recherche</Nom>
      <Id>3</Id>
      <CasTests>

         <CasTest>
            <id>300</id>
            <code>300-Recherche-TestLibre</code>
            <description>
               Test libre de la recherche => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:2.3.1.1.12 AND DateArchivage:2011-09-01</luceneExemple>
         </CasTest>

         <CasTest>
            <id>301</id>
            <code>301-Recherche-OK-Standard</code>
            <description>
               On vérifie que la recherche fonctionne dans des conditions "standard" d'utilisation.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 301-Recherche-OK-Standard" AND CodeRND:("2.3.1.1.12" OR "2.3.1.1.8") AND NumeroCompteExterne:"30148032541101600" AND (DateCreation: [20101001 TO 20101007])</luceneExemple>
         </CasTest>

         <CasTest>
            <id>302</id>
            <code>302-Recherche-OK-Tronquee</code>
            <description>
               On vérifie que la recherche fonctionne avec une requête de recherche simple et peu restrictive, de sorte à provoquer la troncature du résultat de recherche
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 302-Recherche-OK-Tronquee"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>303</id>
            <code>303-Recherche-OK-EnSpecifiantMetadonnees</code>
            <description>
               On vérifie que la recherche fonctionne lorsqu'on spécifie les métadonnées que l'on souhaite dans les résultats de recherche
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 303-Recherche-OK-EnSpecifiantMetadonnees"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>304</id>
            <code>304-Recherche-OK-Complexe-Dates</code>
            <description>
               On vérifie que la recherche fonctionne avec une requête de recherche complexe manipulant des dates
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 304-Recherche-OK-Complexe-Dates" AND (DateCreation:20050618 OR DateCreation:[20050718 TO 20050722] OR DateCreation:{20050818 TO 20050822})</luceneExemple>
         </CasTest>

         <CasTest>
            <id>305</id>
            <code>305-Recherche-OK-RequeteLuceneAvecDeuxPointsDansValeurRecherchee</code>
            <description>
               On vérifie que la recherche fonctionne correctement si la valeur recherchée contient un caractère deux-points (:)
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 305-Recherche-OK-RequeteLuceneAvecDeuxPointsDansValeurRecherchee" AND ApplicationProductrice:"Gauche\:Droite"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>306</id>
            <code>306-Recherche-OK-RequeteLuceneAvecJokerDansValeurRecherchee</code>
            <description>
               On vérifie que la recherche fonctionne lorsque l'une des valeurs recherchées dans la requête LUCENE contient le caractère joker (*).
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 306-Recherche-OK-RequeteLuceneAvecJokerDansValeurRecherchee" AND CodeRND:2.3.1.1.*</luceneExemple>
         </CasTest>

         <CasTest>
            <id>307</id>
            <code>307-Recherche-OK-Meta-I-Meta-NI</code>
            <description>
               Recherche sur des métadonnées non indexée et indexée
            </description>
            <implemente>true</implemente>
            <luceneExemple>NumeroStructure:"000050221" AND Siren:"3070000001"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>308</id>
            <code>308-Recherche-OK-avec-espace-et-joker</code>
            <description>
               Recherche avec dans la requête des espaces et des caractères joker
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:"2.3.1.1.12" AND Denomination:Test\ 308\-Recherche*</luceneExemple>
         </CasTest>

         <CasTest>
            <id>309</id>
            <code>309-Recherche-OK-ProjetAttestations</code>
            <description>
               Recherche classique des utilisateurs pour le projet attestation
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:2.3.1.1.12 AND Siren:3095555551 AND DateCreation:20070401</luceneExemple>
         </CasTest>

         <CasTest>
            <id>311</id>
            <code>311-Recherche-OK-Date-Creation</code>
            <description>
               Recherche sur la date de création
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination: "Test 311-Recherche-OK-Date-Creation" AND DateCreation:[20101003 TO 20101005]</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>312</id>
            <code>312-Recherche-OK-Date-Reception</code>
            <description>
               Recherche sur la date de réception
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 312-Recherche-OK-Date-Reception" AND DateReception:[20111103 TO 20111105]</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>313</id>
            <code>313-Recherche-OK-Date-Debut-Conservation</code>
            <description>
               Recherche sur la date de début de conservation
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 313-Recherche-OK-Date-Debut-Conservation" AND DateDebutConservation:[20090903000000000 TO 20090905000000000]</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>314</id>
            <code>314-Recherche-OK-ConsultationPresenceMetadonneeVide</code>
            <description>
               Recherche avec dans les résultats une métadonnée dont la valeur est vide
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 314-Recherche-OK-ConsultationPresenceMetadonneeVide"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>315</id>
            <code>315-Recherche-OK-ConsultationMetadonneeEnDouble</code>
            <description>
               Recherche avec dans les résultats une métadonnée en double
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 315-Recherche-OK-ConsultationMetadonneeEnDouble"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>316</id>
            <code>316-Recherche-OK-ValeurMetaIdentiqueNomMeta-DateCreation</code>
            <description>
               Recherche avec, dans la requête de recherche, une valeur de métadonnée qui est la même qu'un code de métadonnée
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 316-Recherche-OK-ValeurMetaIdentiqueNomMeta-DateCreation"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>319</id>
            <code>319-Recherche-OK-Toutes-Metadonnes-Recherchable</code>
            <description>
               On vérifie que la recherche fonctionne sur toutes les métadonnées recherchables accompagnée d’une métadonnée indexée. La métadonnée indexée choisie pour nos tests est la dénomination.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND ApplicationProductrice:"ADELAIDE"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND ApplicationTraitement:"ATTESTATIONS"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND CodeActivite:3</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND CodeFonction:2</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND CodeOrganismeGestionnaire:CER69</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND CodeOrganismeProprietaire:UR750</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND CodeRND:2.3.1.1.12</luceneExempleList>            
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND NniEmployeur:148032541101648</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND NumeroCompteExterne:30148032541101600</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND NumeroCompteInterne:719900</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND NumeroIntControle:57377</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND NumeroPersonne:123854</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND NumeroRecours:1</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND NumeroStructure:000050221</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND Periode:PERI</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND PseudoSiret:4914736610005</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND ReferenceDocumentaire:1234567890AZERTyuio1234567890</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND RUM:"24534Y8465435413Y012312356690123"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND Siren:0123456789</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND Siret:12345678912345</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND SiteAcquisition:CER44</luceneExempleList>
            <luceneExempleList>Denomination:"Test 319-Recherche-OK-Toutes-Meta-Recherchables" AND Titre:"Attestation de vigilance"</luceneExempleList>            
         </CasTest>


         <CasTest>
            <id>350</id>
            <code>350-Recherche-KO-SansAuthentification</code>
            <description>
               Ce test vérifie que l'authentification applicative est activée sur l'opération "recherche" du service web SaeService. Pour cela, on invoque l'opération "recherche" en omettant le VI dans le message SOAP.
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:"1.2.3.4.5"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>351</id>
            <code>351-Recherche-KO-RequeteVide</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsque la requête de recherche est vide
            </description>
            <implemente>true</implemente>
            <luceneExemple> </luceneExemple>
         </CasTest>

         <CasTest>
            <id>352</id>
            <code>352-Recherche-KO-MauvaiseRequeteLucene</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsque la requête LUCENE est incorrecte
            </description>
            <implemente>true</implemente>
            <luceneExemple>gloubi@"boulga"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>353</id>
            <code>353-Recherche-KO-MetadonneeConsultInexistante</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsque la liste des métadonnées souhaitées en retour de la recherche contient un code de métadonnées non reconnu par le SAE
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:"2.3.1.1.12"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>354</id>
            <code>354-Recherche-KO-MetadonneeConsultNonAutorisee</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsque la liste des métadonnées souhaitées en retour de la recherche contient un code de métadonnées qui n’est pas consultable
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:"2.3.1.1.12"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>355</id>
            <code>355-Recherche-KO-MetadonneeRechercheInexistante</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsque la requête de recherche contient un code de métadonnées non reconnu par le SAE
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:"2.3.1.1.12" AND Gloubi:"1234" AND Boulga:"5678"</luceneExemple>
         </CasTest>

         <CasTest>
            <id>356</id>
            <code>356-Recherche-KO-MetadonneeRechercheNonAutorisee</code>
            <description>
               On vérifie que la recherche renvoie la bonne erreur lorsqu'une des métadonnées utilisées dans la requête de recherche n’est pas utilisable comme critère de recherche.
            </description>
            <implemente>true</implemente>
            <luceneExemple>CodeRND:"2.3.1.1.12" AND TailleFichier:34 AND FormatFichier:"fmt/354" AND VersionRND:"11.1"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>357</id>
            <code>357-Recherche-KO-SAESyntaxeLuceneIncorrecte</code>
            <description>
               Envoie d’une SoapFault suite à l’envoie d’une requête syntaxiquement incorrecte
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:::Recherche</luceneExemple>
         </CasTest>

      </CasTests>

   </Categorie>


   <!-- ======================================================== -->
   <!-- Consultation -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Consultation</Nom>
      <Id>4</Id>
      <CasTests>

         <CasTest>
            <id>400</id>
            <code>400-Consultation-TestLibre</code>
            <description>
               Test libre de la consultation => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>401</id>
            <code>401-Consultation-OK-RetourContenu</code>
            <description>
               On vérifie que la consultation fonctionne correctement lorsque le retour demandé est le contenu du document (réception du contenu et des métadonnées)
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>402</id>
            <code>402-Consultation-OK-version-120150</code>
            <description>
               On vérifie que la consultation fonctionne correctement pour le client "Attestations" du lot 120150
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>403</id>
            <code>403-Consultation-OK-TouteMetadonneeConsultable</code>
            <description>
               On vérifie que la consultation fonctionne correctement lorsqu'on demande toutes les métadonnées consultables
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>404</id>
            <code>404-Consultation-OK-TypeMime-MTOM-pdf</code>
            <description>
               On vérifie que le type MIME de la pièce jointe en consultationMTOM est correct dans le cas d'un PDF.
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>405</id>
            <code>405-Consultation-OK-TypeMime-MTOM-autre-pdf</code>
            <description>
               On vérifie que le type MIME de la pièce jointe en consultationMTOM est correct dans le cas d'un type non connu.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>450</id>
            <code>450-Consultation-KO-SansAuthentification</code>
            <description>
               Ce test vérifie que l'authentification applicative est activée sur l'opération "consultation" du service web SaeService. Pour cela, on invoque l'opération "consultation" en omettant le VI dans le message SOAP.
            </description>
            <implemente>true</implemente>
         </CasTest>

         <CasTest>
            <id>451</id>
            <code>451-Consultation-KO-IdArchivageInconnu</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque l'identifiant d'archivage ne correspond à aucune archive du SAE
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>452</id>
            <code>452-Consultation-KO-MetadonneeConsultInexistante</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque des métadonnées demandées à la consultation n'existent pas dans le référentiel des métadonnées
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>453</id>
            <code>453-Consultation-KO-MetadonneeConsultNonAutorisee</code>
            <description>
               On vérifie que la bonne erreur est renvoyée lorsque des métadonnées demandées à la consultation ne sont pas consultables
            </description>
            <implemente>true</implemente>
         </CasTest>

      </CasTests>

   </Categorie>
   
   <!-- ======================================================== -->
   <!-- Droits -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>Droits</Nom>
      <Id>5</Id>
      <CasTests>

         <CasTest>
            <id>1100</id>
            <code>1100-Droits-TestLibre</code>
            <description>
               Test libre des droits => pas de résultat attendu 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1100-Droits-TestLibre"</luceneExemple>
         </CasTest>
         
         <CasTest>
            <id>1101</id>
            <code>1101-Droits-Conformite-Archivage-Unitaire-ATT-VIGI</code>
            <description>
               Test qui doit permettre de valider que la fonctionnalité d’archivage unitaire est autorisée sur un PRMD précis 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1101-Droits-Conformite-Archivage-Unitaire-ATT-VIGI"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1102</id>
            <code>1102-Droits-Conformite-Archivage-Masse -ATT-VIGI</code>
            <description>
               Permet de valider qu’une fonctionnalité d’archivage de masse est autorisée sur un PRMD précis. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1102-Droits-Conformite-Archivage-Masse-ATT-VIGI"</luceneExemple>
         </CasTest>         
         <CasTest>
            <id>1103</id>
            <code>1103-Droits-Conformite-Archivage-ATT-VIGI</code>
            <description>
               Permet de valider que les fonctionnalités d’archivage unitaire et archivage de masse sont autorisées sur un PRMD précis.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1103-Droits-Conformite-Archivage-ATT-VIGI"</luceneExemple>
         </CasTest>         
         <CasTest>
            <id>1104</id>
            <code>1104-Droits-Conformite-Recherche-ATT-VIGI</code>
            <description>
               ce test permet de valider que les fonctionnalités de recherche autorisées sur un PRMD précis 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1104-Droits-Conformite-Recherche-ATT-VIGI"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1105a</id>
            <code>1105-Droits-Conformite-Consultation-ATT-VIGI</code>
            <description>
               ce test permet de valider que que les opérations « consultation » et « consultationMTOM » fonctionnent correctement avec les droits de consultation autorisées sur un PRMD précis.
            </description>
            <implemente>true</implemente>
         </CasTest>
         
         <CasTest>
            <id>1105b</id>
            <code>1105-Droits-Conformite-Consultation-MTOM-ATT-VIGI</code>
            <description>
               ce test permet de valider que que les opérations « consultation » et « consultationMTOM » fonctionnent correctement avec les droits de consultation autorisées sur un PRMD précis.
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1106</id>
            <code>1106-Droits-Conformite-All-ATT-VIGI</code>
            <description>
               ce test permet de valider toutes les fonctionnalités autorisées sur un PRMD précis. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1106-Droits-Conformite-All-ATT-VIGI"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1107</id>
            <code>1107-Droits-Conformite-Archivage-Unitaire-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage unitaire est autorisée sur un PRMD précis 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1107-Droits-Conformite-Archivage-Unitaire-ATT-AEPL"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1108</id>
            <code>1108-Droits-Conformite-Archivage-Masse-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage de masse est autorisée sur un PRMD précis
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1108-Droits-Conformite-Archivage-Masse-ATT-AEPL"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1109</id>
            <code>1109-Droits-Conformite-Archivage-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage, aussi bien l’archivage unitaire que l’archivage de masse, est autorisé sur un PRMD précis
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1109-Droits-Conformite-Archivage-ATT-AEPL"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1110</id>
            <code>1110-Droits-Conformite-Recherche-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité de recherche est autorisée sur un PRMD précis
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1110-Droits-Conformite-Recherche-ATT-AEPL"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1111a</id>
            <code>1111-Droits-Conformite-Consultation-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisée sur un PRMD précis
            </description>
            <implemente>true</implemente>
         </CasTest>                       
         <CasTest>
            <id>1111b</id>
            <code>1111-Droits-Conformite-Consultation-MTOM-ATT-AEPL</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisée sur un PRMD précis
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1112</id>
            <code>1112-Droits-Conformite-All-ATT-AEPL</code>
            <description>
               ce test permet de valider toutes les fonctionnalités autorisées sur un PRMD précis
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1112-Droits-Conformite-All-ATT-AEPL"</luceneExemple>
         </CasTest>         
         <CasTest>
            <id>1113</id>
            <code>1113-Droits-Conformite-Archivage-Unitaire-UNE-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage unitaire est autorisée sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1113-Droits-Conformite-Archivage-Unitaire-UNE-META" AND Siren:"3090000001"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1114</id>
            <code>1114-Droits-Conformite-Archivage-Masse-UNE-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage de masse est autorisée sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1114-Droits-Conformite-Archivage-Masse-UNE-META" AND Siren:"3090000001"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1115</id>
            <code>1115-Droits-Conformite-Archivage-UNE-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage unitaire est autorisée sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1115-Droits-Conformite-Archivage-UNE-META" AND Siren:"3090000001"</luceneExemple>
         </CasTest>                  
         <CasTest>
            <id>1116</id>
            <code>1116-Droits-Conformite-Recherche-UNE-META</code>
            <description>
               ce test permet de valider la fonctionnalité de recherche est autorisé sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1116-Droits-Conformite-Recherche-UNE-META"</luceneExemple>
         </CasTest>                  
         <CasTest>
            <id>1117a</id>
            <code>1117-Droits-Conformite-Consultation-UNE-META</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisé sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1116-Droits-Conformite-Recherche-UNE-META"</luceneExemple>
         </CasTest>                  
         <CasTest>
            <id>1117b</id>
            <code>1117-Droits-Conformite-Consultation-MTOM-UNE-META</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisé sur un PRMD contenant une seule métadonnée.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1116-Droits-Conformite-Recherche-UNE-META"</luceneExemple>
         </CasTest>                  
         <CasTest>
            <id>1118</id>
            <code>1118-Droits-Conformite-All-UNE-META</code>
            <description>
               ce test permet de valider toutes les fonctionnalités autorisées sur un PRMD précis
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1118-Droits-Conformite-All-UNE-META"</luceneExemple>
         </CasTest>  
         <CasTest>
            <id>1119</id>
            <code>1119-Droits-Conformite-Archivage-Unitaire-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage unitaire est autorisée sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1119-Droits-Conformite-Archivage-Unitaire-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1120</id>
            <code>1120-Droits-Conformite-Archivage-Masse-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage de masse est autorisée sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1120-Droits-Conformite-Archivage-Masse-PLUSIEURS-META"</luceneExemple>
         </CasTest>  
         <CasTest>
            <id>1121</id>
            <code>1121-Droits-Conformite-Archivage-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage, aussi bien l’archivage unitaire que l’archivage de masse, est autorisé sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1121-Droits-Conformite-Archivage-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1122</id>
            <code>1122-Droits-Conformite-Recherche-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité de recherche est autorisé sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1122-Droits-Conformite-Recherche-PLUSIEURS-META"</luceneExemple>
         </CasTest>           
         <CasTest>
            <id>1123a</id>
            <code>1123-Droits-Conformite-Consultation-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisé sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1123-Droits-Conformite-Consultation-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1123b</id>
            <code>1123-Droits-Conformite-Consultation-MTOM-PLUSIEURS-META</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisé sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1123-Droits-Conformite-Consultation-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1124</id>
            <code>1124-Droits-Conformite-All-PLUSIEURS-META</code>
            <description>
               ce test permet de valider toutes les fonctionnalités autorisées sur un PRMD contenant plusieurs métadonnées.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1124-Droits-Conformite-All-PLUSIEURS-META"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1125</id>
            <code>1125-Droits-Conformite-Recherche-PRMD</code>
            <description>
               Ce test permet de valider que la fonctionnalité de recherche renvoie bien les documents autorisés sur un PRMD.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1125-Droits-Conformite-Recherche-PRMD"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1126</id>
            <code>1126-Droits-Conformite-Consultation-PRMD</code>
            <description>
               Ce test permet de valider que la fonctionnalité de consultation est autorisé sur un PRMD alors que la requête renvoie plus de documents.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1126-Droits-Conformite-Consultation-PRMD"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1127</id>
            <code>1127-Droits-Conformite-Archivage-Unitaire-PRMD-DYNA</code>
            <description>
               ce test permet de valider la fonctionnalité d’archivage unitaire est autorisée sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1127-Droits-Conformite-Archivage-Unitaire-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1128</id>
            <code>1128-Droits-Conformite-Archivage-Masse-PRMD-DYNA </code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage de masse est autorisée sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1128-Droits-Conformite-Archivage-Masse-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1129</id>
            <code>1129-Droits-Conformite-Archivage-PRMD-DYNA</code>
            <description>
               ce test permet de valider que la fonctionnalité d’archivage, aussi bien l’archivage unitaire que l’archivage de masse, est autorisé sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1129-Droits-Conformite-Archivage-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1130</id>
            <code>1130-Droits-Conformite-Recherche-PRMD-DYNA</code>
            <description>
               ce test permet de valider que la fonctionnalité de recherche est autorisée sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1130-Droits-Conformite-Recherche-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1131a</id>
            <code>1131-Droits-Conformite-Consultation-PRMD-DYNA</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisée sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1130-Droits-Conformite-Recherche-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1131b</id>
            <code>1131-Droits-Conformite-Consultation-MTOM-PRMD-DYNA</code>
            <description>
               ce test permet de valider que la fonctionnalité de consultation est autorisée sur un PRMD dynamique.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1130-Droits-Conformite-Recherche-PRMD-DYNA"</luceneExemple>
         </CasTest>         
         <CasTest>
            <id>1132</id>
            <code>1132-Droits-Conformite-All-PRMD-DYNA</code>
            <description>
               ce test permet de valider toutes les fonctionnalités autorisées sur un PRMD dynamique. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1132-Droits-Conformite-All-PRMD-DYNA"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1133</id>
            <code>1133-Droits-Conformite-Plusieurs-PAGM</code>
            <description>
               ce test permet de valider que l’utilisation de 2 PAGM fonctionne dans notre test on testera la concaténation d’un PAGM qui autorise l’archivage unitaire et un archivage de masse
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1133-Droits-Conformite-Plusieurs-PAGM"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1134</id>
            <code>1134-Droits-Conformite-Archivage-Masse-PRMD-DYNA-MULTI</code>
            <description>
               ce test permet de valider l’archivage de masse avec un PRMD dynamique sur plusieurs métadonnées dynamiques fonctionne bien
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1134-Droits-Conformite-Archivage-Masse-PRMD-DYNA-MULTI"</luceneExemple>
         </CasTest>         
         <CasTest>
            <id>1150</id>
            <code>1150-Droits-Toutes-Actions-KO-CS-Inconnu</code>
            <description>
               Ce test a pour objectif de vérifier le contrôle de l’existence du CS demandé en utilisant une action unitaire est correctement réalisé pour l’archivage unitaire, l’archivage de masse, la recherche et la consultation.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1150-Droits-Toutes-Actions-KO-CS-INCONNU"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1151</id>
            <code>1151-Droits-Archivage-Unitaire-KO-PAGM-Inconnu</code>
            <description>
               Ce test a pour objectif de vérifier le contrôle de l’existence du PAGM demandé en utilisant une action unitaire ici l’archivage unitaire 
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1152</id>
            <code>1152-Droits-Archivage-Unitaire-KO-PRMD-Innacessible</code>
            <description>
               ce test permet de valider que les fonctionnalités de recherche autorisées sur un PRMD précis 
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1153</id>
            <code>1153-Droits-Archivage-Masse-KO-PRMD-Innacessible</code>
            <description>
               ce test permet de vérifier l’application du contrôle du PRMD à partir d’un CS donné et d’un PAGM sur l’action unitaire archivage de masse fonctionne correctement
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1153-Droits-Archivage-Masse-KO-PRMD-Innacessible"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1154</id>
            <code>1154-Droits-Archivage-Masse-KO</code>
            <description>
               ce test permet de vérifier toutes les actions unitaires sachant que dans le PAGM que l’on utilise on n’a pas donné la possibilité d’utiliser l’archivage de masse.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1154-Droits-Archivage-Masse-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1155</id>
            <code>1155-Droits-Archivage-Masse-KO-PRMD-DYNA-INNACCESSIBLE</code>
            <description>
               ce test permet de valider l’archivage de masse avec un PRMD dynamique sur plusieurs métadonnées dynamiques refuse l’intégration de masse si une valeur dynamique ne respecte pas la contrainte.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1155-Droits-Archivage-Masse-KO-PRMD-DYNA-INNACCESSIBLE"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1156a</id>
            <code>1156-Droits-Consultation-KO-PRMD-DYNA-INNACCESSIBLE</code>
            <description>
               ce test permet de valider la consultation avec un PRMD dynamique sur plusieurs métadonnées dynamiques. Aucune consultation réalisée si une valeur dynamique ne respecte pas la contrainte.
            </description>
            <implemente>true</implemente>
         </CasTest>
      </CasTests>

   </Categorie>
   
   
   <!-- ======================================================== -->
   <!-- SAE - Modification -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>SAI - Modification</Nom>
      <Id>6</Id>
      <CasTests>

         <CasTest>
            <id>1799</id>
            <code>1799-SAI-Modification-TestLibre</code>
            <description>
               SAI - Test libre de la modification 
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1700</id>
            <code>1700-Ged-Technique-OK-Modification-Valeur-Meta</code>
            <description>
               Le but de ce test est de vérifier qu’il est possible de modifier la valeur d’une métadonnée standard. Si la métadonnée a déjà une valeur celle-ci sera écrasée. On effectuera donc l’opération de capture unitaire puis une modification et enfin une recherche afin de vérifier que la modification a bien été prise en compte.
            </description>
            <implemente>true</implemente>
            <luceneExempleList>Denomination:"Test 1700-Ged-Technique-OK-Modification-Meta"</luceneExempleList>
            <luceneExempleList>Denomination:"Test 1700-Ged-Technique-Modifiee"</luceneExempleList>
         </CasTest>
         <CasTest>
            <id>1701</id>
            <code>1701-Ged-Technique-OK-Suppression-Valeur-Meta</code>
            <description>
               Le but de ce test est de vérifier qu’il est possible d’enlever sans remettre une valeur à une métadonnée standard. En d’autres termes vider la métadonnée. On effectuera donc l’opération de capture unitaire puis une suppression et enfin une recherche afin de vérifier que la suppression a bien été prise en compte.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1701-Ged-Technique-OK-Meta-Retrait-Valeur"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1702</id>
            <code>1702-Ged-Technique-OK-Modification-Valeur-Meta-Avec-Regle</code>
            <description>
               Le but de ce test est de vérifier qu’il est possible de modifier la valeur d’une métadonnée qui a une règle de gestion. On effectuera donc l’opération de capture unitaire puis une modification du CodeRND. Enfin on lancera une recherche afin de vérifier que la modification des métadonnées impactées par la règle de gestion a bien été faite.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1702-Ged-Technique-OK-Modification-Valeur-Meta-Avec-Regle"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1703</id>
            <code>1703-Ged-Technique-OK-Ajout-Valeur-Meta-Vide</code>
            <description>
               Le but de ce test est de vérifier qu’il est possible d’ajouter une valeur à une métadonnée vide pour un document donné. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1703-Ged-Technique-OK-Ajout-Valeur-Meta-Vide"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1704</id>
            <code>1704-Ged-Technique-OK-Ajout-Valeur-Meta-Vide-Dico</code>
            <description>
               Le but de ce test est de vérifier qu’il est possible d’ajouter une valeur à une métadonnée vide pour un document donné. La particularité de ce test par rapport au précédent c’est que la métadonnée à laquelle on donne une valeur a un dictionnaire. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1704-Ged-Technique-OK-Ajout-Valeur-Meta-Vide-Dico"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1705</id>
            <code>1705-Ged-Technique-OK-Suppression-Valeur-Meta-Vide</code>
            <description>
               Le but de ce test est de vérifier que le cas de suppression d’une valeur non renseigné est géré. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1705-Ged-Technique-OK-Suppression-Valeur-Meta-Vide"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1750</id>
            <code>1750-Ged-Technique-KO-Modification-Meta-Interdite</code>
            <description>
               Le but de ce test est de vérifier qu’il n’est pas possible de modifier certaines métadonnées telles que le Hash, le Type de Hash. Dans notre test nous prendrons le Type de Hash.
               On effectuera donc l’opération de capture unitaire puis une tentative de modification de la métadonnée TypeHash. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1750-Ged-Technique-KO-Modification-Valeur-Meta-Interdite"</luceneExemple>
         </CasTest>

      </CasTests>

   </Categorie>
   
   <!-- ======================================================== -->
   <!-- SAE - Suppression -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>SAI - Suppression</Nom>
      <Id>7</Id>
      <CasTests>

         <CasTest>
            <id>1699</id>
            <code>1699-SAI-Suppression-TestLibre</code>
            <description>
               SAI - Test libre de la suppression 
            </description>
            <implemente>true</implemente>
         </CasTest>
         <CasTest>
            <id>1600</id>
            <code>1600-Ged-Technique-OK-Suppression-Doc-Existant</code>
            <description>
               Ce test permet de vérifier que le document a bien été supprimé. On commencera par stocker un document, vérifier que ce document est bien présent. Puis on le supprimera et on vérifiera qu’il a bien disparu.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1600-Ged-Technique-OK-Suppression-Doc-Existant"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1601</id>
            <code>1601-Ged-Technique-OK-Suppression-Doc-Existant-Arret-DFCE</code>
            <description>
               Ce test permet de vérifier que le document n’a pas été supprimé car DFCE est arrêté. On commencera par stocker un document, vérifier que ce document est bien présent. Puis on tentera de le supprimer et on vérifiera qu’il est toujours bien présent. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1601-Ged-Technique-OK-Suppression-Doc-Existant-Arret-DFCE"</luceneExemple>
         </CasTest>

      </CasTests>

   </Categorie>
   
   <!-- ======================================================== -->
   <!-- Formats -->
   <!-- ======================================================== -->
   
   <Categorie>

      <Nom>Formats</Nom>
      <Id>8</Id>
      <CasTests>
         <!-- Controle de format en capture unitaire -->
         <CasTest>
            <id>1802</id>
            <code>1802-FCP-CU-OK-NonIdentification-NonValidation-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats sans identification et sans validation
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1802-FCP-CU-OK-NonIdentification-NonValidation-FMT354"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1803a</id>
            <code>1803-1-FCP-CU-OK-Identification-NonValidation-Monitor-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode monitor. Avec un fichier validé par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1803-1-FCP-CU-OK-Identification-NonValidation-Monitor-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1803b</id>
            <code>1803-2-FCP-CU-OK-Identification-NonValidation-Monitor-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode monitor. Avec un fichier non validé par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1803-2-FCP-CU-OK-Identification-NonValidation-Monitor-FMT354-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1804a</id>
            <code>1804-1-FCP-CU-OK-Identification-NonValidation-Strict-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strict avec un fichier dont le format est compatible en identification.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1804-1-FCP-CU-OK-Identification-NonValidation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1804b</id>
            <code>1804-2-FCP-CU-OK-Identification-NonValidation-Strict-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strict.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1804-2-FCP-CU-OK-Identification-NonValidation-Strict-FMT354-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1805a</id>
            <code>1805-1-FCP-CU-OK-Identification-Validation-Monitor-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et avec validation en mode Monitor. Avec un fichier valide droid et pdfbox.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1805-1-FCP-CU-OK-Identification-Validation-Monitor-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1805b</id>
            <code>1805-2-FCP-CU-OK-Identification-Validation-Monitor-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et avec validation en mode Monitor. Avec un fichier valide droid et non valide Pdfbox.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1805-2-FCP-CU-OK-Identification-Validation-Monitor-FMT354-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1806a</id>
            <code>1806-1-FCP-CU-OK-Identification-Validation-Strict -FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et avec validation en modeStrict. Avec un fichier valide droid et pdfbox.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1806-1-FCP-CU-OK-Identification-Validation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1806b</id>
            <code>1806-2-FCP-CU-OK-Identification-Validation-Strict-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et avec validation en mode Monitor. Avec un fichier valide droid et non valide Pdfbox.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1806-2-FCP-CU-OK-Identification-Validation-Strict-FMT354-KO"</luceneExemple>
         </CasTest>
         <!-- Controle de format en capture de masse -->
         <CasTest>
            <id>1821</id>
            <code>1821-FCP-CM-OK-NonIdentification-NonValidation-FMT354</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats sans identification et sans validation pour la capture de masse.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1821-FCP-CM-OK-NonIdentification-NonValidation-FMT354"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1822a</id>
            <code>1822-1-FCP-CM-OK-Identification-NonValidation-Monitor-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode monitor sur une capture de masse. Avec des fichiers validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1822-1-FCP-CM-OK-Identification-NonValidation-Monitor-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1822b</id>
            <code>1822-2-FCP-CM-OK-Identification-NonValidation-Monitor-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode monitor sur une capture de masse. Avec des fichiers non validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1822-2-FCP-CM-OK-Identification-NonValidation-Monitor-FMT354-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1823a</id>
            <code>1823-1-FCP-CM-OK-Identification-NonValidation-Strict-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strict sur une capture de masse. Avec des fichiers validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1823-1-FCP-CM-OK-Identification-NonValidation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1823b</id>
            <code>1823-2-FCP-CM-OK-Identification-NonValidation-Strict-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strictsur une capture de masse. Avec des fichiers non validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1823-2-FCP-CM-OK-Identification-NonValidation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1824a</id>
            <code>1824-1-FCP-CM-OK-Identification-Validation-Monitor-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Monitor sur une capture de masse. Avec des fichiers validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1824-1-FCP-CM-OK-Identification-Validation-Monitor-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1824b</id>
            <code>1824-2-FCP-CM-OK-Identification-Validation-Monitor-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Monitor sur une capture de masse. Avec des fichiers non validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1824-2-FCP-CM-OK-Identification-Validation-Monitor-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1825a</id>
            <code>1825-1-FCP-CM-OK-Identification-Validation-Strict-FMT354-OK</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strict sur une capture de masse. Avec des fichiers validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1825-1-FCP-CM-OK-Identification-Validation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1825b</id>
            <code>1825-2-FCP-CM-OK-Identification-Validation-Strict-FMT354-KO</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats avec identification et sans validation en mode Strict sur une capture de masse. Avec des fichiers non validés par Droid en FMT354 ou équivalent.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1825-2-FCP-CM-OK-Identification-Validation-Strict-FMT354-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1812</id>
            <code>1812-FCP-CM-OK-Identification-NonValidation-FMT354</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats sans identification et avec validation en mode Strict pour la capture de masse.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1812-FCP-CM-OK-Identification-NonValidation-FMT354"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1813</id>
            <code>1813-FCP-CM-OK-NonIdentification-Validation-Monitor-FMT354</code>
            <description>
               Ce test permet de vérifier que le SAE fonctionne correctement suite à l’intégration de la gestion des profiles de contrôle des formats sans identification et avec validation en mode Monitor pour la capture de masse.
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1813-FCP-CM-OK-NonIdentification-Validation-Monitor-FMT354"</luceneExemple>
         </CasTest>

      </CasTests>

   </Categorie>
   
   <!-- ======================================================== -->
   <!-- PKI -->
   <!-- ======================================================== -->

   <Categorie>

      <Nom>PKI</Nom>
      <Id>9</Id>
      <CasTests>

         <CasTest>
            <id>1201</id>
            <code>1201-PKI-Verification-OK-Nom-Certificat-OK-Flag-OK</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise la PKI : PKI_TEST_AC_RACINE et le certificat applicatif APPLICATION_TEST_1  et qu’on effectue le contrôle du certificat applicatif
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1201-PKI-Verification-OK-Nom-Certificat-OK-Flag-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1202</id>
            <code>1202-PKI-Verification-OK-Nom-Certificat-KO-Flag-OK</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise la PKI : PKI_TEST_AC_RACINE et le certificat applicatif APPLICATION_TEST_2 qui n’existe pas et qu’on effectue le contrôle du certificat applicatif
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1202-PKI-Verification-OK-Nom-Certificat-KO-Flag-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1203</id>
            <code>1203-PKI-Verification-OK-Nom-Certificat-KO-Flag-KO</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise la PKI : PKI_TEST_AC_RACINE et le certificat applicatif APPLICATION_TEST_3 qui n’existe pas et qu’on effectue le contrôle du certificat applicatif
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1203-PKI-Verification-OK-Nom-Certificat-KO-Flag-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1204</id>
            <code>1204-PKI-CS-ANCIEN-SYSTEME-VI-OK</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise le contrat de service CS_ANCIEN_SYSTEME et qu’on signe le VI avec l’IGC de validation AED CN=PNR_Application_Test
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1204-PKI-CS-ANCIEN-SYSTEME-VI-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1205</id>
            <code>1205-PKI-CS-PLUSIEURS-CERTIFICATS-APPLICATIFS</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise un contrat de service avec plusieurs certificats applicatifs. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1205-PKI-CS-PLUSIEURS-CERTIFICATS-APPLICATIFS"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1251</id>
            <code>1251-PKI-Verification-KO-Nom-Certificat-CS-OK-Flag-OK</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand le VI utilise une autre PKI que celle du contrat de service. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1251-PKI-Verification-KO-Nom-Certificat-CS-OK-Flag-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1252</id>
            <code>1252-PKI-Verification-KO-Nom-Certificat-CS-OK-Flag-KO</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand le VI utilise une autre PKI que celle du contrat de service. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1252-PKI-Verification-KO-Nom-Certificat-CS-OK-Flag-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1253</id>
            <code>1253-PKI-Verification-KO-Nom-Certificat-VI-OK-Flag-OK</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand le VI utilise une autre PKI que celle du contrat de service. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1253-PKI-Verification-KO-Nom-Certificat-VI-OK-Flag-OK"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1254</id>
            <code>1254-PKI-Verification-KO-Nom-Certificat-VI-OK-Flag-KO</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand le VI utilise une autre PKI que celle du contrat de service. 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1254-PKI-Verification-KO-Nom-Certificat-VI-OK-Flag-KO"</luceneExemple>
         </CasTest>
         <CasTest>
            <id>1255</id>
            <code>1255-PKI-CS-ANCIEN-SYSTEME-VI-KO</code>
            <description>
               Ce test permet de valider le bon fonctionnement d’une action unitaire telle que l’archivage de masse quand on utilise le contrat de service CS_ANCIEN_SYSTEME et qu’on signe le VI avec une IGC autre que celle de validation AED CN=PNR_Application_Test 
            </description>
            <implemente>true</implemente>
            <luceneExemple>Denomination:"Test 1255-PKI-CS-ANCIEN-SYSTEME-VI-KO"</luceneExemple>
         </CasTest>

      </CasTests>

   </Categorie>

</Tests>