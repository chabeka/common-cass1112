package fr.urssaf.image.sae.exploitation.service;

import java.util.UUID;

import net.docubase.toolkit.model.base.Base;
import net.docubase.toolkit.service.ServiceProvider;
import fr.urssaf.image.sae.exploitation.modele.ConfigurationDfce;

/**
 * Classe de service d'informations sur l'etat de DFCE.
 * 
 *
 */
public final class DfceInfoService {

   private static final UUID UUID_NOTEXIST = UUID.fromString("00000000-0000-0000-0000-000000000000");
   
   
   /**
    * Constructeur privé, méthodes statiques uniquement
    */
   private DfceInfoService() {
      assert false;
   }
   
   
   /**
    * Retourne le service aprés une connection via les param du fichier de conf DFCE
    * 
    * @param configDfce representation technique du fichier de conf DFCE
    * @return service
    */
   public static ServiceProvider getDfceServiceProviderAndConnect(ConfigurationDfce configDfce) {
      
      ServiceProvider dfceService = ServiceProvider.newServiceProvider();
      
      dfceService.connect(
            configDfce.getDfceLogin(),
            configDfce.getDfcePassword(),
            configDfce.getDfceUrlTookit().toString());
      
      return dfceService;
      
   }
   
   
   /**
    * Retourne le boolean represantant la valeur de Dfce.isServerUp
    * 
    * @param configDfce
    *          fichier de configuration DFCE
    * 
    * @return si dfce is up 
    */
   public static boolean isDfceUp(ConfigurationDfce configDfce) {
      boolean isServUp = false;
      try {
      
         ServiceProvider dfceService = getDfceServiceProviderAndConnect(configDfce);
                  
         isServUp = dfceService.isServerUp();
         
         dfceService.disconnect();
      
      } catch(RuntimeException ex) {
         
         isServUp = false;
         
      }
      return isServUp;
   }
   
   
   /**
    * Retourne true si le couple DFCE/Cassandra est actif
    * 
    * @param configDfce
    *                fichier de configuration DFCE 
    *                
    * @return boolean                
    */
   public static boolean isDfceConsultationUp(ConfigurationDfce configDfce) {
      
      boolean retour = true;
      try {
         ServiceProvider dfceService = DfceInfoService.getDfceServiceProviderAndConnect(configDfce);
         
         // Test pour vérifier la connexion avec Cassandre
         // Si la recherche sur cette UUID renvoi null ou aucun document alors connexion a cassandra Ok
         // Sinon renvoie une RuntimeException et donc connexion n'est pas Up.
         Base base = dfceService.getBaseAdministrationService()
                                .getBase(configDfce.getDfceBasename());
         
         dfceService.getSearchService().getDocumentByUUID(base, UUID_NOTEXIST);
         
         dfceService.disconnect();
         
         
      } catch (RuntimeException ex) {
         retour = false;
      }
      return retour;
   }
   
}
