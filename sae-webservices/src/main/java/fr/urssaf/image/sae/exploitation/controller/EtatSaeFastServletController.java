package fr.urssaf.image.sae.exploitation.controller;

import java.io.IOException;
import java.io.Writer;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import fr.urssaf.image.sae.exploitation.service.DfceInfoService;

/**
 * Servlet implementation class EtatDfceFastServlet
 */
@Controller
@RequestMapping(value = "/SAEFastTest")
public class EtatSaeFastServletController {
   
	private static final long serialVersionUID = 1L;
   
	private static final String DFCE_FAST_OK = "OK";
	private static final String DFCEFAST_KO = "KO";
		
	@Autowired
	private DfceInfoService dfceInfoService;
	
   /**
	 * @see javax.servlet.http.HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	@RequestMapping(method = RequestMethod.GET)
	protected final void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	   
	   // Type MIME de la réponse HTTP 
      response.setContentType("text/html; charset=UTF-8");
      
      boolean codeOK = serviceUp(response.getWriter());
      
      if (!codeOK) {
         response.setStatus(HttpServletResponse.SC_PRECONDITION_FAILED); // 412
      }
      
	}

	/**
	 * @see javax.servlet.http.HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	@RequestMapping(method = RequestMethod.POST)
	protected final void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	   doGet(request, response);
	}
	
	/**
    * Methode qui retourne les valeurs à la méthode doGet()<br>
    * necessaire à la réponse affichée dans le navigateur.
    * 
    * @param writer afficher dans le navigateur de la réponse
    * 
    * @return un boolean pour savoir quel code HTTP affecter à la réponse
	 * @throws IOException 
    * 
    */
	public final boolean serviceUp(Writer writer) throws IOException {
	   
	   // Regarde si DFCE est up
      boolean dfceUp = dfceInfoService.isDfceUp();
      
      // Ecriture du HTML
      writeHtml(dfceUp,writer);
      
      // Renvoie du résultat
      return dfceUp;
      
	}
	
	/**
	 * Ecriture du code HTML generé
	 * 
	 * @param dfceUp
	 *            dfce is up?
	 * @param writer
	 *            writer de sortie
	 * @throws IOException
	 *            exception pour ecriture dans le writer
	 */
	public final void writeHtml(boolean dfceUp, Writer writer) throws IOException {
	   
	   // Code HTML de la réponse HTTP
	   writer.write("<HTML>");
      writer.write("<HEAD><TITLE>EtatDfceFastServlet</TITLE></HEAD>");
      writer.write("<BODY>");
      if (dfceUp) {
         writer.write(DFCE_FAST_OK);
      } else {
         writer.write(DFCEFAST_KO);
      }
      writer.write("</BODY>");
      writer.write("</HTML>");
	   
	}
	
	
}
