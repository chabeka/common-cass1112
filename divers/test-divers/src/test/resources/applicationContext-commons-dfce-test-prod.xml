<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xsi:schemaLocation="
		http://www.springframework.org/schema/beans	
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

   
   <bean id="dfceConnectionService"
      class="fr.urssaf.image.commons.dfce.service.impl.DFCEConnectionServiceImpl">
      <constructor-arg ref="dfceConnection" />
   </bean>
   
   <!-- 
      Ne pas importer le fichier de conf par defaut de commons-dfce-connection.xml
      Celui-ci injecte un bean saeConfigResource qui est un java.io.File
      Dans notre application, il faut que ce bean soit un org.springframework.core.io.FileSystemResource
    -->   
   <!--import resource="classpath*:/applicationContext-commons-dfce-connection.xml" /-->
   <!--Instantiation du bean de connexion Ã  la base DFCE -->
   <bean id="dfceConnection"
      class="fr.urssaf.image.commons.dfce.manager.DFCEConnectionFactory"
      factory-method="createDFCEConnectionBySAEConfigurationResource">
      <constructor-arg ref="saeConfigResource" />
   </bean>
   
   <!-- Chargement des fichiers properties -->
   <bean class="fr.urssaf.image.sae.commons.factory.PropertiesFactory"
      factory-method="load">
      <constructor-arg ref="saeConfigResource" />
   </bean>
   
   <bean id="saeConfigResource" class="org.springframework.core.io.FileSystemResource">
      <constructor-arg
         value="src/test/resources/config/sae-config-prod.properties" />
   </bean>
   
   <import resource="applicationContext-sae-metadata.xml" />

</beans>