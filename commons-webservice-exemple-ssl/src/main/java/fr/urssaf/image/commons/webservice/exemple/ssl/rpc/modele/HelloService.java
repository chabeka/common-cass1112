
/*
 * 
 */

package fr.urssaf.image.commons.webservice.exemple.ssl.rpc.modele;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.0
 * Fri Nov 05 10:31:12 CET 2010
 * Generated source version: 2.3.0
 * 
 */


@WebServiceClient(name = "HelloService", 
                  wsdlLocation = "file:/G:/bbarault/eclipse_workspace/commons-webservice-exemple-ssl/src/test/resources/rpc_literal.wsdl",
                  targetNamespace = "http://localhost/") 
public class HelloService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://localhost/", "HelloService");
    public final static QName HelloServicePort = new QName("http://localhost/", "HelloServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/G:/bbarault/eclipse_workspace/commons-webservice-exemple-ssl/src/test/resources/rpc_literal.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/G:/bbarault/eclipse_workspace/commons-webservice-exemple-ssl/src/test/resources/rpc_literal.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public HelloService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HelloService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns HelloServicePortType
     */
    @WebEndpoint(name = "HelloServicePort")
    public HelloServicePortType getHelloServicePort() {
        return super.getPort(HelloServicePort, HelloServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloServicePortType
     */
    @WebEndpoint(name = "HelloServicePort")
    public HelloServicePortType getHelloServicePort(WebServiceFeature... features) {
        return super.getPort(HelloServicePort, HelloServicePortType.class, features);
    }

}
