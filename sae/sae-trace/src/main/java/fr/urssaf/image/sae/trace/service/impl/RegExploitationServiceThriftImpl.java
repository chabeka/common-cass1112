/**
 *
 */
package fr.urssaf.image.sae.trace.service.impl;

import java.util.UUID;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import fr.urssaf.image.commons.cassandra.support.clock.JobClockSupport;
import fr.urssaf.image.sae.trace.dao.model.TraceRegExploitation;
import fr.urssaf.image.sae.trace.dao.model.TraceRegExploitationIndex;
import fr.urssaf.image.sae.trace.dao.support.AbstractTraceSupport;
import fr.urssaf.image.sae.trace.dao.support.TraceRegExploitationSupport;
import fr.urssaf.image.sae.trace.service.RegExploitationServiceThrift;
import fr.urssaf.image.sae.trace.service.support.LoggerSupport;

/**
 * @author AC75007648
 */
@Service
public class RegExploitationServiceThriftImpl implements RegExploitationServiceThrift {

  private final TraceRegExploitationSupport support;

  private final JobClockSupport clockSupport;

  private final LoggerSupport loggerSupport;

  private static final Logger LOGGER = LoggerFactory
                                                    .getLogger(RegSecuriteThriftServiceImpl.class);

  @Autowired
  public RegExploitationServiceThriftImpl(final TraceRegExploitationSupport support,
                                          final JobClockSupport clockSupport, final LoggerSupport loggerSupport) {
    super();
    this.support = support;
    this.clockSupport = clockSupport;
    this.loggerSupport = loggerSupport;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public JobClockSupport getClockSupport() {
    return clockSupport;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Logger getLogger() {
    return LOGGER;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public LoggerSupport getLoggerSupport() {
    return loggerSupport;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public AbstractTraceSupport<TraceRegExploitation, TraceRegExploitationIndex> getSupport() {
    return support;
  }

  @Override
  public TraceRegExploitation lecture(final UUID identifiant) {
    return getSupport().find(identifiant);
  }

}
