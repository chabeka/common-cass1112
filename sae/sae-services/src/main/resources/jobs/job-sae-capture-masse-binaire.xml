<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/batch"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">


   <job id="capture_masse">

      <listeners>
         <listener ref="captureMasseJobListener" />
      </listeners>

      <!-- Controle du fichier sommaire.xml -->
      <step id="controleSommaireStep">

         <tasklet ref="checkFileSommaireTasklet">
            <listeners>
               <listener ref="checkStateAfterStepListener" />
            </listeners>
         </tasklet>

         <next on="FAILED" to="finBloquant" />
         <next on="*" to="debutTraitement" />
      </step>

      <step id="debutTraitement">
         <tasklet ref="debutTraitementFlagTasklet">
            <listeners>
               <listener ref="debutTraitementFlagListener" />
            </listeners>
         </tasklet>

         <next on="FAILED" to="finBloquant" />
         <next on="*" to="controleFormatSommaireStep" />

      </step>

      <step id="controleFormatSommaireStep">
         <tasklet ref="checkFormatFileSommaireTasklet">
            <listeners>
               <listener ref="checkStateAfterStepListener" />
            </listeners>
         </tasklet>

         <next on="FAILED" to="finBloquant" />
         <next on="*" to="compteElements" />
      </step>

      <step id="compteElements">
         <tasklet ref="countSommaireDocumentsTasklet">
            <listeners>
               <listener ref="countSommaireDocumentsListener" />
            </listeners>
         </tasklet>

         <next on="FAILED" to="finBloquant" />
         <next on="DOCS" to="controleDocuments" />
         <next on="VDOCS" to="controleFichiersReference" />

      </step>




      <!-- contrôle des documents du fichier sommaire.xml -->
      <step id="controleDocuments">
         <tasklet>
            <chunk reader="sommaireReader" processor="compositeControlProcessor"
               writer="emptyWriter" commit-interval="1000" />
            <listeners>
               <listener ref="controleListener" />
               <listener ref="controleDocumentListener" />
               <listener ref="controleSommaireDocumentProcessor" />
            </listeners>
         </tasklet>

         <next on="FAILED" to="finErreur" />
         <next on="*" to="persistanceDocuments" />
      </step>

      <!-- persistance des documents du fichier sommaire.xml -->

      <step id="persistanceDocuments">
         <tasklet>
            <chunk reader="sommaireReader" processor="compositeProcessorControlePersistance"
               writer="storageDocumentWriter" commit-interval="5" />
            <listeners>
               <listener ref="storageDocumentWriter" />
               <listener ref="controleStorageDocumentProcessor" />
               <listener ref="stockageListener" />
               <listener ref="enrichissementStorageDocumentProcessor" />
            </listeners>
         </tasklet>


         <next on="FAILED" to="rollback" />
         <next on="FAILED_NO_ROLLBACK" to="finErreur" />
         <next on="*" to="finSucces" />
      </step>

      <step id="rollback">
         <tasklet ref="rollbackTasklet">

            <listeners>
               <listener ref="rollbackListener" />
            </listeners>
         </tasklet>

         <next on="*" to="finErreur" />
      </step>

      <step id="finBloquant">
         <tasklet ref="resultatsFileFailureErrorTasklet">
            <listeners>
               <listener ref="resultatsFileFailureErrorListener" />
            </listeners>
         </tasklet>
         <next on="*" to="finTraitement" />
      </step>

      <step id="finErreur">
         <tasklet ref="resultatsFileFailureTasklet">
            <listeners>
               <listener ref="resultatsFileFailureListener" />
            </listeners>
         </tasklet>

         <next on="*" to="finTraitement" />
      </step>

      <step id="finSucces">
         <tasklet ref="resultatsFileSuccessTasklet">
            <listeners>
               <listener ref="resultatsFileSuccessListener" />
            </listeners>
         </tasklet>

         <next on="*" to="finTraitement" />
      </step>

      <step id="finTraitement">
         <tasklet ref="finTraitementFlagTasklet">
            <listeners>
               <listener ref="finTraitementFlagListener" />
            </listeners>
         </tasklet>
      </step>


      <!-- contrôle des fichiers de référence -->
      <step id="controleFichiersReference">
         <tasklet>
            <chunk reader="fichierReferenceReader" processor="controleFichierReferenceProcessor"
               writer="virtualReferenceFileWriter" commit-interval="1" />
            <listeners>
               <listener ref="controleReferenceListener" />
               <listener ref="controleSommaireObjetNumeriqueProcessor" />
            </listeners>
         </tasklet>

         <next on="FAILED" to="finErreurVirtuel" />
         <next on="*" to="controleDocumentsVirtuels" />
      </step>

      <!-- contrôle des documents virtuels -->
      <step id="controleDocumentsVirtuels">
         <tasklet>
            <chunk reader="composantsReader" processor="controleComposantProcessor"
               writer="emptyWriter" commit-interval="1000" />
            <listeners>
               <listener ref="controleListener" />
               <listener ref="controleDocumentVirtuelListener" />
            </listeners>
         </tasklet>

         <next on="FAILED" to="finErreurVirtuel" />
         <next on="*" to="persistanceFichiersReference" />
      </step>

      <!-- persistance des fichiers de référence -->
      <step id="persistanceFichiersReference">
         <tasklet>
            <chunk reader="fichierReferenceReader" processor="persistanceFichierReferenceProcessor"
               writer="virtualStorageReferenceWriter" commit-interval="1" />

            <listeners>
               <listener ref="convertVirtualReferenceFileProcessor" />
               <listener ref="controleReferenceListener" />
               <listener ref="virtualStorageReferenceFileWriterListener" />
            </listeners>

         </tasklet>


         <next on="FAILED" to="rollbackVirtuel" />
         <next on="FAILED_NO_ROLLBACK" to="finErreurVirtuel" />
         <next on="*" to="persistanceDocumentsVirtuels" />
      </step>

      <!-- persistance des documents virtuels -->
      <step id="persistanceDocumentsVirtuels">
         <tasklet>
            <chunk reader="composantsReader" processor="persistanceDocumentsVirtuelsProcessor"
               writer="virtualStorageDocumentWriter" commit-interval="1000" />
            <listeners>
               <listener ref="enrichissementVirtualStorageDocumentProcessor" />
               <listener ref="virtualStockageListener" />
               <listener ref="virtualStorageDocumentWriter" />
            </listeners>
         </tasklet>


         <next on="FAILED" to="rollbackVirtuel" />
         <next on="FAILED_NO_ROLLBACK" to="finErreurVirtuel" />
         <next on="*" to="finSuccesVirtuel" />
      </step>

      <!--
         rollback des données insérées dans le cadre des documents
         virtuels
      -->
      <step id="rollbackVirtuel">
         <tasklet ref="rollbackVirtualTasklet">
            <listeners>
               <listener ref="rollbackVirtualListener" />
            </listeners>
         </tasklet>
         <next on="*" to="finErreurVirtuel" />
      </step>

      <!-- Ecriture du fichier résultat en erreur -->
      <step id="finErreurVirtuel">
         <tasklet ref="resultatsVirtualFileFailureTasklet" />
         <next on="*" to="finTraitement" />
      </step>

      <!-- Ecriture du fichier résultat en succes -->
      <step id="finSuccesVirtuel">
         <tasklet ref="resultatsVirtualFileSuccessTasklet">
            <listeners>
               <listener ref="resultatsFileSuccessListener" />
            </listeners>
         </tasklet>

         <next on="*" to="finTraitement" />
      </step>

   </job>

</beans:beans>
