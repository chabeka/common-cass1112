package fr.urssaf.image.sae.exploitation.service.impl;

import java.util.UUID;

import net.docubase.toolkit.model.base.Base;
import net.docubase.toolkit.service.ServiceProvider;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import fr.urssaf.image.commons.dfce.model.DFCEConnection;
import fr.urssaf.image.sae.exploitation.service.DfceInfoService;

/**
 * Classe de service d'informations sur l'etat de DFCE.
 * 
 * 
 */
@Service
public final class DfceInfoServiceImpl implements DfceInfoService {

   private static final UUID UUID_NOTEXIST = UUID
         .fromString("00000000-0000-0000-0000-000000000000");

   @Autowired
   private DFCEConnection storageCParameter;

   /**
    * Retourne le service aprés une connection via les param du fichier de conf
    * DFCE
    * 
    * @return service
    */
   public ServiceProvider getDfceServiceProviderAndConnect() {

      ServiceProvider dfceService = ServiceProvider.newServiceProvider();

      dfceService.connect(storageCParameter.getLogin(), storageCParameter
            .getPassword(), storageCParameter.getServerUrl().toString(),
            storageCParameter.getTimeout());

      return dfceService;

   }

   /**
    * Retourne le boolean representant la valeur de Dfce.isServerUp
    * 
    * @return si dfce is up
    */
   public boolean isDfceUp() {
      boolean isServUp = false;
      try {

         ServiceProvider dfceService = getDfceServiceProviderAndConnect();

         isServUp = dfceService.isServerUp();

         dfceService.disconnect();

      } catch (RuntimeException ex) {

         isServUp = false;

      }
      return isServUp;
   }

   /**
    * Retourne true si le couple DFCE/Cassandra est actif
    * 
    * @return boolean
    */
   public boolean isDfceConsultationUp() {

      boolean retour = true;
      try {
         ServiceProvider dfceService = getDfceServiceProviderAndConnect();

         // Test pour vérifier la connexion avec Cassandre
         // Si la recherche sur cette UUID renvoi null ou aucun document alors
         // connexion a cassandra Ok
         // Sinon renvoie une RuntimeException et donc connexion n'est pas Up.
         String baseName = storageCParameter.getBaseName();
         Base base = dfceService.getBaseAdministrationService().getBase(
               baseName);

         dfceService.getSearchService().getDocumentByUUID(base, UUID_NOTEXIST);

         dfceService.disconnect();

      } catch (RuntimeException ex) {
         retour = false;
      }
      return retour;
   }

}
