package fr.urssaf.image.sae.exploitation.service;

import java.io.IOException;
import java.net.MalformedURLException;

import javax.management.MBeanServerConnection;
import javax.management.ObjectName;
import javax.management.remote.JMXConnector;
import javax.management.remote.JMXConnectorFactory;
import javax.management.remote.JMXServiceURL;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import fr.urssaf.image.sae.exploitation.modele.CaptureMasseInfo;

/**
 * Classe de service permettant de savoir si une capture en masse<br> 
 * est lancée.
 *
 */
@Service
public final class CaptureMasseInfoService {

   @Autowired
   private Integer portJMX;
   
   
   /**
    * Méthode permettant de savoir si une capture en masse est lancée.
    * Si oui, un message indiquant son état est aussi recupéré.
    * 
    * @return captureMasseInfo
    *          un objet de type CaptureMasseInfo
    */
   public CaptureMasseInfo captureMasseEtat() {
         
         // Initialisation de l'objet retour contenant les infos a renvoyés
         CaptureMasseInfo captureMI = new CaptureMasseInfo();
         captureMI.setEnCours(false);
         captureMI.setEtatAvancement("");
         
         // Construction de l'URL JMX
         String urlJmx = "service:jmx:rmi:///jndi/rmi://:" + portJMX + "/jmxrmi";
         JMXServiceURL url;
         try {
            url = new JMXServiceURL(urlJmx);
         } catch (MalformedURLException e) {
            // NB : L'exception MalformedURLException ne sera jamais levée car on maîtrise l'URL JMX
            throw new RuntimeException(e);
         }
         
         // Tentative de connexion au port JMX du service exécutant la capture de masse
         JMXConnector jmxc;
         try {
            
            // Tentative de connexion
            jmxc = JMXConnectorFactory.connect(url, null);
            
            // Si pas de levée d'exception, alors une capture de masse est en cours
            captureMI.setEnCours(true);
            
            // Lecture de l'état en cours de la capture de masse
            try {
               MBeanServerConnection mbs = jmxc.getMBeanServerConnection();
               ObjectName name = new ObjectName("bean:name=archivageMasse");
               String etatCaptureMasse = (String) mbs.invoke(name, "retrieveBulkProgress",new Object[0], new String[0]);
               captureMI.setEtatAvancement(etatCaptureMasse);
            } catch (Exception e) {
               // Si une exception est levée, l'état de la capture de masse sera "Inconnu"
               captureMI.setEtatAvancement("Inconnu");
            }
            
         } catch (IOException e) {
            // Aucune capture de masse en cours
            captureMI.setEnCours(false);
         }
         
         return captureMI;
      }

}
