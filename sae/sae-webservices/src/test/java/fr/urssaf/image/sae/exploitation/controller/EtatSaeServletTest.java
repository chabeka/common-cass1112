package fr.urssaf.image.sae.exploitation.controller;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.StringWriter;

import org.jdom.Element;
import org.jdom.output.Format;
import org.jdom.output.XMLOutputter;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import fr.urssaf.image.sae.exploitation.service.DfceInfoService;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "/applicationContext-sae-servlet-test.xml" })
@SuppressWarnings( { "PMD.AtLeastOneConstructor" })
public class EtatSaeServletTest {
   
   private static final String NAME = "name";
   
   @Autowired
   private DfceInfoService dfceInfoService;
   
   @Autowired
   private EtatSaeServletController etatSaeServlet;
   
   // Pas nécessaire de vérifier si Cassandra/dfce est actif au démarrage, afin d'éviter des erreurs le cas échéant   
   //@Test
   public void isDfceConsultationUpSuccess() throws FileNotFoundException, IOException {
      
      assertTrue("IsDfceConsult n'est pas à true", dfceInfoService.isDfceConsultationUp());
      
   }
      
   
   /* Vérification de l'ecriture du flux XML */
   @Test
   public void writeXmlSuccess() throws IOException {
      boolean isDfceUp = true;
      boolean dfceConsultUp = true;
      
      Element actual = etatSaeServlet.writeXml(isDfceUp, dfceConsultUp);
      
      Element attendu = getElementTrue();
      
      assertEquals("Flux xml incorrect", actual.toString(), attendu.toString());
   }
   
   private Element getElementTrue() {
      // Element racine
      Element racine = new Element("application");
      racine.setAttribute(NAME, "SAE");
      
      // Element fils - composants
      Element composant = new Element("composants");
      
      // Elements composant
      Element composant1 = new Element("composant");
      composant1.setAttribute(NAME, "dfce_serveur");
      composant1.setAttribute("test", "OK");
      composant.addContent(composant1);
      
      Element composant2 = new Element("composant");
      composant2.setAttribute(NAME, "dfce_consultation");
      composant2.setAttribute("test", "OK");
      
      composant.addContent(composant2);
      
      racine.addContent(composant);
      
      return racine;
   }
  
   //@Test
   public void serviceUpSuccess() throws IOException {
      
      StringWriter stringActual = new StringWriter();
      etatSaeServlet.serviceUp(stringActual);
      
      StringWriter stringAttendu = getStringWriter();
      
      assertEquals("Resultat inattendu !", stringAttendu.toString(), stringActual.toString());
   }
   
   private StringWriter getStringWriter() throws IOException {
      // Initialisation du flux XML
      Element xml = getElementTrue();
      
      //JDOM - Ecriture du flux XML
      XMLOutputter out = new XMLOutputter(Format.getPrettyFormat());
      StringWriter stringWriterTest = new StringWriter();
      out.output(xml, stringWriterTest);
      
      return stringWriterTest;
   }
   
   
}
