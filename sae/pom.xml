<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>fr.urssaf.image.sae</groupId>
	<artifactId>sae</artifactId>
	<version>20.11.3-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>sae</name>

	<!-- Utilisation du fichier POM parent ALTAIR -->
	<parent>
		<groupId>fr.pnr.altair</groupId>
		<artifactId>parent</artifactId>
		<version>1.1.3</version>
	</parent>

	<properties>
		<!-- Version des plug-ins Maven -->
		<maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<aspectj-maven-plugin.version>1.11</aspectj-maven-plugin.version>
		<maven-shade-plugin.version>3.2.1</maven-shade-plugin.version>
		<maven-assembly-plugin.version>3.1.0</maven-assembly-plugin.version>
		<maven-replacer-plugin.version>1.4.1</maven-replacer-plugin.version>
		<wagon-webdav.version>3.2.0</wagon-webdav.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<axis2-maven-plugin.version>1.7.7</axis2-maven-plugin.version>
		<hawai-maven-plugin.version>5.0.2</hawai-maven-plugin.version>
		<sonar-maven-plugin.version>3.2</sonar-maven-plugin.version>
		<maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
		<maven-war-plugin.version>3.2.2</maven-war-plugin.version>
		<maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>
		
		<jackson.version>2.8.2</jackson.version>
		<cxf.version>3.0.1</cxf.version>
		<!-- ========================================================= Version 
			des dépendances des librairies réutilisables Image ========================================================= -->


		<!-- ========================================== commons-cassandra ========================================== -->
		<commons.cassandra>2.1.2</commons.cassandra>

		<!-- ========================================== commons-cassandra-spring-batch 
			========================================== -->
		<commons.cassandra.spring.batch>2.1.0</commons.cassandra.spring.batch>

		<!-- ========================================== commons-dfce ========================================== -->
		<commons.dfce>2.1.1</commons.dfce>

		<!-- ========================================== commons-pdfbox ========================================== -->
		<commons-pdfbox>1.1.1</commons-pdfbox>

		<!-- ========================================== commons-droid ========================================== -->
		<commons-droid>1.1.1</commons-droid>

		<!-- ========================================== commons-itext ========================================== -->
		<commons-itext>1.1.2</commons-itext>

		<!-- ========================================================= Version 
			des framework/dépendances ========================================================= -->


		<!-- ========================================== JUnit http://junit.org/ 
			========================================== -->
		<junit.version>4.12</junit.version>

		<!-- ========================================== SLF4J (Simple Logging Facade 
			for Java) http://www.slf4j.org/ ========================================== -->
		<org.slf4j.version>1.7.7</org.slf4j.version>


		<!-- ========================================== Ponts entre SLF4J et d'autres 
			frameworks de log http://www.slf4j.org/legacy.html ========================================== -->

		<!-- JCL (Jakarta Commons Logging) vers SLF4J -->
		<jcl-over-slf4j.version>1.7.7</jcl-over-slf4j.version>

		<!-- Log4J vers SLF4J -->
		<log4j-over-slf4j.version>1.7.7</log4j-over-slf4j.version>

		<!-- ========================================== Logback http://logback.qos.ch/ 
			========================================== -->
		<logback.version>1.2.3</logback.version>


		<!-- ========================================== Spring http://www.springsource.org/ 
			========================================== -->
		<spring.framework.version>4.3.21.RELEASE</spring.framework.version>
		<spring.security.version>4.2.10.RELEASE</spring.security.version>
		<spring.batch.version>2.1.9.RELEASE</spring.batch.version>

		<!-- ========================================== Apache Commons http://commons.apache.org/ 
			========================================== -->

		<apache.commons-configuration.version>1.6</apache.commons-configuration.version>
		<apache.commons-collections.version>3.2.1</apache.commons-collections.version>
		<apache.commons-io.version>2.0.1</apache.commons-io.version>
		<apache.commons-lang.version>2.6</apache.commons-lang.version>
		<apache.commons-codec.version>1.4</apache.commons-codec.version>
		<apache.commons-compress.version>1.4.1</apache.commons-compress.version>
		<apache.commons-beanutils.version>1.8.3</apache.commons-beanutils.version>

		<!-- ========================================== JDOM http://www.jdom.org/ 
			========================================== -->
		<org.jdom.version>1.1</org.jdom.version>


		<!-- ========================================== Joda Time (Java date and 
			time API) http://joda-time.sourceforge.net/ ========================================== -->
		<joda-time.version>2.0</joda-time.version>

		<!-- ========================================== Java Servlet API Spécifications 
			de la version 2.3 (JSR 53) : http://www.jcp.org/en/jsr/detail?id=53 Spécifications 
			des versions 2.4 et 2.5 (JSR 154) : http://www.jcp.org/en/jsr/detail?id=154 
			Spécifications de la version 3.0 (JSR 315) : http://www.jcp.org/en/jsr/detail?id=315 
			========================================== -->
		<javax.servlet.version>2.5</javax.servlet.version>


		<!-- ========================================== AspectJ http://www.eclipse.org/aspectj/ 
			========================================== -->
		<aspectj.version>1.9.2</aspectj.version>

		<!-- ========================================== Axis 2 http://ws.apache.org/axis/ 
			========================================== -->
		<axis2.version>1.7.9</axis2.version>

		<!-- ========================================== XStream http://xstream.codehaus.org/ 
			========================================== -->
		<xstream.version>1.3.1</xstream.version>

		<!-- ========================================== EasyMock http://www.easymock.org/ 
			========================================== -->
		<easymock.version>4.0.2</easymock.version>

		<!-- ========================================== JUnitPerf http://www.clarkware.com/software/JUnitPerf.html 
			========================================== -->
		<junitperf.version>1.9.1</junitperf.version>

		<!-- ========================================== Google Guava http://code.google.com/p/guava-libraries/ 
			========================================== -->
		<guava.version>19.0</guava.version>


		<!-- ========================================== Javassist http://www.javassist.org/ 
			On embarque Javassist par transitivité, on fixe la version pour résoudre 
			les conflits de version. ========================================== -->
		<javassist.version>3.18.1-GA</javassist.version>

		<!-- ========================================== FasterXML woodstox https://github.com/FasterXML/woodstox 
			========================================== -->
		<woodstox.version>5.3.0</woodstox.version>

		<!-- ========================================== stax-utils https://javalibs.com/artifact/net.java.dev.stax-utils/stax-utils 
			========================================== -->
		<stax-utils.version>20070216</stax-utils.version>


		<!-- ========================================== XMLUnit https://www.xmlunit.org/ 
			========================================== -->
		<xmlunit.version>2.6.2</xmlunit.version>

		<!-- Open CSV -->
		<opencsv.version>2.3</opencsv.version>

	</properties>

	<!-- Les modules -->
	<modules>

		<module>sae-bo</module>
		<module>sae-igc</module>
		<module>sae-saml</module>
		<module>sae-format</module>
		<module>sae-storage</module>
		<module>sae-droit</module>
		<module>sae-vi</module>
		<module>sae-storage-dfce</module>
		<module>sae-ecde</module>
		<module>sae-metadata</module>
		<module>sae-mapping</module>
		<module>sae-pile-travaux</module>
		<module>sae-services</module>
		<module>sae-services-batch</module>

		<module>sae-trace</module>
		<module>sae-trace-executable</module>
		<module>sae-commons</module>
		<module>sae-rnd</module>
		<module>sae-rnd-executable</module>

		<module>sae-igcmaj</module>
		<module>sae-services-executable</module>
		<module>sae-webservices</module>
		<module>sae-dfce-admin-exploit</module>
		<module>sae-ordonnanceur</module>
		<module>sae-lotinstallmaj</module>
		<module>sae-jobs-executable</module>
		<module>sae-documents-executable</module>
		<module>sae-integrationinstall</module>
		<module>sae-livrable</module>
		<module>sae-split-sommaire</module>
	</modules>


	<!-- Configuration SVN pour le plug-in maven-release -->
	<scm>
		<url>
        scm:svn:http://svn.altair.recouv/svn/gns/java/trunk/sae/
      </url>
		<developerConnection>
         scm:svn:http://svn.altair.recouv/svn/gns/java/trunk/sae/
      </developerConnection>
		<connection>
         scm:svn:http://svn.altair.recouv/svn/gns/java/trunk/sae/
      </connection>
	</scm>


	<build>
		<plugins>

			<!-- On spécifie la version du JDK et l'encodage de caractères des sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>


			<!-- Dans le cas d'un packaging JAR, on demande que le JAR des sources 
				soit également généré -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>bind-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- On spécifie l'encodage de caractères des ressources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>


			<!-- On demande la génération de la Javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
			</plugin>

			<!-- Pour la gestion des release -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<preparationGoals>clean javadoc:jar install</preparationGoals>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
				</configuration>
			</plugin>

			<!-- Configuration mémoire pour les TU -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<!-- Déploiement réalisé uniquement à la fin du build de tous les modules, 
				et pas module par module. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<configuration>
					<skipDeploy>true</skipDeploy>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
			</plugin>
			<!-- Plugin Sonar -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
		</plugins>


		<pluginManagement>
			<plugins>
				<!-- Configuration du lifecycle maven -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.axis2</groupId>
										<artifactId>axis2-mar-maven-plugin</artifactId>
										<versionRange>[1.7.7,)</versionRange>
										<goals>
											<goal>package</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.axis2</groupId>
										<artifactId>axis2-repo-maven-plugin</artifactId>
										<versionRange>[1.7.7,)</versionRange>
										<goals>
											<goal>create-repository</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>aspectj-maven-plugin</artifactId>
										<versionRange>[1.11,)</versionRange>
										<goals>
											<goal>test-compile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<!-- le plugin de qualimétrie jacoco n'a pas besoin d'être lancé 
										par m2e -->
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.2.201409121644,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- Compilation Aspect avec AspectJ -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>aspectj-maven-plugin</artifactId>
					<version>${aspectj-maven-plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<source>1.8</source>
						<target>1.8</target>
						<complianceLevel>1.8</complianceLevel>
						<showWeaveInfo>true</showWeaveInfo>
						<verbose>true</verbose>
						<Xlint>ignore</Xlint>
						<encoding>UTF-8</encoding>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjtools</artifactId>
							<version>${aspectj.version}</version>
							<scope>compile</scope>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>test-compile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- GESTION EXTENSION MAR AXIS2 -->
				<plugin>
					<groupId>org.apache.axis2</groupId>
					<artifactId>axis2-mar-maven-plugin</artifactId>
					<version>${axis2-maven-plugin.version}</version>
					<extensions>true</extensions>
				</plugin>

				<plugin>
					<groupId>org.apache.axis2</groupId>
					<artifactId>axis2-repo-maven-plugin</artifactId>
					<version>${axis2-maven-plugin.version}</version>
				</plugin>
				<!-- Configuration mémoire pour les TU -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit47</artifactId>
							<version>${maven-surefire-plugin.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- Plugin Sonar -->
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
				</plugin>
			</plugins>

		</pluginManagement>

	</build>

	<dependencies>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version><!--$NO-MVN-MAN-VER$--><!-- VERSION PLUS RECENTE DE JUNIT (Utilisation des annotations et autres) -->
			<scope>test</scope>
		</dependency>

		<!-- SLF4J et Logback -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.wagon</groupId>
			<artifactId>wagon-file</artifactId>
			<version>${wagon-webdav.version}</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>hawai_livraison</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>fr.acoss.industrialisation.maven</groupId>
						<artifactId>hawai-maven-plugin</artifactId>
						<version>${hawai-maven-plugin.version}</version>
						<configuration>
							<projectName>ged</projectName>
							<hawaiVersion>hawai6</hawaiVersion>
							<fedex>false</fedex>
							<skip>true</skip>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>livraison</goal>
								</goals>
								<phase>deploy</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonar_build</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<jacoco.maven.plugin>0.8.4</jacoco.maven.plugin>
				<sonar-jacoco-listeners.version>3.2</sonar-jacoco-listeners.version>
				<sonar-jacoco-agent.version>0.8.4</sonar-jacoco-agent.version>
				<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
				<sonar.jacoco.reportExec>${project.build.directory}/coverage-reports/jacoco.exec</sonar.jacoco.reportExec>
				<sonar.jacoco.reportPaths>${project.build.directory}/sonar/jacoco</sonar.jacoco.reportPaths>
				<sonar.junit.reportPaths>${project.build.directory}/surefire-reports</sonar.junit.reportPaths>
				<sonar.language>java</sonar.language>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.jacoco</groupId>
							<artifactId>jacoco-maven-plugin</artifactId>
							<version>${jacoco.maven.plugin}</version>
							<executions>
								<!-- Prepares a variable, surefireArgLine, that contains the info 
									to be passed to the JVM hosting the code being tested. -->
								<execution>
									<id>default-prepare-agent</id>
									<goals>
										<goal>prepare-agent</goal>
									</goals>
									<configuration>
										<!-- Sets the path to the file which contains the execution data. -->
										<destFile>${sonar.jacoco.reportExec}</destFile>
										<!-- Sets the name of the property containing the settings for 
											JaCoCo runtime agent. -->
										<propertyName>surefireArgLine</propertyName>
										<!-- Avoid BATCH-2157 until Spring Batch Core 3.0.2 -->
										<!-- Test execution error if don't use it -->
										<excludes>
											<exclude>**/springframework/**</exclude>
										</excludes>
									</configuration>
								</execution>
								<execution>
									<id>default-report</id>
									<goals>
										<goal>report</goal>
									</goals>
									<configuration>
										<!-- Sets the path to the file which contains the execution data. -->
										<dataFile>${sonar.jacoco.reportExec}</dataFile>
										<!-- Sets the output directory for the code coverage report. -->
										<outputDirectory>${sonar.jacoco.reportPaths}</outputDirectory>
									</configuration>
								</execution>
								<execution>
									<id>default-check</id>
									<goals>
										<goal>check</goal>
									</goals>
									<configuration>
										<!-- Sets the path to the file which contains the execution data. -->
										<dataFile>${sonar.jacoco.reportExec}</dataFile>
										<haltOnFailure>false</haltOnFailure>
										<rules>
											<rule>
												<element>PACKAGE</element>
												<limits>
													<limit implementation="org.jacoco.report.check.Limit">
														<counter>INSTRUCTION</counter>
														<value>COVEREDRATIO</value>
														<minimum>0.2</minimum>
													</limit>
													<limit implementation="org.jacoco.report.check.Limit">
														<counter>CLASS</counter>
														<value>MISSEDCOUNT</value>
														<maximum>15</maximum>
													</limit>
												</limits>
											</rule>
										</rules>
									</configuration>
								</execution>
								<execution>
									<id>merge</id>
									<goals>
										<goal>merge</goal>
									</goals>
									<configuration>
										<fileSets>
											<fileSet implementation="org.apache.maven.shared.model.fileset.FileSet">
												<directory>${project.basedir}</directory>
												<includes>
													<include>**/*.exec</include>
												</includes>
											</fileSet>
										</fileSets>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${maven-surefire-plugin.version}</version>
							<dependencies>
								<dependency>
									<groupId>org.apache.maven.surefire</groupId>
									<artifactId>surefire-junit47</artifactId>
									<version>${maven-surefire-plugin.version}</version>
								</dependency>
							</dependencies>
							<configuration>
								<argLine>-Xms256m -Xmx512m ${surefireArgLine}</argLine>
								<forkMode>pertest</forkMode>
								<!-- 								<forkCount>64</forkCount>
								<threadCount>64</threadCount>
								<reuseForks>true</reuseForks>
								<useUnlimitedThreads>true</useUnlimitedThreads> -->
								<!-- Specific to generate mapping between tests and covered code -->
								<properties>
									<property>
										<name>listener</name>
										<value>org.sonar.java.jacoco.JUnitListener</value>
									</property>
								</properties>
								<testFailureIgnore>false</testFailureIgnore>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<!-- The Sonar Jacoco Listener for JUnit to extract coverage details 
						per test -->
					<groupId>org.codehaus.sonar-plugins.java</groupId>
					<artifactId>sonar-jacoco-listeners</artifactId>
					<version>${sonar-jacoco-listeners.version}</version>
					<scope>test</scope>
				</dependency>
				<!-- https://mvnrepository.com/artifact/org.jacoco/org.jacoco.agent -->
				<dependency>
					<groupId>org.jacoco</groupId>
					<artifactId>org.jacoco.agent</artifactId>
					<version>${sonar-jacoco-agent.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>