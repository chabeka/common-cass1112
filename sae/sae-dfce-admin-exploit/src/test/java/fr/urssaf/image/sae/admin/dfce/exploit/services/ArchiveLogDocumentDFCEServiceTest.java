package fr.urssaf.image.sae.admin.dfce.exploit.services;

import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import fr.urssaf.image.commons.dfce.model.DFCEConnection;
import fr.urssaf.image.sae.admin.dfce.exploit.exception.ArchiveLogsRunningEx;
import fr.urssaf.image.sae.admin.dfce.exploit.exception.ConnectionServiceEx;
import fr.urssaf.image.sae.admin.dfce.exploit.exception.PurgeDocumentEventsException;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "/applicationContext-sae-dfce-admin-exploit-test.xml" })
@SuppressWarnings("all")
public class ArchiveLogDocumentDFCEServiceTest {
   @Autowired
   private ArchiveLogDocumentDFCEService baseAdmiService;

   @Autowired
   private DFCEConnection cnxParameter;

   /**
    * @return Le service ArchiveLogDocumentDFCEService
    */
   public ArchiveLogDocumentDFCEService getBaseAdmiService() {
      return baseAdmiService;
   }

   /**
    * @param baseAdmiService
    *           : Le service ArchiveLogDocumentDFCEService
    */
   public void setBaseAdmiService(ArchiveLogDocumentDFCEService baseAdmiService) {
      this.baseAdmiService = baseAdmiService;
   }

   /**
    * @return Le paramètre de connexion.
    */
   public DFCEConnection getCnxParameter() {
      return cnxParameter;
   }

   /**
    * @param cnxParameter
    *           : Le paramètre de connexion.
    */
   public void setCnxParameter(DFCEConnection cnxParameter) {
      this.cnxParameter = cnxParameter;
   }

   @Test
   @Ignore
   public void createDocumentsEventLogs() throws ConnectionServiceEx,
         ArchiveLogsRunningEx, PurgeDocumentEventsException {
      baseAdmiService.createDocumentsEventLogs(cnxParameter);
      purgeDocumentsEvents();
   }

   private void purgeDocumentsEvents() throws ConnectionServiceEx,
         ArchiveLogsRunningEx, PurgeDocumentEventsException {
      baseAdmiService.purgeDocumentsEvents(cnxParameter, -1);
   }

   @Test
   @Ignore
   public void extractDocumentsArchiveFile() throws ConnectionServiceEx,
         ArchiveLogsRunningEx {
      baseAdmiService.extractDocumentsArchiveFile(cnxParameter, null);
   }
}