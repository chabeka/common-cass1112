package fr.urssaf.image.sae.admin.dfce.exploit.services;

import fr.urssaf.image.sae.admin.dfce.exploit.exception.ArchiveLogsRunningEx;
import fr.urssaf.image.sae.admin.dfce.exploit.exception.ConnectionServiceEx;
import fr.urssaf.image.sae.admin.dfce.exploit.exception.PurgeSystemEventsException;
import fr.urssaf.image.sae.admin.dfce.exploit.model.ConnectionParameter;

/**
 * Fournit l'interface des services :
 * <ul>
 * <li>Service de création du journal d'événement de type <b>System</b></li>
 * <li>Service de purge des journaux de type <b>System</b></li>
 * <li>Service de consultation du fichier d'archivage de type <b>System</b></li>
 * </ul>
 * 
 * 
 */
public interface ArchiveLogSystemDFCEService {

   /**
    * Service de création du journal d'événements de type <b>Système</b>.
    * 
    * @param cnxParameter
    *           : Paramétrées de connexion.
    * @param duration          
    *          : Durée de conservation
    * @throws ConnectionServiceEx
    *            s'il y a un problème survient lors de la connexion
    * @throws ArchiveLogsRunningEx
    *            s'il y a un problème survient lors de l'archivage.
    */
   void createSystemEventLogs(ConnectionParameter cnxParameter, int duration)
         throws ConnectionServiceEx, ArchiveLogsRunningEx;

   /**
    * Service de purge des journaux de type <b>Système</b>.
    * 
    * @param cnxParameter
    *           : Paramétrées de connexion.
    * @param archiveDuration
    *           : Durée de conservation
    * @throws ConnectionServiceEx
    *            s'il y a un problème survient lors de la connexion
    * @throws PurgeSystemEventsException
    *            une exception est survenue lors de la purge des événements
    *            systèmes.
    */
   void purgeSystemEvents(ConnectionParameter cnxParameter, int archiveDuration)
         throws ConnectionServiceEx, PurgeSystemEventsException;

   /**
    * Extrait un fichier d'archive Log de type Système ou Documents
    * 
    * @param cnxParameter
    *           : Paramétrées de connexion.
    * @param filePath
    *           : chemin de dépot des fichier de log.
    * @throws ConnectionServiceEx
    *            s'il y a un problème survient lors de la connexion
    * @throws ArchiveLogsRunningEx
    *            s'il y a un problème survient lors de l'archivage.
    */
   void extractSystemArchiveFile(ConnectionParameter cnxParameter,
         String filePath) throws ConnectionServiceEx, ArchiveLogsRunningEx;

}
