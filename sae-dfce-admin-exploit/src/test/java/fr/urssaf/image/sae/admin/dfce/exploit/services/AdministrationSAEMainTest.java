package fr.urssaf.image.sae.admin.dfce.exploit.services;

import org.junit.Ignore;
import org.junit.Test;

import fr.urssaf.image.sae.admin.dfce.exploit.exception.ArchiveLogsRunningEx;
import fr.urssaf.image.sae.admin.dfce.exploit.exception.BaseAdministrationPermissionEx;
import fr.urssaf.image.sae.admin.dfce.exploit.exception.BaseAdministrationServiceEx;
import fr.urssaf.image.sae.admin.dfce.exploit.exception.ConnectionServiceEx;
import fr.urssaf.image.sae.admin.dfce.exploit.exception.EventsPurgeException;
import fr.urssaf.image.sae.admin.dfce.exploit.executable.AdministrationSAEMain;

/**
 * Classe de test des services :
 * <ul>
 * <li>Service de mise à jour des indexes.</li>
 * <li>Service de création de la base de données SAE.</li>
 * <li>Service de création du journal d'événement de type <b>Documents</b></li>
 * <li>Service de purge des journaux de type <b>Documents</b></li>
 * <li>Service de consultation du fichier d'archivage de type<b>Documents</b></li>
 * <li>Service de création du journal d'événement de type <b>System</b></li>
 * <li>Service de purge des journaux de type <b>System</b></li>
 * <li>Service de consultation du fichier d'archivage de type <b>System</b></li>
 * </ul>
 * 
 *@author Rhofir.
 */
public class AdministrationSAEMainTest {

   @Test
   @Ignore
   public void printHelp() throws BaseAdministrationServiceEx,
         ConnectionServiceEx, ArchiveLogsRunningEx,
         BaseAdministrationPermissionEx, EventsPurgeException {
      final String[] args = null;
      AdministrationSAEMain.main(args);
   }

   @Test
   @Ignore
   public void updateIndexes() throws BaseAdministrationServiceEx,
         ConnectionServiceEx, ArchiveLogsRunningEx,
         BaseAdministrationPermissionEx, EventsPurgeException {
      final String[] args = new String[] { AdministrationSAEMain.REINDEX,
            "src/test/resources/config_sae.properties" };
      AdministrationSAEMain.main(args);
   }

   @Test
   public void createDocumentsEventLogs() throws BaseAdministrationServiceEx,
         ConnectionServiceEx, ArchiveLogsRunningEx,
         BaseAdministrationPermissionEx, EventsPurgeException {
      final String[] args = new String[] {
            AdministrationSAEMain.CREATE_DOC_EVENT,
            "src/test/resources/config_sae.properties" };
      AdministrationSAEMain.main(args);
   }

   @Test
   @Ignore
   public void createSystemEventLogs() throws BaseAdministrationServiceEx,
         ConnectionServiceEx, ArchiveLogsRunningEx,
         BaseAdministrationPermissionEx, EventsPurgeException {
      final String[] args = new String[] {
            AdministrationSAEMain.CREATE_SYS_EVENT,
            "src/test/resources/config_sae.properties" };
      AdministrationSAEMain.main(args);
   }

   @Test
   @Ignore
   public void purgeDocumentsEvents() throws BaseAdministrationServiceEx,
         ConnectionServiceEx, ArchiveLogsRunningEx,
         BaseAdministrationPermissionEx, EventsPurgeException {
      final String[] args = new String[] {
            AdministrationSAEMain.CLEAR_DOC_EVENT,
            "src/test/resources/config_sae.properties", "30" };
      AdministrationSAEMain.main(args);
   }

   @Test
   @Ignore
   public void purgeSystemEvents() throws BaseAdministrationServiceEx,
         ConnectionServiceEx, ArchiveLogsRunningEx,
         BaseAdministrationPermissionEx, EventsPurgeException {
      final String[] args = new String[] {
            AdministrationSAEMain.CLEAR_SYS_EVENT,
            "src/test/resources/config_sae.properties", "30" };
      AdministrationSAEMain.main(args);
   }

   @Test
   @Ignore
   public void extractDocumentsArchiveFile()
         throws BaseAdministrationServiceEx, ConnectionServiceEx,
         ArchiveLogsRunningEx, BaseAdministrationPermissionEx, EventsPurgeException {
      final String[] args = new String[] {
            AdministrationSAEMain.CONSULT_DOC_EVENT,
            "src/test/resources/config_sae.properties", "c:/" };
      AdministrationSAEMain.main(args);
   }

   @Test
   @Ignore
   public void extractSystemArchiveFile() throws BaseAdministrationServiceEx,
         ConnectionServiceEx, ArchiveLogsRunningEx,
         BaseAdministrationPermissionEx, EventsPurgeException {
      final String[] args = new String[] {
            AdministrationSAEMain.CONSULT_SYS_EVENT,
            "src/test/resources/config_sae.properties", "c:/" };
      AdministrationSAEMain.main(args);
   }

   @Test(expected = BaseAdministrationPermissionEx.class)
   @Ignore
   public void extractSystemArchiveFilePermission()
         throws BaseAdministrationServiceEx, ConnectionServiceEx,
         ArchiveLogsRunningEx, BaseAdministrationPermissionEx, EventsPurgeException {
      final String[] args = new String[] {
            AdministrationSAEMain.CONSULT_SYS_EVENT,
            "src/test/resources/config_sae.properties", "e:/" };
      AdministrationSAEMain.main(args);
   }

   @Test
   @Ignore
   public void createSAEBase() throws BaseAdministrationServiceEx,
         ConnectionServiceEx, ArchiveLogsRunningEx,
         BaseAdministrationPermissionEx, EventsPurgeException {
      final String[] args = new String[] {
            AdministrationSAEMain.CREATE_DATA_BASE,
            "src/test/resources/config_sae.properties",
            "src/test/resources/data/saeBase.xml",
            "src/test/resources/data/LifeCycleRule.xml" };
      AdministrationSAEMain.main(args);
   }

   @Test(expected = BaseAdministrationServiceEx.class)
      @Ignore
   public void createSAEBaseFaild() throws BaseAdministrationServiceEx,
         ConnectionServiceEx, ArchiveLogsRunningEx,
         BaseAdministrationPermissionEx, EventsPurgeException {
      final String[] args = new String[] {
            AdministrationSAEMain.CREATE_DATA_BASE,
            "src/test/resources/config_sae.properties",
            "src/test/resources/data/LifeCycleRule.xml",
            "src/test/resources/data/saeBase.xml" };
      AdministrationSAEMain.main(args);
   }

}
