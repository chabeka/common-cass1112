package fr.urssaf.image.sae.admin.dfce.exploit.xml.impl;

import java.io.File;
import java.io.FileNotFoundException;
import java.nio.charset.Charset;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import com.thoughtworks.xstream.XStream;
import fr.urssaf.image.sae.admin.dfce.exploit.model.DataBaseModel;
import fr.urssaf.image.sae.admin.dfce.exploit.model.DocumentsType;
import fr.urssaf.image.sae.admin.dfce.exploit.utils.XStreamHelper;
import fr.urssaf.image.sae.admin.dfce.exploit.xml.XmlDataService;

/**
 * Fournit des méthodes de désérialisation
 */
@Service
@Qualifier("xmlDataService")
public class XmlDataServiceImpl implements XmlDataService {
   /** encoding de lecture **/
   private static final Charset ENCODING = Charset.forName("UTF-8");

   /**
    * {@inheritDoc}
    */
   public final DataBaseModel baseModelReader(final File xmlFile)
         throws FileNotFoundException {
      return XStreamHelper.parse(xmlFile, ENCODING, DataBaseModel.class,
            buildReadingXStream(DataBaseModel.class));
   }

   /**
    * Construit le composant XStream utilisé en lecture.
    * 
    * @param xstrClass
    *           : La classe à désérialiser
    * @return le composant xstream
    */
   private XStream buildReadingXStream(final Class<?> xstrClass) {
      return XStreamHelper.newXStream(xstrClass);
   }

   /**
    * {@inheritDoc}
    * 
    * @throws FileNotFoundException
    *            Lorsque le fichier n'existe pas
    */
   public final DocumentsType documentsTypeReader(final File xmlFile)
         throws FileNotFoundException {
      return XStreamHelper.parse(xmlFile, ENCODING, DocumentsType.class,
            buildReadingXStream(DocumentsType.class));
   }
}
