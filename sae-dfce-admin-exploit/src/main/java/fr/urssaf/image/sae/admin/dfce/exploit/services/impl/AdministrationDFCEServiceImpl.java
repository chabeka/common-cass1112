package fr.urssaf.image.sae.admin.dfce.exploit.services.impl;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;

import fr.urssaf.image.sae.admin.dfce.exploit.exception.ConnectionServiceEx;
import fr.urssaf.image.sae.admin.dfce.exploit.messages.ResourceMessagesUtils;
import fr.urssaf.image.sae.admin.dfce.exploit.model.ConnectionParameter;
import fr.urssaf.image.sae.admin.dfce.exploit.services.AbstractService;
import fr.urssaf.image.sae.admin.dfce.exploit.services.AdministrationDFCEService;

/**
 * Implémente l'interface : {@link AdministrationDFCEService}
 * <ul>
 * <li>Service de mise à jour des indexes.</li>
 * </ul>
 * 
 * @author rhofir
 * 
 */
@Service
@Qualifier("administrationDfceService")
public class AdministrationDFCEServiceImpl extends AbstractService implements
      AdministrationDFCEService {
   private static final Logger LOGGER = LoggerFactory
         .getLogger(AdministrationDFCEServiceImpl.class);

   @Override
   public final void updateIndexes(final ConnectionParameter cnxParameter)
         throws ConnectionServiceEx {
      try {
         buildConnexionDFCE(cnxParameter);
         LOGGER.debug(ResourceMessagesUtils.loadMessage("update.start"),
               cnxParameter.getHost().getHostName());
         getServiceProvider().getStorageAdministrationService()
               .updateAllIndexesUsageCount();
         LOGGER.debug(ResourceMessagesUtils.loadMessage("update.end"),
               cnxParameter.getHost().getHostName());
      } catch (ConnectionServiceEx except) {
         throw new ConnectionServiceEx(ResourceMessagesUtils.loadMessage(
               "url.connection.malformed", "connection.impact",
               "connection.action"), except);
      } finally {
         closeConnection();
      }
   }
}
