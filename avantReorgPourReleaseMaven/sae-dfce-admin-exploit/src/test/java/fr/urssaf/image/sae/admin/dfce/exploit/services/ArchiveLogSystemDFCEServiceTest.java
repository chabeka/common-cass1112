package fr.urssaf.image.sae.admin.dfce.exploit.services;

import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import fr.urssaf.image.sae.admin.dfce.exploit.exception.ArchiveLogsRunningEx;
import fr.urssaf.image.sae.admin.dfce.exploit.exception.ConnectionServiceEx;
import fr.urssaf.image.sae.admin.dfce.exploit.model.ConnectionParameter;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "/applicationContext-sae-dfce-admin-exploit-test.xml" })
@SuppressWarnings("all")
public class ArchiveLogSystemDFCEServiceTest {
   @Autowired
   private ArchiveLogSystemDFCEService baseAdmiService;

   @Autowired
   private ConnectionParameter cnxParameter;

   /**
    * @return Le service ArchiveLogSystemDFCEService.
    */
   public ArchiveLogSystemDFCEService getBaseAdmiService() {
      return baseAdmiService;
   }

   /**
    * @param baseAdmiServiceLe
    *           : service ArchiveLogSystemDFCEService.
    */
   public void setBaseAdmiService(ArchiveLogSystemDFCEService baseAdmiService) {
      this.baseAdmiService = baseAdmiService;
   }

   /**
    * @return Le paramètre de connexion.
    */
   public ConnectionParameter getCnxParameter() {
      return cnxParameter;
   }

   /**
    * @param cnxParameter
    *           : Le paramètre de connexion.
    */
   public void setCnxParameter(ConnectionParameter cnxParameter) {
      this.cnxParameter = cnxParameter;
   }

   @Test
   @Ignore
   public void createSystemEventLogs() throws ConnectionServiceEx,
         ArchiveLogsRunningEx {
      baseAdmiService.createSystemEventLogs(cnxParameter);
      purgeSystemEvents();
   }

   private void purgeSystemEvents() throws ConnectionServiceEx,
         ArchiveLogsRunningEx {
      baseAdmiService.purgeSystemEvents(cnxParameter, -1);
   }

   @Test
   @Ignore
   public void extractSystemArchiveFile() throws ConnectionServiceEx,
         ArchiveLogsRunningEx {
      baseAdmiService.extractSystemArchiveFile(cnxParameter, null);
   }
}
