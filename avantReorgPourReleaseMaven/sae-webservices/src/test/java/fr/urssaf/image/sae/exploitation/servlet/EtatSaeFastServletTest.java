package fr.urssaf.image.sae.exploitation.servlet;

import static org.junit.Assert.assertEquals;

import java.io.File;
import java.io.IOException;
import java.io.StringWriter;
import java.net.URISyntaxException;
import java.net.URL;

import org.junit.Test;

import fr.urssaf.image.sae.exploitation.modele.ConfigurationDfce;
import fr.urssaf.image.sae.exploitation.service.ConfigDfceService;

@SuppressWarnings( { "PMD.AtLeastOneConstructor" })
public class EtatSaeFastServletTest {

   
   @Test
   public void writeHtmlDfceUp() throws IOException {
      
      StringWriter writer = new StringWriter(); 
      
      EtatSaeFastServlet.writeHtml(true, writer);
      
      String actual = writer.toString();
      
      String expected = "<HTML><HEAD><TITLE>EtatDfceFastServlet</TITLE></HEAD><BODY>OK</BODY></HTML>";
      
      assertEquals("Vérification de la production du HTML pour Dfce up.",expected,actual);
      
   }
   
   
   @Test
   public void writeHtmlDfceDown() throws IOException {
      
      StringWriter writer = new StringWriter(); 
      
      EtatSaeFastServlet.writeHtml(false, writer);
      
      String actualHtml = writer.toString();
      
      String expectedHtml = "<HTML><HEAD><TITLE>EtatDfceFastServlet</TITLE></HEAD><BODY>KO</BODY></HTML>";
      
      assertEquals("Vérification de la production du HTML pour Dfce down",expectedHtml,actualHtml);
      
   }
   
   
   @Test
   public void serviceUpDfceUp() throws IOException, URISyntaxException {
      
      // TODO : trouver une méthode plus élégante
      URL urlFicConfDfce = this.getClass().getResource(
            "/exploitation/sae-dfce-config-success.properties");
      
      String pathFileDfce = urlFicConfDfce.toURI().getPath();
      
      File fileConfigDfce = new File(pathFileDfce);
      
      ConfigurationDfce configDfce = ConfigDfceService.getConfigDfce(fileConfigDfce);
      
      StringWriter writer = new StringWriter();
      
      boolean isUp = EtatSaeFastServlet.serviceUp(configDfce, writer);
      
      assertEquals("Le serveur DFCE de développement est censé être UP",true,isUp);
      
      
      String actualHtml = writer.toString();
      String expectedHtml = "<HTML><HEAD><TITLE>EtatDfceFastServlet</TITLE></HEAD><BODY>OK</BODY></HTML>";
      assertEquals("Verification de la production du code HTML.",expectedHtml,actualHtml);
      
   }
   
   
   
   @Test
   public void serviceUpDfceDown() throws IOException, URISyntaxException {
      
      // TODO : trouver une méthode plus élégante
      URL urlFicConfDfce = this.getClass().getResource(
            "/exploitation/sae-dfce-config-failure.properties");
      
      String pathFileDfce = urlFicConfDfce.toURI().getPath();
      
      File fileConfigDfce = new File(pathFileDfce);
      
      ConfigurationDfce configDfce = ConfigDfceService.getConfigDfce(fileConfigDfce);
      
      StringWriter writer = new StringWriter();
      
      boolean isUp = EtatSaeFastServlet.serviceUp(configDfce, writer);
      
      assertEquals("Le serveur DFCE n'est pas censé être UP avec la configuration du test",false,isUp);
      
      
      String actualHtml = writer.toString();
      String expectedHtml = "<HTML><HEAD><TITLE>EtatDfceFastServlet</TITLE></HEAD><BODY>KO</BODY></HTML>";
      assertEquals("Vérification de la production du code HTML.",expectedHtml,actualHtml);
      
   }
   
   
   
   
}
