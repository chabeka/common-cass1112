package fr.urssaf.image.sae.ihm.web.exploit.loader;

import java.io.File;
import java.io.FileNotFoundException;

import org.springframework.beans.factory.annotation.Autowired;

import fr.urssaf.image.sae.ihm.web.exploit.modele.ConfigurationsEnvironnement;
import fr.urssaf.image.sae.ihm.web.exploit.modele.Droits;
import fr.urssaf.image.sae.ihm.web.exploit.service.ConfigurationService;
import fr.urssaf.image.sae.ihm.web.exploit.service.DroitsService;

/**
 * Classe permettant le chargement de classes spécifiques
 * 
 * 
 */
public class ConfigLoader {

   /**
    * Service permettant de réaliser le chargement des droits
    */
   private DroitsService droitsService;

   /**
    * Service permettant de réaliser le chargement des différentes
    * configurations
    */
   private ConfigurationService configurationService;

   /**
    * Constructeur
    * 
    * @param droitsService Service permettant de réaliser le chargement des droits
    * @param configurationService Service permettant de réaliser le chargement des différentes configurations
    */
   @Autowired
   public ConfigLoader(DroitsService droitsService,
         ConfigurationService configurationService) {
      this.droitsService = droitsService;
      this.configurationService = configurationService;
   }

   /**
    * Renvoie la liste de tous les droits
    * 
    * @param fichier
    *           Fichier contenant la liste des droits
    * 
    * @return Liste de toutes les configurations des droits
    * @throws FileNotFoundException Exception générée si le fichier n'existe pas
    */
   public Droits creerDroits(File fichier) throws FileNotFoundException {
      try {
         return droitsService.charger(fichier);
      } catch (FileNotFoundException e) {
         throw new FileNotFoundException(e.getMessage());
      }
   }

   /**
    * Renvoie la liste de toutes les configurations d'environnements (CASSANDRA
    * et services Web)
    * 
    * @param fichier
    *           Fichier contenant le liste eds configurations environnement
    *           (CASSANDRA et services Web)
    * 
    * @return Liste de toutes les configurations environnement (CASSANDRA et
    *         services Web)
    * @throws FileNotFoundException Exception générée si le fichier n'existe pas
    */
   public ConfigurationsEnvironnement creerConfiguration(File fichier)
         throws FileNotFoundException {
      try {
         return configurationService.chargerConfiguration(fichier);
      } catch (FileNotFoundException e) {
         throw new FileNotFoundException(e.getMessage());
      }
   }
}
