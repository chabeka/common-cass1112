package fr.urssaf.image.sae.ihm.web.exploit.saeservice;

import java.util.List;

import org.apache.axis2.context.ConfigurationContext;
import org.apache.axis2.context.ConfigurationContextFactory;
import org.apache.axis2.engine.AxisConfiguration;
import org.apache.axis2.engine.Phase;

import fr.urssaf.image.sae.ihm.web.exploit.exception.IhmWebRuntimeException;
import fr.urssaf.image.sae.ihm.web.exploit.saeservice.modele.SaeServiceStub;
import fr.urssaf.image.sae.ihm.web.exploit.security.VIHandler;

/**
 * Classe permettant de réaliser des opérations sur le STUB
 * 
 * 
 */
public class SaeStubUtils {

   /**
    * Renvoie le STUB permettant l'accès au webServices du SAE
    * @param urlServiceWeb url du web service de la configuration choisie
    * @return Stub permettant l'accès aux webservices du SAE
    */
   public final SaeServiceStub getStub(String urlServiceWeb) {

      try {
         // Création d'une configuration Axis2 par défaut
         ConfigurationContext configContext = ConfigurationContextFactory
               .createConfigurationContextFromFileSystem(null, null);

         // ----------------------------------------------
         // Gestion du VI + Log du message SOAP de request
         // ----------------------------------------------

         // Ajout d'un Handler lors de la phase "MessageOut" pour insérer le VI
         AxisConfiguration axisConfig = configContext.getAxisConfiguration();
         List<Phase> outFlowPhases = axisConfig.getOutFlowPhases();
         Phase messageOut = findPhaseByName(outFlowPhases, "MessageOut");
         messageOut.addHandler(new VIHandler());

         // Création du Stub
         SaeServiceStub service = new SaeServiceStub(configContext,
               urlServiceWeb);
         
         // Renvoie du Stub
         return service;

      } catch (Exception e) {
         throw new IhmWebRuntimeException(e);
      }

   }

   
   private static Phase findPhaseByName(List<Phase> phases, String nomPhaseRecherchee) {
      Phase result = null;
      for(Phase phase: phases) {
         if (phase.getName().equals(nomPhaseRecherchee)) {
            result = phase;
            break;
         }
      }
      return result;
   }
   
}
