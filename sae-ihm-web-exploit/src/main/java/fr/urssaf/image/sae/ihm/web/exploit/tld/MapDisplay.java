/**
 * 
 */
package fr.urssaf.image.sae.ihm.web.exploit.tld;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.tagext.TagSupport;

import org.apache.commons.collections.MapUtils;
import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Classe de la taglib map permettant d'afficher la liste des proporiétés d'une
 * map de façon formatée
 * 
 */
public class MapDisplay extends TagSupport {

   private static final long serialVersionUID = 1L;
   private Map<String, Object> value;
   private static final Logger LOGGER = LoggerFactory
         .getLogger(MapDisplay.class);

   /**
    * {@inheritDoc}
    */
   @Override
   public final int doStartTag() throws JspException {

      try {
         JspWriter out = pageContext.getOut();
         if (MapUtils.isNotEmpty(value)) {
            List<String> keys = new ArrayList<String>(value.keySet());
            Collections.sort(keys);
            for (String key : keys) {
               out.print("<b>");
               out.print(key);
               out.print("</b>");
               
               String valeur = "";
               Object valeurTmp1 = value.get(key);
               if (valeurTmp1 instanceof ArrayList<?>) {
                  out.print(" :</br>");
                  List<?> valeurTmp2 = (ArrayList<?>)valeurTmp1;
                  for (Object object : valeurTmp2) {
                     valeur += object.toString() + "<br/>";
                  }
               } else {
                  out.print(" = ");
                  Object valeurObj = value.get(key);
                  if (valeurObj==null) {
                     valeur = StringUtils.EMPTY;
                  } else {
                     valeur = valeurObj.toString();
                  }
                  valeur = StringUtils.replace(valeur, "<", "&lt;");
                  valeur = StringUtils.replace(valeur, ">", "&gt;");
                  valeur = StringUtils.replace(valeur, "\n", "<br/>");
               }
               
               out.print(valeur);

               out.println("<br/>");
            }
         }
      } catch (IOException exception) {
         LOGGER.error("erreur d'ecriture du tag", exception);
      }

      return SKIP_BODY;
   }

   /**
    * @param value
    *           la map à afficher
    */
   public final void setValue(Map<String, Object> value) {
      this.value = value;
   }

}
