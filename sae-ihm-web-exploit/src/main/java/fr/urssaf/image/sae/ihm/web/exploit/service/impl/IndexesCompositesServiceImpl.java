package fr.urssaf.image.sae.ihm.web.exploit.service.impl;

import java.util.List;

import javax.servlet.http.HttpSession;

import fr.urssaf.image.commons.dfce.model.DFCEConnection;
import fr.urssaf.image.commons.dfce.service.DFCEServices;
import fr.urssaf.image.commons.dfce.service.impl.DFCEServicesImpl;
import fr.urssaf.image.sae.ihm.web.exploit.service.IndexesCompositesService;
import fr.urssaf.image.sae.metadata.exceptions.IndexCompositeException;
import fr.urssaf.image.sae.metadata.referential.model.SaeIndexComposite;
import fr.urssaf.image.sae.metadata.referential.support.SaeIndexCompositeSupport;
import net.docubase.toolkit.model.reference.CompositeIndex;


public class IndexesCompositesServiceImpl implements IndexesCompositesService {

   SaeIndexCompositeSupport serviceSupport;

   /**
    * Constructeur par défaut
    */
   public IndexesCompositesServiceImpl() {}

   /**
    * Constructeur à partir de la session
    *
    * @param session
    *           La session
    */
   public IndexesCompositesServiceImpl(final HttpSession session){

      final String nomConf = (String) session.getAttribute("nomConfiguration");

      final DFCEConnection dfceConnection = (DFCEConnection)session
            .getServletContext().getAttribute(nomConf + "-dfce");

      // Instantiation du ServiceProviderSupportMetadata
      final DFCEServices dfceServices = new DFCEServicesImpl(dfceConnection);

      serviceSupport = new SaeIndexCompositeSupport(dfceServices);
   }

   /**
    * {@inheritDoc}
    */
   @Override
   public List<SaeIndexComposite> getAllCompositesIndexes() {
      return serviceSupport.getListeCompositeIndex();
   }

   /**
    * {@inheritDoc}
    * @throws IndexCompositeException
    */
   @Override
   public CompositeIndex createCompositeIndex(final List<String> codesCourts) throws IndexCompositeException {
      return serviceSupport.creatIndexComposite(codesCourts);
   }
}
