package fr.urssaf.image.sae.ihm.web.exploit.controller;

import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.curator.framework.CuratorFramework;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import fr.urssaf.image.commons.cassandra.helper.CassandraCQLClientFactory;
import fr.urssaf.image.sae.ihm.web.exploit.modele.ConfigurationsEnvironnement;
import fr.urssaf.image.sae.ihm.web.exploit.modele.EtatJobSAE;
import fr.urssaf.image.sae.ihm.web.exploit.service.EtatJobsService;
import fr.urssaf.image.sae.ihm.web.exploit.service.impl.EtatJobsServiceImpl;
import fr.urssaf.image.sae.ihm.web.exploit.utils.Constants;
import me.prettyprint.hector.api.Keyspace;

/**
 * Classe permettant de gérer l'etat des jobs
 * 
 * 
 */
@Controller
public class EtatJobsController {

  @Autowired
  private ConfigurationsEnvironnement config;

  /**
   * Recuperes l'etat des jobs SAE
   * 
   * @param model
   *           le modèle
   * @param session
   *           la session
   * @param request
   *           la requête
   * @return la page à afficher
   * @throws InterruptedException
   *            Exception
   */
  @RequestMapping(value = "etatJobsSAE", method = RequestMethod.GET)
  public final String etatJobsSAE(final Model model, final HttpSession session,
                                  final HttpServletRequest request) throws InterruptedException {

    try {
      // Récupération de la configuration choisie
      final String nomConf = (String) session.getAttribute("nomConfiguration");
      final Keyspace keyspace = (Keyspace) session.getServletContext()
          .getAttribute(nomConf);
      final CassandraCQLClientFactory ccf = (CassandraCQLClientFactory) session.getServletContext()
                                                                               .getAttribute(Constants.CQL);
      final CuratorFramework curator = (CuratorFramework) session
          .getServletContext().getAttribute(nomConf + "-zookeeper");

      final EtatJobsService etatJobsService = new EtatJobsServiceImpl(keyspace,
                                                                      config,
                                                                      curator,
                                                                      ccf);

      final List<EtatJobSAE> etatJobsSae = etatJobsService.getEtatJobsSAE();
      request.setAttribute("etatJobsSae", etatJobsSae);

    } catch (final Exception e) {
      final StringWriter sw = new StringWriter();
      final PrintWriter pw = new PrintWriter(sw);
      e.printStackTrace(pw);
      final String stacktrace = sw.toString();
      request.setAttribute("stacktrace", stacktrace);
    }

    return "etatJobsSAE";

  }
}
