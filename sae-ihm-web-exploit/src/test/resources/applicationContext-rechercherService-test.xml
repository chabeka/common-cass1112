<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mvc="http://www.springframework.org/schema/mvc"
   xsi:schemaLocation="
		http://www.springframework.org/schema/beans	
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

   <context:component-scan base-package="fr.urssaf.image.sae.ihm.web.exploit" />


   <bean id="configurationGenerale" class="org.springframework.core.io.FileSystemResource">
      <constructor-arg>
         <jee:jndi-lookup id="IHMExploit_Fichier_Configuration"
            jndi-name="java:comp/env/IHMExploit_Fichier_Configuration" />
      </constructor-arg>
   </bean>

   <!-- Accès aux variables du fichier global de paramétrage -->
   <bean
      class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="locations">
         <array value-type="org.springframework.core.io.Resource">
            <ref bean="configurationGenerale" />
         </array>
      </property>
   </bean>

   <bean id="droitsService"
      class="fr.urssaf.image.sae.ihm.web.exploit.service.impl.DroitsServiceImpl" />
   <bean id="configurationService"
      class="fr.urssaf.image.sae.ihm.web.exploit.service.impl.ConfigurationServiceImpl" />
   <!-- Bean permettant de charger les objets -->
   <bean id="configLoader"
      class="fr.urssaf.image.sae.ihm.web.exploit.loader.ConfigLoader">
      <constructor-arg ref="droitsService" />
      <constructor-arg ref="configurationService" />
   </bean>

   <!-- CONFIGURATION CASSANDRA ET SERVICES WEB -->
   <!-- _______________________________________ -->

   <!-- Fichier contenant la liste des configurations CASSANDRA et WS -->
   <bean id="environnementConfigFile" class="java.io.File">
      <constructor-arg
         value="${sae.ihm.web.exploit.cheminFichierConfiguration}" />
   </bean>

   <!-- Bean des ConfigurationsEnvironnement -->
   <bean id="configurationsEnvironnement" factory-bean="configLoader"
      factory-method="creerConfiguration">
      <constructor-arg ref="environnementConfigFile" />
   </bean>

   <!-- Bean configurationBean -->
   <bean id="configurationBean"
      class="fr.urssaf.image.sae.ihm.web.exploit.modele.ConfigurationBean">
      <constructor-arg value="${sae.ihm.web.exploit.version}" />
   </bean>

   <!-- CONFIGURATION DE LA LISTE DES DROITS -->
   <!-- ____________________________________ -->
   <!--  Fichier contenant la liste des droits  -->
   <bean id="droitsConfigFile" class="java.io.File">
      <constructor-arg value="${sae.ihm.web.exploit.cheminFichierDroits}" />
   </bean>

   <bean id="listeDroits" factory-bean="configLoader"
      factory-method="creerDroits">
      <constructor-arg ref="droitsConfigFile" />
   </bean>


   <!-- VERIFICATION ARGUMENTS METHODE PAR SPRING IOP -->
   <!-- _____________________________________________ -->

   <aop:config>
      <aop:pointcut id="rechercher_pointcut"
         expression="execution(*
      service.RechercherService.rechercherDocuments(*,*) and
      args(arg1,arg2)" />
      <aop:aspect id="validation" ref="serviceValidation">
         <aop:before method="validationArgObligatoire"
            pointcut-ref="rechercher_pointcut" arg-names="arg1,arg2" />
      </aop:aspect>
   </aop:config>



</beans>