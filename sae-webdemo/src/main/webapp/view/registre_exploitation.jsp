<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title>SAE - Registre d'exploitation</title>
<c:import url="/view/header.jsp" />
</head>
<body>

<h4>SAE - Registre d'exploitation</h4>

<div id="logs-form"></div>
<div><br />
</div>
<div id="logs-grid"></div>

<script type="text/javascript">
   Ext.onReady(function() {

      //stockage des resultats
         var store = new Ext.data.JsonStore( {
            root : 'logs',
            totalProperty : 'totalCount',
            remoteSort : true,
            fields : [ 'idseq', 'horodatage', {
               name : 'occurences',
               type : 'int'
            }, 'probleme', 'action', 'infos' ],
            url : 'registre_exploitation.html?action=search'

         });
         store.setDefaultSort('idseq', 'desc');

         //tableau des resultats
         var grid = new Ext.grid.GridPanel( {

            height : 280,
            width : 720,
            title : '<fmt:message key="logger.grid.title" />',
            store : store,
            trackMouseOver : false,
            disableSelection : true,
            loadMask : true,

            columns : [ {
               header : '<fmt:message key="logger.grid.idseq" />',
               dataIndex : 'idseq',
               sortable : true,
               width : 50
            }, {
               header : '<fmt:message key="logger.grid.horodatage" />',
               width : 120,
               dataIndex : 'horodatage',
               sortable : true
            }, {
               header : '<fmt:message key="logger.grid.occurences" />',
               dataIndex : 'occurences',
               width : 50,
               sortable : true,
               align : 'right'

            }, {
               header : '<fmt:message key="logger.grid.probleme" />',
               dataIndex : 'probleme',

               width : 175

            }, {
               header : '<fmt:message key="logger.grid.action" />',
               dataIndex : 'action',

               width : 150

            }, {
               header : '<fmt:message key="logger.grid.infos" />',
               dataIndex : 'infos',

               width : 170

            }

            ],

            // paging bar on the bottom
            bbar : new Ext.PagingToolbar( {
               pageSize : 9,
               store : store,
               displayInfo : true,
               displayMsg : '<fmt:message key="logger.grid.display" />',
               emptyMsg : '<fmt:message key="logger.grid.empty" />'

            })
         });

         Ext.QuickTips.init();

         Ext.form.Field.prototype.msgTarget = 'side';

         // formulaire de filtre
         var dr = new Ext.FormPanel( {

            frame : true,
            labelAlign : 'right',
            title : '<fmt:message key="logger.form.title" />',
            url : 'registre_exploitation.html',
            renderTo : 'logs-form',
            bodyStyle : 'padding:1px 1px 0',
            width : 400,
            items : [
            {
               layout:'column',
               defaults : {

                  labelSeparator : ' :',
                  labelWidth : 75

               },
               items : [ {
                  layout : 'form',
                  columnWidth:.5,
                  
                  items : [ {
                     fieldLabel : '<fmt:message key="logger.form.start" />',
                     name : 'startDate',
                     xtype : 'datefield',
                     format : 'd/m/Y',
                     id : 'startDate'
                  } ]
               }, {
                  layout : 'form',
                  columnWidth:.5,
                  
                  items : [ {
                     fieldLabel : '<fmt:message key="logger.form.end" />',
                     name : 'endDate',
                     xtype : 'datefield',
                     format : 'd/m/Y',
                     id : 'endDate'
                  } ]
               }

               ]
            } ],

            buttons : [ {
               text : '<fmt:message key="logger.form.submit" />',
               handler : function() {
                  dr.getForm().submit( {

                     success : formOnSuccess,
                     failure : formOnFailure

                  });
               }

            } ]

         });
         
         var filter = new Ext.form.Hidden( {
            name : 'action',
            value : 'filter'
         });

         dr.add(filter);
         dr.doLayout();

         // render it
         grid.render('logs-grid');

         // trigger the data store load
         store.load( {
            params : {
               start : 0,
               limit : 9
            }
         });

         function formOnSuccess(form, action) {

            store.load( {
               params : {
                  start : 0,
                  limit : 9
               }
            });
         }

         function formOnFailure(form, action) {

            switch (action.failureType) {
               case Ext.form.Action.CLIENT_INVALID:
                  Ext.MessageBox.alert('Echec',
                        '<fmt:message key="error.form_failure_msg" />');
                  break;
               case Ext.form.Action.CONNECT_FAILURE:
                  Ext.MessageBox.alert('Echec',
                        'Echec de connexion au serveur ('
                              + action.response.status + ','
                              + action.response.statusText + ')');
                  break;
               case Ext.form.Action.SERVER_INVALID:
                  Ext.Msg.alert('Echec', action.result.errorMessage);
                  break;
               default:
                  Ext.Msg.alert('Echec',
                        'Erreur inconnue : ' + action.failureType);
            }
         }
      });
</script>

</body>

</html>